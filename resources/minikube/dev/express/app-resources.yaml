apiVersion: v1
items:
- apiVersion: tekton.dev/v1alpha1
  kind: Pipeline
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: build-and-deploy-pipeline
    namespace: default
  spec:
    resources:
    - name: source
      type: git
    tasks:
    - name: run-something
      resources:
        inputs:
        - name: source
          resource: source
      taskRef:
        name: echo-hello-world
- apiVersion: tekton.dev/v1alpha1
  kind: PipelineRun
  metadata:
    labels:
      app: test
      kubenix/project-name: kubenix
    name: build-and-deploy-pipeline-run
    namespace: default
  spec:
    pipelineRef:
      name: build-and-deploy-pipeline
    resources:
    - name: source
      resourceRef:
        name: project-git
    serviceAccount: build-bot
    trigger:
      type: manual
- apiVersion: tekton.dev/v1alpha1
  kind: PipelineResource
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: project-git
    namespace: default
  spec:
    params:
    - name: revision
      value: nix-docker-image-builder
    - name: url
      value: https://bitbucket.org/digitalrigbitbucketteam/embracing-nix-docker-k8s-helm-knative
    type: git
- apiVersion: tekton.dev/v1alpha1
  kind: TaskRun
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: echo-hello-world-task-run
    namespace: default
  spec:
    taskRef:
      name: echo-hello-world
- apiVersion: tekton.dev/v1alpha1
  kind: Task
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: echo-hello-world
    namespace: default
  spec:
    inputs:
      resources:
      - name: source
        type: git
    steps:
    - args:
      - hello world
      command:
      - echo
      image: ubuntu
      name: echo
- apiVersion: serving.knative.dev/v1alpha1
  kind: Service
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: express-app
    namespace: dev-functions
  spec:
    template:
      metadata:
        annotations:
          autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
          autoscaling.knative.dev/maxScale: '100'
          autoscaling.knative.dev/metric: concurrency
          autoscaling.knative.dev/target: '5'
      spec:
        containers:
        - env:
          - name: TARGET
            value: Node.js Sample v1
          image: dev.local/express-app:dev-build
          imagePullPolicy: Never
          livenessProbe:
            httpGet:
              path: /healthz
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            requests:
              cpu: 100m
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: build-bot
    namespace: default
  secrets:
  - name: bitbucket-basic-auth
kind: List
labels:
