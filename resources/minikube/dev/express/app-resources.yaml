apiVersion: v1
items:
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: knative-ingress-gateway
    namespace: knative-serving
  spec:
    selector:
      istio: ingressgateway
    servers:
    - hosts:
      - '*.dev-functions.future-is-comming.dev.local'
      port:
        name: http-system
        number: 80
        protocol: HTTP
    - hosts:
      - '*.dev-functions.future-is-comming.dev.local'
      port:
        name: https-system
        number: 443
        protocol: HTTPS
      tls:
        credentialName: ingress-cert
        mode: SIMPLE
        privateKey: sds
        serverCertificate: sds
- apiVersion: tekton.dev/v1alpha1
  kind: Pipeline
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: build-and-deploy-pipeline
    namespace: default
  spec:
    params:
    - default: src
      description: The path to the build context, used by Kaniko - within the workspace
      name: pathToContext
    resources:
    - name: git-source
      type: git
- apiVersion: tekton.dev/v1alpha1
  kind: PipelineResource
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: project-git
    namespace: default
  spec:
    params:
    - name: revision
      value: nix-docker-image-builder
    - name: url
      value: git clone https://damian_baar@bitbucket.org/digitalrigbitbucketteam/embracing-nix-docker-k8s-helm-knative.git
    type: git
- apiVersion: tekton.dev/v1alpha1
  kind: TaskRun
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: echo-hello-world-task-run
    namespace: default
  spec:
    taskRef:
      name: echo-hello-world
- apiVersion: tekton.dev/v1alpha1
  kind: Task
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: echo-hello-world
    namespace: default
  spec:
    steps:
    - args:
      - hello world
      command:
      - echo
      image: ubuntu
      name: echo
- apiVersion: tekton.dev/v1alpha1
  kind: Task
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: source-to-image
    namespace: default
  spec:
    inputs:
      params:
      - default: .
        description: The path to the build context, used by Kaniko - within the workspace
        name: pathToContext
      - default: Dockerfile
        description: The path to the dockerfile to build (relative to the context)
        name: pathToDockerFile
      - description: Url of image repository
        name: imageUrl
      - default: latest
        description: Tag to apply to the built image
        name: imageTag
      resources:
      - name: workspace
        type: git
    steps:
    - args:
      - --dockerfile=${inputs.params.pathToDockerFile}
      - --destination=${inputs.params.imageUrl}:${inputs.params.imageTag}
      - --context=/workspace/git-source/${inputs.params.pathToContext}
      command:
      - /kaniko/executor
      image: gcr.io/kaniko-project/executor
      name: build-and-push
- apiVersion: serving.knative.dev/v1alpha1
  kind: Service
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: express-app
    namespace: dev-functions
  spec:
    template:
      metadata:
        annotations:
          autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
          autoscaling.knative.dev/maxScale: '100'
          autoscaling.knative.dev/metric: concurrency
          autoscaling.knative.dev/target: '5'
      spec:
        containers:
        - env:
          - name: TARGET
            value: Node.js Sample v1
          image: dev.local/express-app:dev-build
          imagePullPolicy: Never
          livenessProbe:
            httpGet:
              path: /healthz
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            requests:
              cpu: 100m
- apiVersion: v1
  data:
    autoTLS: Enabled
    httpprotocol: redirected
    issuerRef: 'name: cert-issuer

      kind: ClusterIssuer

      '
    secretName: ingress-cert
    solverconfig: "dns01:\n  provider: route53\n"
  kind: ConfigMap
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: config-certmanager
    namespace: knative-serving
- apiVersion: v1
  data:
    future-is-comming.dev.local: ''
  kind: ConfigMap
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: config-domain
    namespace: knative-serving
kind: List
labels:
