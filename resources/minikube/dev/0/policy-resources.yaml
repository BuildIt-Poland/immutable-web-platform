apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: policy
    namespace: default
- apiVersion: config.istio.io/v1alpha2
  kind: rule
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: authorization
    namespace: istio-system
  spec:
    actions:
    - handler: opa.istio-system
      instances:
      - authzinstance
- apiVersion: config.istio.io/v1alpha2
  kind: handler
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: opa
    namespace: istio-system
  spec:
    compiledAdapter: opa
    params:
      checkMethod: data.mixerauthz.allow
      failClose: true
      policy:
      - "package mixerauthz\n\nimport data.nix\n\ndefault allow = false\n\nallowed_paths\
        \ = {\"/healthz\"}\n# # express-app.dev-functions.future-is-comming.dev.local\n\
        \nallow {\n  input.subject.user == \"caller\"\n  contains(input.action.service,\
        \ nix.ns.functions)\n}\n\nallow {\n  # allowed_paths[http_request.path]\n\
        \  allowed_paths[input.action.path]\n  # net.cidr_contains(\"CIDDR\", source_address.Address.SocketAddress.address)\n\
        }"
      - 'package nix

        ns = {"argo":"gitops","brigade":"ci","functions":"dev-functions","infra":"local-infra","istio":"istio-system","knative-monitoring":"knative-monitoring","knative-serving":"knative-serving","storage":"storage","system":"system"}

        '
- apiVersion: config.istio.io/v1alpha2
  kind: instance
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: authzinstance
    namespace: istio-system
  spec:
    compiledTemplate: authorization
    params:
      action:
        method: request.method | ""
        namespace: destination.namespace | "default"
        path: request.path | "/"
        properties:
          version: destination.labels["version"] | ""
        service: destination.service.host | ""
      subject:
        groups: request.auth.claims["groups"] | ""
        properties:
          iss: request.auth.claims["iss"] | ""
        user: request.headers["user"] | ""
kind: List
labels:
