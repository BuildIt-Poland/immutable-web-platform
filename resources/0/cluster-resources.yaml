apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: eks
    namespace: default
- apiVersion: certmanager.k8s.io/v1alpha1
  kind: Certificate
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: ingress-cert
    namespace: istio-system
  spec:
    acme:
      config:
      - domains:
        - '*.future-is-comming.dev.buildit.consulting'
        http01:
          ingressClass: istio
    commonName: '*.future-is-comming.dev.buildit.consulting'
    dnsNames:
    - '*.future-is-comming.dev.buildit.consulting'
    issuerRef:
      kind: ClusterIssuer
      name: cert-issuer
    secretName: ingress-cert
- apiVersion: certmanager.k8s.io/v1alpha1
  kind: ClusterIssuer
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: cert-issuer
    namespace: default
  spec:
    acme:
      dns01:
        providers:
        - name: route53
          route53:
            region: eu-west-2
      email: damian.baar@wipro.com
      privateKeySecretRef:
        name: cert-prod
      server: https://acme-v02.api.letsencrypt.org/directory
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: external-dns
        app.kubernetes.io/name: external-dns
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: external-dns
          app.kubernetes.io/managed-by: Tiller
          app.kubernetes.io/name: external-dns
          helm.sh/chart: external-dns-2.5.4
      spec:
        containers:
        - args:
          - --log-level=debug
          - --domain-filter=buildit.consulting
          - --policy=upsert-only
          - --provider=aws
          - --registry=txt
          - --interval=1m
          - --istio-ingress-gateway=istio-system/istio-ingressgateway
          - --source=service
          - --source=ingress
          - --source=istio-gateway
          - --aws-batch-change-size=1000
          env:
          - name: AWS_DEFAULT_REGION
            value: eu-west-2
          image: docker.io/bitnami/external-dns:0.5.16-debian-9-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: external-dns
          ports:
          - containerPort: 7979
            name: http
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccountName: external-dns
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  spec:
    ports:
    - name: http
      port: 8085
      protocol: TCP
      targetPort: 8085
    selector:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/name: aws-cluster-autoscaler
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
  spec:
    ports:
    - name: http
      port: 7979
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/name: external-dns
    type: ClusterIP
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: eks-cluster-autoscaler
        app.kubernetes.io/name: aws-cluster-autoscaler
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: eks-cluster-autoscaler
          app.kubernetes.io/name: aws-cluster-autoscaler
      spec:
        containers:
        - command:
          - ./cluster-autoscaler
          - --cloud-provider=aws
          - --namespace=eks
          - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/future-is-comming-cluster
          - --logtostderr=true
          - --stderrthreshold=info
          - --v=4
          env:
          - name: AWS_REGION
            value: eu-west-2
          image: k8s.gcr.io/cluster-autoscaler:v1.13.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8085
          name: aws-cluster-autoscaler
          ports:
          - containerPort: 8085
          resources: {}
          volumeMounts:
          - mountPath: /etc/ssl/certs/ca-bundle.crt
            name: ssl-certs
            readOnly: true
        nodeSelector:
          kubernetes.io/lifecycle: on-demand
        serviceAccountName: eks-cluster-autoscaler-aws-cluster-autoscaler
        tolerations: []
        volumes:
        - hostPath:
            path: /etc/ssl/certs/ca-certificates.crt
          name: ssl-certs
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  spec:
    maxUnavailable: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: eks-cluster-autoscaler
        app.kubernetes.io/name: aws-cluster-autoscaler
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  rules:
  - apiGroups:
    - ''
    resources:
    - events
    - endpoints
    verbs:
    - create
    - patch
  - apiGroups:
    - ''
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ''
    resources:
    - pods/status
    verbs:
    - update
  - apiGroups:
    - ''
    resourceNames:
    - cluster-autoscaler
    resources:
    - endpoints
    verbs:
    - get
    - update
  - apiGroups:
    - ''
    resources:
    - nodes
    verbs:
    - watch
    - list
    - get
    - update
  - apiGroups:
    - ''
    resources:
    - pods
    - services
    - replicationcontrollers
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - batch
    resources:
    - jobs
    - cronjobs
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - extensions
    resources:
    - replicasets
    - daemonsets
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - watch
    - list
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - replicasets
    - statefulsets
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
  rules:
  - apiGroups:
    - ''
    resources:
    - services
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.istio.io
    resources:
    - gateways
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - externaldns.k8s.io
    resources:
    - dnsendpoints
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
  subjects:
  - kind: ServiceAccount
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: external-dns
  subjects:
  - kind: ServiceAccount
    name: external-dns
    namespace: eks
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - create
  - apiGroups:
    - ''
    resourceNames:
    - cluster-autoscaler-status
    resources:
    - configmaps
    verbs:
    - delete
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
  subjects:
  - kind: ServiceAccount
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
kind: List
labels:
