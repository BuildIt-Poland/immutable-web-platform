apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      iam.amazonaws.com/allowed-roles: '["future-is-comming-dev-cluster*"]'
    labels:
      kubenix/project-name: kubenix
    name: eks
    namespace: default
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      iam.amazonaws.com/allowed-roles: '["future-is-comming-dev-cluster*"]'
    labels:
      kubenix/project-name: kubenix
    name: istio-system
    namespace: default
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-telemetry
    namespace: istio-system
  spec:
    host: istio-telemetry.istio-system.svc.cluster.local
    trafficPolicy:
      connectionPool:
        http:
          http2MaxRequests: 10000
          maxRequestsPerConnection: 10000
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    labels:
      app: gateways
      chart: gateways
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-autogenerated-k8s-ingress
    namespace: istio-system
  spec:
    selector:
      istio: ingressgateway
    servers:
    - hosts:
      - '*'
      port:
        name: http
        number: 80
        protocol: HTTP2
    - hosts:
      - '*'
      port:
        name: https-default
        number: 443
        protocol: HTTPS
      tls:
        mode: SIMPLE
        privateKey: /etc/istio/ingress-certs/tls.key
        serverCertificate: /etc/istio/ingress-certs/tls.crt
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    annotations:
      type: external
    labels:
      kubenix/project-name: kubenix
    name: virtual-services-gateway
    namespace: istio-system
  spec:
    selector:
      istio: ingressgateway
    servers:
    - hosts:
      - monitoring.future-is-comming.dev.buildit.consulting
      - topology.future-is-comming.dev.buildit.consulting
      - storage.future-is-comming.dev.buildit.consulting
      - gitops.future-is-comming.dev.buildit.consulting
      - tracing.future-is-comming.dev.buildit.consulting
      - ci.future-is-comming.dev.buildit.consulting
      port:
        name: http-system
        number: 80
        protocol: HTTP
    - hosts:
      - monitoring.future-is-comming.dev.buildit.consulting
      - topology.future-is-comming.dev.buildit.consulting
      - storage.future-is-comming.dev.buildit.consulting
      - gitops.future-is-comming.dev.buildit.consulting
      - tracing.future-is-comming.dev.buildit.consulting
      - ci.future-is-comming.dev.buildit.consulting
      port:
        name: https-system
        number: 443
        protocol: HTTPS
      tls:
        credentialName: ingress-cert
        mode: SIMPLE
        privateKey: sds
        serverCertificate: sds
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: ci-services
    namespace: istio-system
  spec:
    gateways:
    - virtual-services-gateway
    hosts:
    - ci.future-is-comming.dev.buildit.consulting
    http:
    - route:
      - destination:
          host: brigade-kashti.ci.svc.cluster.local
          port:
            number: 80
    tls:
    - match:
      - port: 443
        sniHosts:
        - ci.future-is-comming.dev.buildit.consulting
      route:
      - destination:
          host: brigade-kashti.ci.svc.cluster.local
          port:
            number: 80
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: gitops-services
    namespace: istio-system
  spec:
    gateways:
    - virtual-services-gateway
    hosts:
    - gitops.future-is-comming.dev.buildit.consulting
    http:
    - route:
      - destination:
          host: argocd-server.gitops.svc.cluster.local
          port:
            number: 443
    tls:
    - match:
      - port: 443
        sniHosts:
        - gitops.future-is-comming.dev.buildit.consulting
      route:
      - destination:
          host: argocd-server.gitops.svc.cluster.local
          port:
            number: 443
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: monitoring-services
    namespace: istio-system
  spec:
    gateways:
    - virtual-services-gateway
    hosts:
    - monitoring.future-is-comming.dev.buildit.consulting
    http:
    - route:
      - destination:
          host: grafana.knative-monitoring.svc.cluster.local
          port:
            number: 30802
    tls:
    - match:
      - port: 443
        sniHosts:
        - monitoring.future-is-comming.dev.buildit.consulting
      route:
      - destination:
          host: grafana.knative-monitoring.svc.cluster.local
          port:
            number: 30802
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: storage-services
    namespace: istio-system
  spec:
    gateways:
    - virtual-services-gateway
    hosts:
    - storage.future-is-comming.dev.buildit.consulting
    http:
    - route:
      - destination:
          host: rook-ceph-mgr-dashboard.storage.svc.cluster.local
          port:
            number: 8443
    tls:
    - match:
      - port: 443
        sniHosts:
        - storage.future-is-comming.dev.buildit.consulting
      route:
      - destination:
          host: rook-ceph-mgr-dashboard.storage.svc.cluster.local
          port:
            number: 8443
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: topology-services
    namespace: istio-system
  spec:
    gateways:
    - virtual-services-gateway
    hosts:
    - topology.future-is-comming.dev.buildit.consulting
    http:
    - route:
      - destination:
          host: weave-scope-app.istio-system.svc.cluster.local
          port:
            number: 80
    tls:
    - match:
      - port: 443
        sniHosts:
        - topology.future-is-comming.dev.buildit.consulting
      route:
      - destination:
          host: weave-scope-app.istio-system.svc.cluster.local
          port:
            number: 80
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: tracing-services
    namespace: istio-system
  spec:
    gateways:
    - virtual-services-gateway
    hosts:
    - tracing.future-is-comming.dev.buildit.consulting
    http:
    - route:
      - destination:
          host: zipkin.istio-system.svc.cluster.local
          port:
            number: 9411
    tls:
    - match:
      - port: 443
        sniHosts:
        - tracing.future-is-comming.dev.buildit.consulting
      route:
      - destination:
          host: zipkin.istio-system.svc.cluster.local
          port:
            number: 9411
- apiVersion: config.istio.io/v1alpha2
  kind: attributemanifest
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istioproxy
    namespace: istio-system
  spec:
    attributes:
      api.operation:
        valueType: STRING
      api.protocol:
        valueType: STRING
      api.service:
        valueType: STRING
      api.version:
        valueType: STRING
      check.cache_hit:
        valueType: BOOL
      check.error_code:
        valueType: INT64
      check.error_message:
        valueType: STRING
      connection.duration:
        valueType: DURATION
      connection.event:
        valueType: STRING
      connection.id:
        valueType: STRING
      connection.mtls:
        valueType: BOOL
      connection.received.bytes:
        valueType: INT64
      connection.received.bytes_total:
        valueType: INT64
      connection.requested_server_name:
        valueType: STRING
      connection.sent.bytes:
        valueType: INT64
      connection.sent.bytes_total:
        valueType: INT64
      context.protocol:
        valueType: STRING
      context.proxy_error_code:
        valueType: STRING
      context.reporter.kind:
        valueType: STRING
      context.reporter.local:
        valueType: BOOL
      context.reporter.uid:
        valueType: STRING
      context.time:
        valueType: TIMESTAMP
      context.timestamp:
        valueType: TIMESTAMP
      destination.port:
        valueType: INT64
      destination.principal:
        valueType: STRING
      destination.uid:
        valueType: STRING
      origin.ip:
        valueType: IP_ADDRESS
      origin.uid:
        valueType: STRING
      origin.user:
        valueType: STRING
      quota.cache_hit:
        valueType: BOOL
      rbac.permissive.effective_policy_id:
        valueType: STRING
      rbac.permissive.response_code:
        valueType: STRING
      request.api_key:
        valueType: STRING
      request.auth.audiences:
        valueType: STRING
      request.auth.claims:
        valueType: STRING_MAP
      request.auth.presenter:
        valueType: STRING
      request.auth.principal:
        valueType: STRING
      request.auth.raw_claims:
        valueType: STRING
      request.headers:
        valueType: STRING_MAP
      request.host:
        valueType: STRING
      request.id:
        valueType: STRING
      request.method:
        valueType: STRING
      request.path:
        valueType: STRING
      request.query_params:
        valueType: STRING_MAP
      request.reason:
        valueType: STRING
      request.referer:
        valueType: STRING
      request.scheme:
        valueType: STRING
      request.size:
        valueType: INT64
      request.time:
        valueType: TIMESTAMP
      request.total_size:
        valueType: INT64
      request.url_path:
        valueType: STRING
      request.useragent:
        valueType: STRING
      response.code:
        valueType: INT64
      response.duration:
        valueType: DURATION
      response.grpc_message:
        valueType: STRING
      response.grpc_status:
        valueType: STRING
      response.headers:
        valueType: STRING_MAP
      response.size:
        valueType: INT64
      response.time:
        valueType: TIMESTAMP
      response.total_size:
        valueType: INT64
      source.principal:
        valueType: STRING
      source.uid:
        valueType: STRING
      source.user:
        valueType: STRING
- apiVersion: config.istio.io/v1alpha2
  kind: attributemanifest
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: kubernetes
    namespace: istio-system
  spec:
    attributes:
      destination.container.name:
        valueType: STRING
      destination.ip:
        valueType: IP_ADDRESS
      destination.labels:
        valueType: STRING_MAP
      destination.metadata:
        valueType: STRING_MAP
      destination.name:
        valueType: STRING
      destination.namespace:
        valueType: STRING
      destination.owner:
        valueType: STRING
      destination.service.host:
        valueType: STRING
      destination.service.name:
        valueType: STRING
      destination.service.namespace:
        valueType: STRING
      destination.service.uid:
        valueType: STRING
      destination.serviceAccount:
        valueType: STRING
      destination.workload.name:
        valueType: STRING
      destination.workload.namespace:
        valueType: STRING
      destination.workload.uid:
        valueType: STRING
      source.ip:
        valueType: IP_ADDRESS
      source.labels:
        valueType: STRING_MAP
      source.metadata:
        valueType: STRING_MAP
      source.name:
        valueType: STRING
      source.namespace:
        valueType: STRING
      source.owner:
        valueType: STRING
      source.serviceAccount:
        valueType: STRING
      source.services:
        valueType: STRING
      source.workload.name:
        valueType: STRING
      source.workload.namespace:
        valueType: STRING
      source.workload.uid:
        valueType: STRING
- apiVersion: config.istio.io/v1alpha2
  kind: rule
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: kubeattrgenrulerule
    namespace: istio-system
  spec:
    actions:
    - handler: kubernetesenv
      instances:
      - attributes
- apiVersion: config.istio.io/v1alpha2
  kind: rule
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: tcpkubeattrgenrulerule
    namespace: istio-system
  spec:
    actions:
    - handler: kubernetesenv
      instances:
      - attributes
    match: context.protocol == "tcp"
- apiVersion: config.istio.io/v1alpha2
  kind: handler
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: kubernetesenv
    namespace: istio-system
  spec:
    compiledAdapter: kubernetesenv
- apiVersion: config.istio.io/v1alpha2
  kind: instance
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: attributes
    namespace: istio-system
  spec:
    attributeBindings:
      destination.container.name: $out.destination_container_name | "unknown"
      destination.ip: $out.destination_pod_ip | ip("0.0.0.0")
      destination.labels: $out.destination_labels | emptyStringMap()
      destination.name: $out.destination_pod_name | "unknown"
      destination.namespace: $out.destination_namespace | "default"
      destination.owner: $out.destination_owner | "unknown"
      destination.serviceAccount: $out.destination_service_account_name | "unknown"
      destination.uid: $out.destination_pod_uid | "unknown"
      destination.workload.name: $out.destination_workload_name | "unknown"
      destination.workload.namespace: $out.destination_workload_namespace | "unknown"
      destination.workload.uid: $out.destination_workload_uid | "unknown"
      source.ip: $out.source_pod_ip | ip("0.0.0.0")
      source.labels: $out.source_labels | emptyStringMap()
      source.name: $out.source_pod_name | "unknown"
      source.namespace: $out.source_namespace | "default"
      source.owner: $out.source_owner | "unknown"
      source.serviceAccount: $out.source_service_account_name | "unknown"
      source.uid: $out.source_pod_uid | "unknown"
      source.workload.name: $out.source_workload_name | "unknown"
      source.workload.namespace: $out.source_workload_namespace | "unknown"
      source.workload.uid: $out.source_workload_uid | "unknown"
    compiledTemplate: kubernetes
    params:
      destination_port: destination.port | 0
      destination_uid: destination.uid | ""
      source_ip: source.ip | ip("0.0.0.0")
      source_uid: source.uid | ""
- apiVersion: certmanager.k8s.io/v1alpha1
  kind: Certificate
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: ingress-cert
    namespace: istio-system
  spec:
    acme:
      config:
      - dns01:
          provider: route53
        domains:
        - '*.future-is-comming.dev.buildit.consulting'
        - '*.functions.future-is-comming.dev.buildit.consulting'
    commonName: '*.future-is-comming.dev.buildit.consulting'
    dnsNames:
    - '*.future-is-comming.dev.buildit.consulting'
    - '*.functions.future-is-comming.dev.buildit.consulting'
    issuerRef:
      kind: ClusterIssuer
      name: cert-issuer
    secretName: ingress-cert
- apiVersion: certmanager.k8s.io/v1alpha1
  kind: ClusterIssuer
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: cert-issuer
    namespace: default
  spec:
    acme:
      dns01:
        providers:
        - name: route53
          route53:
            region: eu-west-2
      email: damian.baar@wipro.com
      privateKeySecretRef:
        name: cert-prod
      server: https://acme-v02.api.letsencrypt.org/directory
- apiVersion: certmanager.k8s.io/v1alpha1
  kind: ClusterIssuer
  metadata:
    labels:
      app: certmanager
      chart: certmanager
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: letsencrypt
    namespace: istio-system
  spec:
    acme:
      email: damian.baar@wipro.com
      http01: {}
      privateKeySecretRef:
        name: letsencrypt
      server: https://acme-v02.api.letsencrypt.org/directory
- apiVersion: certmanager.k8s.io/v1alpha1
  kind: ClusterIssuer
  metadata:
    labels:
      app: certmanager
      chart: certmanager
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: letsencrypt-staging
    namespace: istio-system
  spec:
    acme:
      email: damian.baar@wipro.com
      http01: {}
      privateKeySecretRef:
        name: letsencrypt-staging
      server: https://acme-staging-v02.api.letsencrypt.org/directory
- apiVersion: admissionregistration.k8s.io/v1beta1
  kind: MutatingWebhookConfiguration
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
  webhooks:
  - clientConfig:
      caBundle: ''
      service:
        name: istio-sidecar-injector
        namespace: istio-system
        path: /inject
    failurePolicy: Fail
    name: sidecar-injector.istio.io
    namespaceSelector:
      matchLabels:
        istio-injection: enabled
    rules:
    - apiGroups:
      - ''
      apiVersions:
      - v1
      operations:
      - CREATE
      resources:
      - pods
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    labels:
      app: nodeagent
      chart: nodeagent
      heritage: Tiller
      istio: nodeagent
      kubenix/project-name: kubenix
      release: istio
    name: istio-nodeagent
    namespace: istio-system
  spec:
    selector:
      matchLabels:
        istio: nodeagent
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: nodeagent
          chart: nodeagent
          heritage: Tiller
          istio: nodeagent
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - env:
          - name: CA_ADDR
            value: istio-citadel:8060
          - name: CA_PROVIDER
            value: Citadel
          - name: Plugins
            value: ''
          - name: Trust_Domain
            value: ''
          - name: VALID_TOKEN
            value: 'true'
          image: docker.io/istio/node-agent-k8s:1.2.4
          imagePullPolicy: IfNotPresent
          name: nodeagent
          volumeMounts:
          - mountPath: /var/run/sds
            name: sdsudspath
        serviceAccountName: istio-nodeagent-service-account
        volumes:
        - hostPath:
            path: /var/run/sds
          name: sdsudspath
    updateStrategy:
      type: RollingUpdate
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: certmanager
      chart: certmanager
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: certmanager
    namespace: istio-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: certmanager
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: certmanager
          chart: certmanager
          heritage: Tiller
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - args:
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=$(POD_NAMESPACE)
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v0.6.2
          imagePullPolicy: IfNotPresent
          name: certmanager
          resources: {}
        serviceAccountName: certmanager
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: external-dns
        app.kubernetes.io/name: external-dns
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: external-dns
          app.kubernetes.io/managed-by: Tiller
          app.kubernetes.io/name: external-dns
          helm.sh/chart: external-dns-2.5.4
      spec:
        containers:
        - args:
          - --log-level=debug
          - --domain-filter=buildit.consulting
          - --policy=upsert-only
          - --provider=aws
          - --registry=txt
          - --interval=1m
          - --istio-ingress-gateway=istio-system/istio-ingressgateway
          - --source=service
          - --source=ingress
          - --source=istio-gateway
          - --aws-batch-change-size=1000
          env:
          - name: AWS_DEFAULT_REGION
            value: eu-west-2
          image: docker.io/bitnami/external-dns:0.5.16-debian-9-r0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: external-dns
          ports:
          - containerPort: 7979
            name: http
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
        securityContext:
          fsGroup: 1001
          runAsUser: 1001
        serviceAccountName: external-dns
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      istio: citadel
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel
    namespace: istio-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        istio: citadel
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: security
          chart: security
          heritage: Tiller
          istio: citadel
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - args:
          - --sds-enabled=true
          - --append-dns-names=true
          - --grpc-port=8060
          - --citadel-storage-namespace=istio-system
          - --custom-dns-names=istio-pilot-service-account.istio-system:istio-pilot.istio-system
          - --monitoring-port=15014
          - --self-signed-ca=true
          - --workload-cert-ttl=2160h
          image: docker.io/istio/citadel:1.2.4
          imagePullPolicy: IfNotPresent
          name: citadel
          resources:
            requests:
              cpu: 10m
        serviceAccountName: istio-citadel-service-account
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      istio: galley
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley
    namespace: istio-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        istio: galley
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: galley
          chart: galley
          heritage: Tiller
          istio: galley
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - command:
          - /usr/local/bin/galley
          - server
          - --meshConfigFile=/etc/mesh-config/mesh
          - --livenessProbeInterval=1s
          - --livenessProbePath=/healthliveness
          - --readinessProbePath=/healthready
          - --readinessProbeInterval=1s
          - --deployment-namespace=istio-system
          - --insecure=true
          - --validation-webhook-config-file
          - /etc/config/validatingwebhookconfiguration.yaml
          - --monitoringPort=15014
          - --log_output_level=default:info
          image: docker.io/istio/galley:1.2.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/local/bin/galley
              - probe
              - --probe-path=/healthliveness
              - --interval=10s
            initialDelaySeconds: 5
            periodSeconds: 5
          name: galley
          ports:
          - containerPort: 15014
          - containerPort: 443
          - containerPort: 9901
          readinessProbe:
            exec:
              command:
              - /usr/local/bin/galley
              - probe
              - --probe-path=/healthready
              - --interval=10s
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/certs
            name: certs
            readOnly: true
          - mountPath: /etc/config
            name: config
            readOnly: true
          - mountPath: /etc/mesh-config
            name: mesh-config
            readOnly: true
        serviceAccountName: istio-galley-service-account
        volumes:
        - name: certs
          secret:
            secretName: istio.istio-galley-service-account
        - configMap:
            name: istio-galley-configuration
          name: config
        - configMap:
            name: istio
          name: mesh-config
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      istio: ingressgateway
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway
    namespace: istio-system
  spec:
    selector:
      matchLabels:
        app: istio-ingressgateway
        istio: ingressgateway
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: istio-ingressgateway
          chart: gateways
          heritage: Tiller
          istio: ingressgateway
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - env:
          - name: ENABLE_INGRESS_GATEWAY_SDS
            value: 'true'
          - name: ENABLE_WORKLOAD_SDS
            value: 'false'
          - name: INGRESS_GATEWAY_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/node-agent-k8s:1.2.4
          imagePullPolicy: IfNotPresent
          name: ingress-sds
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
          - mountPath: /var/run/ingress_gateway
            name: ingressgatewaysdsudspath
        - args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --log_output_level=default:info
          - --drainDuration
          - 45s
          - --parentShutdownDuration
          - 1m0s
          - --connectTimeout
          - 10s
          - --serviceCluster
          - istio-ingressgateway
          - --zipkinAddress
          - zipkin:9411
          - --proxyAdminPort
          - '15000'
          - --statusPort
          - '15020'
          - --controlPlaneAuthPolicy
          - NONE
          - --discoveryAddress
          - istio-pilot:15010
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          - name: ISTIO_META_USER_SDS
            value: 'true'
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/proxyv2:1.2.4
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15020
          - containerPort: 15029
          - containerPort: 15030
          - containerPort: 15031
          - containerPort: 15032
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          - containerPort: 15443
          - containerPort: 31400
          - containerPort: 443
          - containerPort: 80
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-ca-certs
            name: ingressgateway-ca-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-certs
            name: ingressgateway-certs
            readOnly: true
          - mountPath: /var/run/ingress_gateway
            name: ingressgatewaysdsudspath
          - mountPath: /var/run/sds
            name: sdsudspath
            readOnly: true
        serviceAccountName: istio-ingressgateway-service-account
        volumes:
        - name: ingressgateway-ca-certs
          secret:
            optional: true
            secretName: istio-ingressgateway-ca-certs
        - name: ingressgateway-certs
          secret:
            optional: true
            secretName: istio-ingressgateway-certs
        - emptyDir: {}
          name: ingressgatewaysdsudspath
        - name: istio-certs
          secret:
            optional: true
            secretName: istio.istio-ingressgateway-service-account
        - hostPath:
            path: /var/run/sds
          name: sdsudspath
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      checksum/config-volume: f8da08b6b8c170dde721efd680270b2901e750d4aa186ebb6c22bef5b78a43f9
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      istio: pilot
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot
    namespace: istio-system
  spec:
    selector:
      matchLabels:
        istio: pilot
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: pilot
          chart: pilot
          heritage: Tiller
          istio: pilot
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - args:
          - discovery
          - --monitoringAddr=:15014
          - --log_output_level=default:info
          - --domain
          - cluster.local
          - --secureGrpcAddr
          - ''
          - --keepaliveMaxServerConnectionAge
          - 30m
          env:
          - name: GODEBUG
            value: gctrace=1
          - name: PILOT_DISABLE_XDS_MARSHALING_TO_ANY
            value: '1'
          - name: PILOT_PUSH_THROTTLE
            value: '100'
          - name: PILOT_TRACE_SAMPLING
            value: '100'
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/pilot:1.2.4
          imagePullPolicy: IfNotPresent
          name: discovery
          ports:
          - containerPort: 15010
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 2048Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /etc/istio/config
            name: config-volume
        - args:
          - proxy
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --serviceCluster
          - istio-pilot
          - --templateFile
          - /etc/istio/proxy/envoy_pilot.yaml.tmpl
          - --controlPlaneAuthPolicy
          - NONE
          env:
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/proxyv2:1.2.4
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15003
          - containerPort: 15005
          - containerPort: 15007
          - containerPort: 15011
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /var/run/sds
            name: sds-uds-path
            readOnly: true
        serviceAccountName: istio-pilot-service-account
        volumes:
        - configMap:
            name: istio
          name: config-volume
        - name: istio-certs
          secret:
            optional: true
            secretName: istio.istio-pilot-service-account
        - hostPath:
            path: /var/run/sds
          name: sds-uds-path
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        istio: sidecar-injector
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: sidecarInjectorWebhook
          chart: sidecarInjectorWebhook
          heritage: Tiller
          istio: sidecar-injector
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - args:
          - --caCertFile=/etc/istio/certs/root-cert.pem
          - --tlsCertFile=/etc/istio/certs/cert-chain.pem
          - --tlsKeyFile=/etc/istio/certs/key.pem
          - --injectConfig=/etc/istio/inject/config
          - --meshConfig=/etc/istio/config/mesh
          - --healthCheckInterval=2s
          - --healthCheckFile=/health
          image: docker.io/istio/sidecar_injector:1.2.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/local/bin/sidecar-injector
              - probe
              - --probe-path=/health
              - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          name: sidecar-injector-webhook
          readinessProbe:
            exec:
              command:
              - /usr/local/bin/sidecar-injector
              - probe
              - --probe-path=/health
              - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          resources:
            requests:
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/istio/certs
            name: certs
            readOnly: true
          - mountPath: /etc/istio/config
            name: config-volume
            readOnly: true
          - mountPath: /etc/istio/inject
            name: inject-config
            readOnly: true
        serviceAccountName: istio-sidecar-injector-service-account
        volumes:
        - name: certs
          secret:
            secretName: istio.istio-sidecar-injector-service-account
        - configMap:
            name: istio
          name: config-volume
        - configMap:
            items:
            - key: config
              path: config
            - key: values
              path: values
            name: istio-sidecar-injector
          name: inject-config
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: istio-mixer
      chart: mixer
      heritage: Tiller
      istio: mixer
      kubenix/project-name: kubenix
      release: istio
    name: istio-telemetry
    namespace: istio-system
  spec:
    selector:
      matchLabels:
        istio: mixer
        istio-mixer-type: telemetry
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: telemetry
          chart: mixer
          heritage: Tiller
          istio: mixer
          istio-mixer-type: telemetry
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - args:
          - proxy
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --serviceCluster
          - istio-telemetry
          - --templateFile
          - /etc/istio/proxy/envoy_telemetry.yaml.tmpl
          - --controlPlaneAuthPolicy
          - NONE
          env:
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/proxyv2:1.2.4
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15004
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          - containerPort: 9091
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /sock
            name: uds-socket
          - mountPath: /var/run/sds
            name: sds-uds-path
            readOnly: true
        - args:
          - --monitoringPort=15014
          - --address
          - unix:///sock/mixer.socket
          - --log_output_level=default:info
          - --configStoreURL=mcp://istio-galley.istio-system.svc:9901
          - --configDefaultNamespace=istio-system
          - --useAdapterCRDs=true
          - --useTemplateCRDs=false
          - --trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans
          - --averageLatencyThreshold
          - 100ms
          - --loadsheddingMode
          - enforce
          env:
          - name: GODEBUG
            value: gctrace=1
          - name: GOMAXPROCS
            value: '6'
          image: docker.io/istio/mixer:1.2.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /version
              port: 15014
            initialDelaySeconds: 5
            periodSeconds: 5
          name: mixer
          ports:
          - containerPort: 15014
          - containerPort: 42422
          resources:
            limits:
              cpu: 4800m
              memory: 4G
            requests:
              cpu: 1000m
              memory: 1G
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /sock
            name: uds-socket
          - mountPath: /var/run/secrets/istio.io/telemetry/adapter
            name: telemetry-adapter-secret
            readOnly: true
        serviceAccountName: istio-mixer-service-account
        volumes:
        - name: istio-certs
          secret:
            optional: true
            secretName: istio.istio-mixer-service-account
        - hostPath:
            path: /var/run/sds
          name: sds-uds-path
        - name: telemetry-adapter-secret
          secret:
            optional: true
            secretName: telemetry-adapter-secret
        - emptyDir: {}
          name: uds-socket
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: prometheus
    namespace: istio-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: prometheus
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: prometheus
          chart: prometheus
          heritage: Tiller
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - args:
          - --storage.tsdb.retention=6h
          - --config.file=/etc/prometheus/prometheus.yml
          image: docker.io/prom/prometheus:v2.8.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
          name: prometheus
          ports:
          - containerPort: 9090
            name: http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
          resources:
            requests:
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/istio-certs
            name: istio-certs
          - mountPath: /etc/prometheus
            name: config-volume
        serviceAccountName: prometheus
        volumes:
        - configMap:
            name: prometheus
          name: config-volume
        - name: istio-certs
          secret:
            defaultMode: 420
            secretName: istio.default
- apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      istio: ingressgateway
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway
    namespace: istio-system
  spec:
    maxReplicas: 1
    metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: istio-ingressgateway
- apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot
    namespace: istio-system
  spec:
    maxReplicas: 5
    metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
    minReplicas: 2
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: istio-pilot
- apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-telemetry
    namespace: istio-system
  spec:
    maxReplicas: 5
    metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: istio-telemetry
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      helm.sh/hook: post-delete
      helm.sh/hook-delete-policy: hook-succeeded
      helm.sh/hook-weight: '3'
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-cleanup-secrets-1.2.4
    namespace: istio-system
  spec:
    template:
      metadata:
        labels:
          app: security
          chart: security
          heritage: Tiller
          release: istio
        name: istio-cleanup-secrets
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - command:
          - /bin/bash
          - -c
          - "kubectl get secret --all-namespaces | grep \"istio.io/key-and-cert\"\
            \ |  while read -r entry; do\n  ns=$(echo $entry | awk '{print $1}');\n\
            \  name=$(echo $entry | awk '{print $2}');\n  kubectl delete secret $name\
            \ -n $ns;\ndone\n"
          image: docker.io/istio/kubectl:1.2.4
          imagePullPolicy: IfNotPresent
          name: kubectl
        restartPolicy: OnFailure
        serviceAccountName: istio-cleanup-secrets-service-account
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-delete-policy: hook-succeeded
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-post-install-1.2.4
    namespace: istio-system
  spec:
    template:
      metadata:
        labels:
          app: security
          chart: security
          heritage: Tiller
          release: istio
        name: istio-security-post-install
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
                - key: kubernetes.io/lifecycle
                  operator: In
                  values:
                  - on-demand
        containers:
        - command:
          - /bin/bash
          - /tmp/security/run.sh
          - /tmp/security/custom-resources.yaml
          image: docker.io/istio/kubectl:1.2.4
          imagePullPolicy: IfNotPresent
          name: kubectl
          volumeMounts:
          - mountPath: /tmp/security
            name: tmp-configmap-security
        restartPolicy: OnFailure
        serviceAccountName: istio-security-post-install-account
        volumes:
        - configMap:
            name: istio-security-custom-resources
          name: tmp-configmap-security
- apiVersion: v1
  data:
    mesh: "# Set the following variable to true to disable policy checks by the Mixer.\n\
      # Note that metrics will still be reported to the Mixer.\ndisablePolicyChecks:\
      \ true\n\n# Set enableTracing to false to disable request tracing.\nenableTracing:\
      \ true\n\n# Set accessLogFile to empty string to disable access log.\naccessLogFile:\
      \ \"\"\n\n# If accessLogEncoding is TEXT, value will be used directly as the\
      \ log format\n# example: \"[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\
      \ %PROTOCOL%\\n\"\n# If AccessLogEncoding is JSON, value will be parsed as map[string]string\n\
      # example: '{\"start_time\": \"%START_TIME%\", \"req_method\": \"%REQ(:METHOD)%\"\
      }'\n# Leave empty to use default log format\naccessLogFormat: \"\"\n\n# Set\
      \ accessLogEncoding to JSON or TEXT to configure sidecar access log\naccessLogEncoding:\
      \ 'TEXT'\nmixerReportServer: istio-telemetry.istio-system.svc.cluster.local:9091\n\
      # Let Pilot give ingresses the public IP of the Istio ingressgateway\ningressService:\
      \ istio-ingressgateway\n\n# Default connect timeout for dynamic clusters generated\
      \ by Pilot and returned via XDS\nconnectTimeout: 10s\n\n# DNS refresh rate for\
      \ Envoy clusters of type STRICT_DNS\ndnsRefreshRate: 300s\n\n# Unix Domain Socket\
      \ through which envoy communicates with NodeAgent SDS to get\n# key/cert for\
      \ mTLS. Use secret-mount files instead of SDS if set to empty. \nsdsUdsPath:\
      \ unix:/var/run/sds/uds_path\n\n# This flag is used by secret discovery service(SDS).\
      \ \n# If set to true(prerequisite: https://kubernetes.io/docs/concepts/storage/volumes/#projected),\
      \ Istio will inject volumes mount \n# for k8s service account JWT, so that K8s\
      \ API server mounts k8s service account JWT to envoy container, which \n# will\
      \ be used to generate key/cert eventually. This isn't supported for non-k8s\
      \ case.\nenableSdsTokenMount: false\n\n# This flag is used by secret discovery\
      \ service(SDS). \n# If set to true, envoy will fetch normal k8s service account\
      \ JWT from '/var/run/secrets/kubernetes.io/serviceaccount/token' \n# (https://kubernetes.io/docs/tasks/access-application-cluster/access-cluster/#accessing-the-api-from-a-pod)\
      \ \n# and pass to sds server, which will be used to request key/cert eventually.\
      \ \n# this flag is ignored if enableSdsTokenMount is set.\n# This isn't supported\
      \ for non-k8s case.\nsdsUseK8sSaJwt: true\n\n# The trust domain corresponds\
      \ to the trust root of a system.\n# Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain\n\
      trustDomain: \n\n# Set the default behavior of the sidecar for handling outbound\
      \ traffic from the application:\n# ALLOW_ANY - outbound traffic to unknown destinations\
      \ will be allowed, in case there are no\n#   services or ServiceEntries for\
      \ the destination port\n# REGISTRY_ONLY - restrict outbound traffic to services\
      \ defined in the service registry as well\n#   as those defined through ServiceEntries\
      \  \noutboundTrafficPolicy:\n  mode: ALLOW_ANY\n\nlocalityLbSetting:\n  {}\n\
      \  \n\n# The namespace to treat as the administrative root namespace for istio\n\
      # configuration.    \nrootNamespace: istio-system\nconfigSources:\n- address:\
      \ istio-galley.istio-system.svc:9901\n\ndefaultConfig:\n  #\n  # TCP connection\
      \ timeout between Envoy & the application, and between Envoys.  Used for static\
      \ clusters\n  # defined in Envoy's configuration file\n  connectTimeout: 10s\n\
      \  #\n  ### ADVANCED SETTINGS #############\n  # Where should envoy's configuration\
      \ be stored in the istio-proxy container\n  configPath: \"/etc/istio/proxy\"\
      \n  binaryPath: \"/usr/local/bin/envoy\"\n  # The pseudo service name used for\
      \ Envoy.\n  serviceCluster: istio-proxy\n  # These settings that determine how\
      \ long an old Envoy\n  # process should be kept alive after an occasional reload.\n\
      \  drainDuration: 45s\n  parentShutdownDuration: 1m0s\n  #\n  # The mode used\
      \ to redirect inbound connections to Envoy. This setting\n  # has no effect\
      \ on outbound traffic: iptables REDIRECT is always used for\n  # outbound connections.\n\
      \  # If \"REDIRECT\", use iptables REDIRECT to NAT and redirect to Envoy.\n\
      \  # The \"REDIRECT\" mode loses source addresses during redirection.\n  # If\
      \ \"TPROXY\", use iptables TPROXY to redirect to Envoy.\n  # The \"TPROXY\"\
      \ mode preserves both the source and destination IP\n  # addresses and ports,\
      \ so that they can be used for advanced filtering\n  # and manipulation.\n \
      \ # The \"TPROXY\" mode also configures the sidecar to run with the\n  # CAP_NET_ADMIN\
      \ capability, which is required to use TPROXY.\n  #interceptionMode: REDIRECT\n\
      \  #\n  # Port where Envoy listens (on local host) for admin commands\n  # You\
      \ can exec into the istio-proxy container in a pod and\n  # curl the admin port\
      \ (curl http://localhost:15000/) to obtain\n  # diagnostic information from\
      \ Envoy. See\n  # https://lyft.github.io/envoy/docs/operations/admin.html\n\
      \  # for more details\n  proxyAdminPort: 15000\n  #\n  # Set concurrency to\
      \ a specific number to control the number of Proxy worker threads.\n  # If set\
      \ to 0 (default), then start worker thread for each CPU thread/core.\n  concurrency:\
      \ 2\n  #\n  tracing:\n    zipkin:\n      # Address of the Zipkin collector\n\
      \      address: zipkin.istio-system:9411\n  #\n  # Mutual TLS authentication\
      \ between sidecars and istio control plane.\n  controlPlaneAuthPolicy: NONE\n\
      \  #\n  # Address where istio Pilot service is running\n  discoveryAddress:\
      \ istio-pilot.istio-system:15010"
    meshNetworks: 'networks: {}'
  kind: ConfigMap
  metadata:
    labels:
      app: istio
      chart: istio
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio
    namespace: istio-system
- apiVersion: v1
  data:
    validatingwebhookconfiguration.yaml: "apiVersion: admissionregistration.k8s.io/v1beta1\n\
      kind: ValidatingWebhookConfiguration\nmetadata:\n  name: istio-galley\n  labels:\n\
      \    app: galley\n    chart: galley\n    heritage: Tiller\n    release: istio\n\
      \    istio: galley\nwebhooks:\n  - name: pilot.validation.istio.io\n    clientConfig:\n\
      \      service:\n        name: istio-galley\n        namespace: istio-system\n\
      \        path: \"/admitpilot\"\n      caBundle: \"\"\n    rules:\n      - operations:\n\
      \        - CREATE\n        - UPDATE\n        apiGroups:\n        - config.istio.io\n\
      \        apiVersions:\n        - v1alpha2\n        resources:\n        - httpapispecs\n\
      \        - httpapispecbindings\n        - quotaspecs\n        - quotaspecbindings\n\
      \      - operations:\n        - CREATE\n        - UPDATE\n        apiGroups:\n\
      \        - rbac.istio.io\n        apiVersions:\n        - \"*\"\n        resources:\n\
      \        - \"*\"\n      - operations:\n        - CREATE\n        - UPDATE\n\
      \        apiGroups:\n        - authentication.istio.io\n        apiVersions:\n\
      \        - \"*\"\n        resources:\n        - \"*\"\n      - operations:\n\
      \        - CREATE\n        - UPDATE\n        apiGroups:\n        - networking.istio.io\n\
      \        apiVersions:\n        - \"*\"\n        resources:\n        - destinationrules\n\
      \        - envoyfilters\n        - gateways\n        - serviceentries\n    \
      \    - sidecars\n        - virtualservices\n    failurePolicy: Fail\n    sideEffects:\
      \ None\n  - name: mixer.validation.istio.io\n    clientConfig:\n      service:\n\
      \        name: istio-galley\n        namespace: istio-system\n        path:\
      \ \"/admitmixer\"\n      caBundle: \"\"\n    rules:\n      - operations:\n \
      \       - CREATE\n        - UPDATE\n        apiGroups:\n        - config.istio.io\n\
      \        apiVersions:\n        - v1alpha2\n        resources:\n        - rules\n\
      \        - attributemanifests\n        - circonuses\n        - deniers\n   \
      \     - fluentds\n        - kubernetesenvs\n        - listcheckers\n       \
      \ - memquotas\n        - noops\n        - opas\n        - prometheuses\n   \
      \     - rbacs\n        - solarwindses\n        - stackdrivers\n        - cloudwatches\n\
      \        - dogstatsds\n        - statsds\n        - stdios\n        - apikeys\n\
      \        - authorizations\n        - checknothings\n        # - kuberneteses\n\
      \        - listentries\n        - logentries\n        - metrics\n        - quotas\n\
      \        - reportnothings\n        - tracespans\n        - adapters\n      \
      \  - handlers\n        - instances\n        - templates\n        - zipkins\n\
      \    failurePolicy: Fail\n    sideEffects: None"
  kind: ConfigMap
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      istio: galley
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley-configuration
    namespace: istio-system
- apiVersion: v1
  data:
    custom-resources.yaml: "# These policy and destination rules effectively enable\
      \ mTLS for all services in the mesh. For now,\n# they are added to Istio installation\
      \ yaml for backward compatible. In future, they should be in\n# a separated\
      \ yaml file so that customer can enable mTLS independent from installation.\n\
      \n# Authentication policy to enable mutual TLS for all services (that have sidecar)\
      \ in the mesh.\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind: \"MeshPolicy\"\
      \nmetadata:\n  name: \"default\"\n  labels:\n    app: security\n    chart: security\n\
      \    heritage: Tiller\n    release: istio\nspec:\n  peers:\n  - mtls: {}\n---\n\
      # Corresponding destination rule to configure client side to use mutual TLS\
      \ when talking to\n# any service (host) in the mesh.\napiVersion: networking.istio.io/v1alpha3\n\
      kind: DestinationRule\nmetadata:\n  name: \"default\"\n  namespace: istio-system\n\
      \  labels:\n    app: security\n    chart: security\n    heritage: Tiller\n \
      \   release: istio\nspec:\n  host: \"*.local\"\n  trafficPolicy:\n    tls:\n\
      \      mode: ISTIO_MUTUAL\n---\n# Destination rule to disable (m)TLS when talking\
      \ to API server, as API server doesn't have sidecar.\n# Customer should add\
      \ similar destination rules for other services that don't have sidecar.\napiVersion:\
      \ networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"\
      api-server\"\n  namespace: istio-system\n  labels:\n    app: security\n    chart:\
      \ security\n    heritage: Tiller\n    release: istio\nspec:\n  host: \"kubernetes.default.svc.cluster.local\"\
      \n  trafficPolicy:\n    tls:\n      mode: DISABLE"
    run.sh: "#!/bin/sh\n\nset -x\n\nif [ \"$#\" -ne \"1\" ]; then\n    echo \"first\
      \ argument should be path to custom resource yaml\"\n    exit 1\nfi\n\npathToResourceYAML=${1}\n\
      \nkubectl get validatingwebhookconfiguration istio-galley 2>/dev/null\nif [\
      \ \"$?\" -eq 0 ]; then\n    echo \"istio-galley validatingwebhookconfiguration\
      \ found - waiting for istio-galley deployment to be ready\"\n    while true;\
      \ do\n        kubectl -n istio-system get deployment istio-galley 2>/dev/null\n\
      \        if [ \"$?\" -eq 0 ]; then\n            break\n        fi\n        sleep\
      \ 1\n    done\n    kubectl -n istio-system rollout status deployment istio-galley\n\
      \    if [ \"$?\" -ne 0 ]; then\n        echo \"istio-galley deployment rollout\
      \ status check failed\"\n        exit 1\n    fi\n    echo \"istio-galley deployment\
      \ ready for configuration validation\"\nfi\nsleep 5\nkubectl apply -f ${pathToResourceYAML}"
  kind: ConfigMap
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      istio: citadel
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-custom-resources
    namespace: istio-system
- apiVersion: v1
  data:
    config: "policy: disabled\nalwaysInjectSelector:\n  []\n  \nneverInjectSelector:\n\
      \  []\n  \ntemplate: |-\n  rewriteAppHTTPProbe: {{ valueOrDefault .Values.sidecarInjectorWebhook.rewriteAppHTTPProbe\
      \ false }}\n  {{- if or (not .Values.istio_cni.enabled) .Values.global.proxy.enableCoreDump\
      \ }}\n  initContainers:\n  {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
      \ .ProxyConfig.InterceptionMode) `NONE` }}\n  {{- if not .Values.istio_cni.enabled\
      \ }}\n  - name: istio-init\n  {{- if contains \"/\" .Values.global.proxy_init.image\
      \ }}\n    image: \"{{ .Values.global.proxy_init.image }}\"\n  {{- else }}\n\
      \    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{\
      \ .Values.global.tag }}\"\n  {{- end }}\n    args:\n    - \"-p\"\n    - \"15001\"\
      \n    - \"-u\"\n    - 1337\n    - \"-m\"\n    - \"{{ annotation .ObjectMeta\
      \ `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\"\n \
      \   - \"-i\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges`\
      \ .Values.global.proxy.includeIPRanges }}\"\n    - \"-x\"\n    - \"{{ annotation\
      \ .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges\
      \ }}\"\n    - \"-b\"\n    - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts`\
      \ (includeInboundPorts .Spec.Containers) }}\"\n    - \"-d\"\n    - \"{{ excludeInboundPort\
      \ (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort)\
      \ (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts)\
      \ }}\"\n    {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`)\
      \ (ne .Values.global.proxy.excludeOutboundPorts \"\") -}}\n    - \"-o\"\n  \
      \  - \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts`\
      \ .Values.global.proxy.excludeOutboundPorts }}\"\n    {{ end -}}\n    {{ if\
      \ (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`)\
      \ -}}\n    - \"-k\"\n    - \"{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`\
      \ }}\"\n    {{ end -}}\n    imagePullPolicy: \"{{ .Values.global.imagePullPolicy\
      \ }}\"\n    resources:\n      requests:\n        cpu: 10m\n        memory: 10Mi\n\
      \      limits:\n        cpu: 100m\n        memory: 50Mi\n    securityContext:\n\
      \      runAsUser: 0\n      runAsNonRoot: false\n      capabilities:\n      \
      \  add:\n        - NET_ADMIN\n      {{- if .Values.global.proxy.privileged }}\n\
      \      privileged: true\n      {{- end }}\n    restartPolicy: Always\n    env:\n\
      \    {{- if contains \"*\" (annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts`\
      \ \"\") }}\n    - name: INBOUND_CAPTURE_PORT\n      value: 15006\n    {{- end\
      \ }}\n  {{- end }}\n  {{  end -}}\n  {{- if eq .Values.global.proxy.enableCoreDump\
      \ true }}\n  - name: enable-core-dump\n    args:\n    - -c\n    - sysctl -w\
      \ kernel.core_pattern=/var/lib/istio/core.proxy && ulimit -c unlimited\n   \
      \ command:\n      - /bin/sh\n  {{- if contains \"/\" .Values.global.proxy_init.image\
      \ }}\n    image: \"{{ .Values.global.proxy_init.image }}\"\n  {{- else }}\n\
      \    image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy_init.image }}:{{\
      \ .Values.global.tag }}\"\n  {{- end }}\n    imagePullPolicy: IfNotPresent\n\
      \    resources: {}\n    securityContext:\n      runAsUser: 0\n      runAsNonRoot:\
      \ false\n      privileged: true\n  {{ end }}\n  {{- end }}\n  containers:\n\
      \  - name: istio-proxy\n  {{- if contains \"/\" .Values.global.proxy.image }}\n\
      \    image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image\
      \ }}\"\n  {{- else }}\n    image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
      \ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag\
      \ }}\"\n  {{- end }}\n    ports:\n    - containerPort: 15090\n      protocol:\
      \ TCP\n      name: http-envoy-prom\n    args:\n    - proxy\n    - sidecar\n\
      \    - --domain\n    - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain\
      \ }}\n    - --configPath\n    - \"{{ .ProxyConfig.ConfigPath }}\"\n    - --binaryPath\n\
      \    - \"{{ .ProxyConfig.BinaryPath }}\"\n    - --serviceCluster\n    {{ if\
      \ ne \"\" (index .ObjectMeta.Labels \"app\") -}}\n    - \"{{ index .ObjectMeta.Labels\
      \ `app` }}.$(POD_NAMESPACE)\"\n    {{ else -}}\n    - \"{{ valueOrDefault .DeploymentMeta.Name\
      \ `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}\"\
      \n    {{ end -}}\n    - --drainDuration\n    - \"{{ formatDuration .ProxyConfig.DrainDuration\
      \ }}\"\n    - --parentShutdownDuration\n    - \"{{ formatDuration .ProxyConfig.ParentShutdownDuration\
      \ }}\"\n    - --discoveryAddress\n    - \"{{ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress`\
      \ .ProxyConfig.DiscoveryAddress }}\"\n  {{- if eq .Values.global.proxy.tracer\
      \ \"lightstep\" }}\n    - --lightstepAddress\n    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetAddress\
      \ }}\"\n    - --lightstepAccessToken\n    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetAccessToken\
      \ }}\"\n    - --lightstepSecure={{ .ProxyConfig.GetTracing.GetLightstep.GetSecure\
      \ }}\n    - --lightstepCacertPath\n    - \"{{ .ProxyConfig.GetTracing.GetLightstep.GetCacertPath\
      \ }}\"\n  {{- else if eq .Values.global.proxy.tracer \"zipkin\" }}\n    - --zipkinAddress\n\
      \    - \"{{ .ProxyConfig.GetTracing.GetZipkin.GetAddress }}\"\n  {{- else if\
      \ eq .Values.global.proxy.tracer \"datadog\" }}\n    - --datadogAgentAddress\n\
      \    - \"{{ .ProxyConfig.GetTracing.GetDatadog.GetAddress }}\"\n  {{- end }}\n\
      \  {{- if .Values.global.proxy.logLevel }}\n    - --proxyLogLevel={{ .Values.global.proxy.logLevel\
      \ }}\n  {{- end}}\n  {{- if .Values.global.proxy.componentLogLevel }}\n    -\
      \ --proxyComponentLogLevel={{ .Values.global.proxy.componentLogLevel }}\n  {{-\
      \ end}}\n    - --dnsRefreshRate\n    - {{ .Values.global.proxy.dnsRefreshRate\
      \ }}\n    - --connectTimeout\n    - \"{{ formatDuration .ProxyConfig.ConnectTimeout\
      \ }}\"\n  {{- if .Values.global.proxy.envoyStatsd.enabled }}\n    - --statsdUdpAddress\n\
      \    - \"{{ .ProxyConfig.StatsdUdpAddress }}\"\n  {{- end }}\n  {{- if .Values.global.proxy.envoyMetricsService.enabled\
      \ }}\n    - --envoyMetricsServiceAddress\n    - \"{{ .ProxyConfig.EnvoyMetricsServiceAddress\
      \ }}\"\n  {{- end }}\n    - --proxyAdminPort\n    - \"{{ .ProxyConfig.ProxyAdminPort\
      \ }}\"\n    {{ if gt .ProxyConfig.Concurrency 0 -}}\n    - --concurrency\n \
      \   - \"{{ .ProxyConfig.Concurrency }}\"\n    {{ end -}}\n    - --controlPlaneAuthPolicy\n\
      \    - \"{{ annotation .ObjectMeta `sidecar.istio.io/controlPlaneAuthPolicy`\
      \ .ProxyConfig.ControlPlaneAuthPolicy }}\"\n  {{- if (ne (annotation .ObjectMeta\
      \ \"status.sidecar.istio.io/port\" .Values.global.proxy.statusPort) \"0\") }}\n\
      \    - --statusPort\n    - \"{{ annotation .ObjectMeta `status.sidecar.istio.io/port`\
      \ .Values.global.proxy.statusPort }}\"\n    - --applicationPorts\n    - \"{{\
      \ annotation .ObjectMeta `readiness.status.sidecar.istio.io/applicationPorts`\
      \ (applicationPorts .Spec.Containers) }}\"\n  {{- end }}\n  {{- if .Values.global.trustDomain\
      \ }}\n    - --trust-domain={{ .Values.global.trustDomain }}\n  {{- end }}\n\
      \    env:\n    - name: POD_NAME\n      valueFrom:\n        fieldRef:\n     \
      \     fieldPath: metadata.name\n    - name: POD_NAMESPACE\n      valueFrom:\n\
      \        fieldRef:\n          fieldPath: metadata.namespace\n    - name: INSTANCE_IP\n\
      \      valueFrom:\n        fieldRef:\n          fieldPath: status.podIP\n  {{\
      \ if eq .Values.global.proxy.tracer \"datadog\" }}\n    - name: HOST_IP\n  \
      \    valueFrom:\n        fieldRef:\n          fieldPath: status.hostIP\n  {{\
      \ end }}\n    - name: ISTIO_META_POD_NAME\n      valueFrom:\n        fieldRef:\n\
      \          fieldPath: metadata.name\n    - name: ISTIO_META_CONFIG_NAMESPACE\n\
      \      valueFrom:\n        fieldRef:\n          fieldPath: metadata.namespace\n\
      \    - name: ISTIO_META_INTERCEPTION_MODE\n      value: \"{{ or (index .ObjectMeta.Annotations\
      \ `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String\
      \ }}\"\n    - name: ISTIO_META_INCLUDE_INBOUND_PORTS\n      value: \"{{ annotation\
      \ .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (applicationPorts\
      \ .Spec.Containers) }}\"\n    {{- if .Values.global.network }}\n    - name:\
      \ ISTIO_META_NETWORK\n      value: \"{{ .Values.global.network }}\"\n    {{-\
      \ end }}\n    {{ if .ObjectMeta.Annotations }}\n    - name: ISTIO_METAJSON_ANNOTATIONS\n\
      \      value: |\n             {{ toJSON .ObjectMeta.Annotations }}\n    {{ end\
      \ }}\n    {{ if .ObjectMeta.Labels }}\n    - name: ISTIO_METAJSON_LABELS\n \
      \     value: |\n             {{ toJSON .ObjectMeta.Labels }}\n    {{ end }}\n\
      \    {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)\
      \ }}\n    - name: ISTIO_BOOTSTRAP_OVERRIDE\n      value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\
      \n    {{- end }}\n    {{- if .Values.global.sds.customTokenDirectory }}\n  \
      \  - name: ISTIO_META_SDS_TOKEN_PATH\n      value: \"{{ .Values.global.sds.customTokenDirectory\
      \ -}}/sdstoken\"\n    {{- end }}\n    imagePullPolicy: {{ .Values.global.imagePullPolicy\
      \ }}\n    {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort)\
      \ `0` }}\n    readinessProbe:\n      httpGet:\n        path: /healthz/ready\n\
      \        port: {{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort\
      \ }}\n      initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds`\
      \ .Values.global.proxy.readinessInitialDelaySeconds }}\n      periodSeconds:\
      \ {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds`\
      \ .Values.global.proxy.readinessPeriodSeconds }}\n      failureThreshold: {{\
      \ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`\
      \ .Values.global.proxy.readinessFailureThreshold }}\n    {{ end -}}\n    securityContext:\n\
      \      {{- if .Values.global.proxy.privileged }}\n      privileged: true\n \
      \     {{- end }}\n      {{- if ne .Values.global.proxy.enableCoreDump true }}\n\
      \      readOnlyRootFilesystem: true\n      {{- end }}\n      {{ if eq (annotation\
      \ .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode)\
      \ `TPROXY` -}}\n      capabilities:\n        add:\n        - NET_ADMIN\n   \
      \   runAsGroup: 1337\n      {{ else -}}\n      {{ if and .Values.global.sds.enabled\
      \ .Values.global.sds.useTrustworthyJwt }}\n      runAsGroup: 1337\n      {{-\
      \ end }}\n      runAsUser: 1337\n      {{- end }}\n    resources:\n      {{\
      \ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations\
      \ `sidecar.istio.io/proxyMemory`) -}}\n      requests:\n        {{ if (isset\
      \ .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\n        cpu: \"\
      {{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\"\n        {{\
      \ end}}\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`)\
      \ -}}\n        memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`\
      \ }}\"\n        {{ end }}\n    {{ else -}}\n  {{- if .Values.global.proxy.resources\
      \ }}\n      {{ toYaml .Values.global.proxy.resources | indent 4 }}\n  {{- end\
      \ }}\n    {{  end -}}\n    volumeMounts:\n    {{ if (isset .ObjectMeta.Annotations\
      \ `sidecar.istio.io/bootstrapOverride`) }}\n    - mountPath: /etc/istio/custom-bootstrap\n\
      \      name: custom-bootstrap-volume\n    {{- end }}\n    - mountPath: /etc/istio/proxy\n\
      \      name: istio-envoy\n    {{- if .Values.global.sds.enabled }}\n    - mountPath:\
      \ /var/run/sds\n      name: sds-uds-path\n      readOnly: true\n    {{- if .Values.global.sds.useTrustworthyJwt\
      \ }}\n    - mountPath: /var/run/secrets/tokens\n      name: istio-token\n  \
      \  {{- end }}\n    {{- if .Values.global.sds.customTokenDirectory }}\n    -\
      \ mountPath: \"{{ .Values.global.sds.customTokenDirectory -}}\"\n      name:\
      \ custom-sds-token\n      readOnly: true\n    {{- end }}\n    {{- else }}\n\
      \    - mountPath: /etc/certs/\n      name: istio-certs\n      readOnly: true\n\
      \    {{- end }}\n    {{- if and (eq .Values.global.proxy.tracer \"lightstep\"\
      ) .Values.global.tracer.lightstep.cacertPath }}\n    - mountPath: {{ directory\
      \ .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}\n      name: lightstep-certs\n\
      \      readOnly: true\n    {{- end }}\n      {{- if isset .ObjectMeta.Annotations\
      \ `sidecar.istio.io/userVolumeMount` }}\n      {{ range $index, $value := fromJSON\
      \ (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\n  \
      \  - name: \"{{  $index }}\"\n      {{ toYaml $value | indent 4 }}\n      {{\
      \ end }}\n      {{- end }}\n  volumes:\n  {{- if (isset .ObjectMeta.Annotations\
      \ `sidecar.istio.io/bootstrapOverride`) }}\n  - name: custom-bootstrap-volume\n\
      \    configMap:\n      name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride`\
      \ \"\" }}\n  {{- end }}\n  - emptyDir:\n      medium: Memory\n    name: istio-envoy\n\
      \  {{- if .Values.global.sds.enabled }}\n  - name: sds-uds-path\n    hostPath:\n\
      \      path: /var/run/sds\n  {{- if .Values.global.sds.customTokenDirectory\
      \ }}\n  - name: custom-sds-token\n    secret:\n      secretName: sdstokensecret\n\
      \  {{- end }}\n  {{- if .Values.global.sds.useTrustworthyJwt }}\n  - name: istio-token\n\
      \    projected:\n      sources:\n      - serviceAccountToken:\n          path:\
      \ istio-token\n          expirationSeconds: 43200\n          audience: {{ .Values.global.trustDomain\
      \ }}\n  {{- end }}\n  {{- else }}\n  - name: istio-certs\n    secret:\n    \
      \  optional: true\n      {{ if eq .Spec.ServiceAccountName \"\" }}\n      secretName:\
      \ istio.default\n      {{ else -}}\n      secretName: {{  printf \"istio.%s\"\
      \ .Spec.ServiceAccountName }}\n      {{  end -}}\n    {{- if isset .ObjectMeta.Annotations\
      \ `sidecar.istio.io/userVolume` }}\n    {{range $index, $value := fromJSON (index\
      \ .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n  - name: \"{{\
      \ $index }}\"\n    {{ toYaml $value | indent 2 }}\n    {{ end }}\n    {{ end\
      \ }}\n  {{- end }}\n  {{- if and (eq .Values.global.proxy.tracer \"lightstep\"\
      ) .Values.global.tracer.lightstep.cacertPath }}\n  - name: lightstep-certs\n\
      \    secret:\n      optional: true\n      secretName: lightstep.cacert\n  {{-\
      \ end }}\n  {{- if .Values.global.podDNSSearchNamespaces }}\n  dnsConfig:\n\
      \    searches:\n      {{- range .Values.global.podDNSSearchNamespaces }}\n \
      \     - {{ render . }}\n      {{- end }}\n  {{- end }}"
    values: '{"certmanager":{"email":"damian.baar@wipro.com","enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"hub":"quay.io/jetstack","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"resources":{},"tag":"v0.6.2","tolerations":[]},"galley":{"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"galley","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"tolerations":[]},"gateways":{"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"istio-egressgateway":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"env":{"ISTIO_META_ROUTER_MODE":"sni-dnat"},"labels":{"app":"istio-egressgateway","istio":"egressgateway"},"nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"ports":[{"name":"http2","port":80},{"name":"https","port":443},{"name":"tls","port":15443,"targetPort":15443}],"resources":{"limits":{"cpu":"2000m","memory":"256Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"secretVolumes":[{"mountPath":"/etc/istio/egressgateway-certs","name":"egressgateway-certs","secretName":"istio-egressgateway-certs"},{"mountPath":"/etc/istio/egressgateway-ca-certs","name":"egressgateway-ca-certs","secretName":"istio-egressgateway-ca-certs"}],"serviceAnnotations":{},"tolerations":[],"type":"ClusterIP"},"istio-ilbgateway":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"labels":{"app":"istio-ilbgateway","istio":"ilbgateway"},"loadBalancerIP":"","nodeSelector":{},"podAnnotations":{},"ports":[{"name":"grpc-pilot-mtls","port":15011},{"name":"grpc-pilot","port":15010},{"name":"tcp-citadel-grpc-tls","port":8060,"targetPort":8060},{"name":"tcp-dns","port":5353}],"resources":{"requests":{"cpu":"800m","memory":"512Mi"}},"secretVolumes":[{"mountPath":"/etc/istio/ilbgateway-certs","name":"ilbgateway-certs","secretName":"istio-ilbgateway-certs"},{"mountPath":"/etc/istio/ilbgateway-ca-certs","name":"ilbgateway-ca-certs","secretName":"istio-ilbgateway-ca-certs"}],"serviceAnnotations":{"cloud.google.com/load-balancer-type":"internal"},"tolerations":[],"type":"LoadBalancer"},"istio-ingressgateway":{"applicationPorts":"","autoscaleEnabled":true,"autoscaleMax":1,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":true,"env":{"ISTIO_META_ROUTER_MODE":"sni-dnat"},"externalIPs":[],"labels":{"app":"istio-ingressgateway","istio":"ingressgateway"},"loadBalancerIP":"","loadBalancerSourceRanges":[],"meshExpansionPorts":[{"name":"tcp-pilot-grpc-tls","port":15011,"targetPort":15011},{"name":"tcp-mixer-grpc-tls","port":15004,"targetPort":15004},{"name":"tcp-citadel-grpc-tls","port":8060,"targetPort":8060},{"name":"tcp-dns-tls","port":853,"targetPort":853}],"nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"ports":[{"name":"status-port","port":15020,"targetPort":15020},{"name":"http2","nodePort":31380,"port":80,"targetPort":80},{"name":"https","nodePort":31390,"port":443},{"name":"tcp","nodePort":31400,"port":31400},{"name":"https-kiali","port":15029,"targetPort":15029},{"name":"https-prometheus","port":15030,"targetPort":15030},{"name":"https-grafana","port":15031,"targetPort":15031},{"name":"https-tracing","port":15032,"targetPort":15032},{"name":"tls","port":15443,"targetPort":15443}],"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"500m","memory":"256Mi"}},"sds":{"enabled":true,"image":"node-agent-k8s","resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}},"secretVolumes":[{"mountPath":"/etc/istio/ingressgateway-certs","name":"ingressgateway-certs","secretName":"istio-ingressgateway-certs"},{"mountPath":"/etc/istio/ingressgateway-ca-certs","name":"ingressgateway-ca-certs","secretName":"istio-ingressgateway-ca-certs"}],"serviceAnnotations":{"certmanager.k8s.io/acme-challenge-type":"dns01","certmanager.k8s.io/acme-dns01-provider":"aws","certmanager.k8s.io/cluster-issuer":"cert-issuer","domainName":"future-is-comming.dev.buildit.consulting","external-dns.alpha.kubernetes.io/hostname":"*.future-is-comming.dev.buildit.consulting","kubernetes.io/tls":"ingress-cert","kubernetes.io/tls-acme":"true","service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags":"Owner=damian.baar@wipro.com","type":"external"},"tolerations":[],"type":"LoadBalancer"}},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"grafana":{"enabled":false},"istio_cni":{"enabled":false},"istiocoredns":{"enabled":false},"kiali":{"enabled":false},"mixer":{"adapters":{"kubernetesenv":{"enabled":true},"prometheus":{"enabled":false,"metricsExpiryDuration":"10m"},"stdio":{"enabled":false,"outputAsJson":true},"useAdapterCRDs":true},"env":{"GODEBUG":"gctrace=1","GOMAXPROCS":"6"},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"mixer","nodeSelector":{},"podAnnotations":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"policy":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":false,"replicaCount":1},"telemetry":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":1,"cpu":{"targetAverageUtilization":80},"enabled":true,"loadshedding":{"latencyThreshold":"100ms","mode":"enforce"},"replicaCount":1,"resources":{"limits":{"cpu":"4800m","memory":"4G"},"requests":{"cpu":"1000m","memory":"1G"}},"sessionAffinityEnabled":false},"templates":{"useTemplateCRDs":false},"tolerations":[]},"nodeagent":{"enabled":true,"env":{"CA_ADDR":"istio-citadel:8060","CA_PROVIDER":"Citadel","Plugins":"","VALID_TOKEN":true},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"node-agent-k8s","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"tolerations":[]},"pilot":{"autoscaleEnabled":true,"autoscaleMax":5,"autoscaleMin":2,"cpu":{"targetAverageUtilization":80},"enabled":true,"env":{"GODEBUG":"gctrace=1","PILOT_PUSH_THROTTLE":100},"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"pilot","keepaliveMaxServerConnectionAge":"30m","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"resources":{"requests":{"cpu":"500m","memory":"2048Mi"}},"sidecar":true,"tolerations":[],"traceSampling":100},"prometheus":{"contextPath":"/prometheus","enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"hub":"docker.io/prom","ingress":{"annotations":null,"enabled":false,"hosts":["prometheus.local"],"tls":null},"nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"retention":"6h","scrapeInterval":"15s","security":{"enabled":true},"service":{"annotations":{},"nodePort":{"enabled":false,"port":32090}},"tag":"v2.8.0","tolerations":[]},"security":{"citadelHealthCheck":false,"createMeshPolicy":true,"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"citadel","nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"selfSigned":true,"tolerations":[],"workloadCertTtl":"2160h"},"sidecarInjectorWebhook":{"alwaysInjectSelector":[],"enableNamespacesByDefault":false,"enabled":true,"global":{"arch":{"amd64":2,"ppc64le":2,"s390x":2},"configValidation":true,"controlPlaneSecurityEnabled":false,"defaultNodeSelector":{"kubernetes.io/lifecycle":"on-demand"},"defaultPodDisruptionBudget":{"enabled":true},"defaultResources":{"requests":{"cpu":"10m"}},"defaultTolerations":[],"disablePolicyChecks":true,"enableHelmTest":false,"enableTracing":true,"hub":"docker.io/istio","imagePullPolicy":"IfNotPresent","imagePullSecrets":null,"k8sIngress":{"enableHttps":true,"enabled":true,"gatewayName":"ingressgateway"},"localityLbSetting":{},"logging":{"level":"default:info"},"meshExpansion":{"enabled":false,"useILB":false},"meshNetworks":{},"monitoringPort":15014,"mtls":{"enabled":true},"multiCluster":{"enabled":false},"oneNamespace":false,"outboundTrafficPolicy":{"mode":"ALLOW_ANY"},"policyCheckFailOpen":false,"priorityClassName":"","proxy":{"accessLogEncoding":"TEXT","accessLogFile":"","accessLogFormat":"","autoInject":"disabled","clusterDomain":"cluster.local","componentLogLevel":"","concurrency":2,"dnsRefreshRate":"300s","enableCoreDump":false,"envoyMetricsService":{"enabled":false,"host":null,"port":null},"envoyStatsd":{"enabled":false,"host":null,"port":null},"excludeIPRanges":"","excludeInboundPorts":"","excludeOutboundPorts":"","image":"proxyv2","includeIPRanges":"*","includeInboundPorts":"*","kubevirtInterfaces":"","logLevel":"","privileged":false,"readinessFailureThreshold":30,"readinessInitialDelaySeconds":1,"readinessPeriodSeconds":2,"resources":{"limits":{"cpu":"2000m","memory":"1024Mi"},"requests":{"cpu":"100m","memory":"128Mi"}},"statusPort":15020,"tracer":"zipkin"},"proxy_init":{"image":"proxy_init"},"sds":{"enabled":true,"udsPath":"unix:/var/run/sds/uds_path","useNormalJwt":true,"useTrustworthyJwt":false},"sidecarInjectorWebhook":{"enableNamespacesByDefault":true,"enabled":true},"tag":"1.2.4","tracer":{"datadog":{"address":"$(HOST_IP):8126"},"lightstep":{"accessToken":"","address":"","cacertPath":"","secure":true},"zipkin":{"address":""}},"trustDomain":"","useMCP":true},"image":"sidecar_injector","neverInjectSelector":[],"nodeSelector":{},"podAntiAffinityLabelSelector":[],"podAntiAffinityTermLabelSelector":[],"replicaCount":1,"rewriteAppHTTPProbe":false,"tolerations":[]},"tracing":{"enabled":false}}'
  kind: ConfigMap
  metadata:
    labels:
      app: istio
      chart: istio
      heritage: Tiller
      istio: sidecar-injector
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
- apiVersion: v1
  data:
    prometheus.yml: "global:\n  scrape_interval: 15s\nscrape_configs:\n\n- job_name:\
      \ 'istio-mesh'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n\
      \      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n \
      \   action: keep\n    regex: istio-telemetry;prometheus\n\n# Scrape config for\
      \ envoy stats\n- job_name: 'envoy-stats'\n  metrics_path: /stats/prometheus\n\
      \  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_pod_container_port_name]\n    action: keep\n    regex:\
      \ '.*-envoy-prom'\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
      \    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement:\
      \ $1:15090\n    target_label: __address__\n  - action: labelmap\n    regex:\
      \ __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    action: replace\n    target_label: pod_name\n\n- job_name: 'istio-policy'\n\
      \  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n\
      \      - istio-system\n\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name,\
      \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-policy;http-monitoring\n\
      \n- job_name: 'istio-telemetry'\n  kubernetes_sd_configs:\n  - role: endpoints\n\
      \    namespaces:\n      names:\n      - istio-system\n\n  relabel_configs:\n\
      \  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: istio-telemetry;http-monitoring\n\n- job_name:\
      \ 'pilot'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n\
      \      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n \
      \   action: keep\n    regex: istio-pilot;http-monitoring\n\n- job_name: 'galley'\n\
      \  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n\
      \      - istio-system\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name,\
      \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-galley;http-monitoring\n\
      \n- job_name: 'citadel'\n  kubernetes_sd_configs:\n  - role: endpoints\n   \
      \ namespaces:\n      names:\n      - istio-system\n\n  relabel_configs:\n  -\
      \ source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: istio-citadel;http-monitoring\n\n# scrape config\
      \ for API servers\n- job_name: 'kubernetes-apiservers'\n  kubernetes_sd_configs:\n\
      \  - role: endpoints\n    namespaces:\n      names:\n      - default\n  scheme:\
      \ https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
      \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: kubernetes;https\n\n# scrape config for nodes\
      \ (kubelet)\n- job_name: 'kubernetes-nodes'\n  scheme: https\n  tls_config:\n\
      \    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file:\
      \ /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n\
      \  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\
      \  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n\
      \  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label:\
      \ __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics\n\n# Scrape\
      \ config for Kubelet cAdvisor.\n#\n# This is required for Kubernetes 1.7.3 and\
      \ later, where cAdvisor metrics\n# (those whose names begin with 'container_')\
      \ have been removed from the\n# Kubelet metrics endpoint.  This job scrapes\
      \ the cAdvisor endpoint to\n# retrieve those metrics.\n#\n# In Kubernetes 1.7.0-1.7.2,\
      \ these metrics are only exposed on the cAdvisor\n# HTTP endpoint; use \"replacement:\
      \ /api/v1/nodes/${1}:4194/proxy/metrics\"\n# in that case (and ensure cAdvisor's\
      \ HTTP server hasn't been disabled with\n# the --cadvisor-port=0 Kubelet flag).\n\
      #\n# This job is not necessary and should be removed in Kubernetes 1.6 and\n\
      # earlier versions, or it will cause the metrics to be scraped twice.\n- job_name:\
      \ 'kubernetes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
      \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n\
      \    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n\
      \    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n\
      \    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\n\
      \n# scrape config for service endpoints.\n- job_name: 'kubernetes-service-endpoints'\n\
      \  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n\
      \    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
      \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
      \ source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
      \    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n\
      \  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
      \    action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\\
      d+)?;(\\d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
      \  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n   \
      \ target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    action: replace\n    target_label: kubernetes_name\n\n- job_name: 'kubernetes-pods'\n\
      \  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:  # If first two\
      \ labels are present, pod should be scraped  by the istio-secure job.\n  - source_labels:\
      \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
      \    regex: true\n  # Keep target if there's no sidecar or if prometheus.io/scheme\
      \ is explicitly set to \"http\"\n  - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status,\
      \ __meta_kubernetes_pod_annotation_prometheus_io_scheme]\n    action: keep\n\
      \    regex: ((;.*)|(.*;http))\n  - source_labels: [__meta_kubernetes_pod_annotation_istio_mtls]\n\
      \    action: drop\n    regex: (true)\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n\
      \    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n\
      \  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
      \    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement:\
      \ $1:$2\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n\
      \  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n   \
      \ target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    action: replace\n    target_label: pod_name\n\n- job_name: 'kubernetes-pods-istio-secure'\n\
      \  scheme: https\n  tls_config:\n    ca_file: /etc/istio-certs/root-cert.pem\n\
      \    cert_file: /etc/istio-certs/cert-chain.pem\n    key_file: /etc/istio-certs/key.pem\n\
      \    insecure_skip_verify: true  # prometheus does not support secure naming.\n\
      \  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
      \    regex: true\n  # sidecar status annotation is added by sidecar injector\
      \ and\n  # istio_workload_mtls_ability can be specifically placed on a pod to\
      \ indicate its ability to receive mtls traffic.\n  - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status,\
      \ __meta_kubernetes_pod_annotation_istio_mtls]\n    action: keep\n    regex:\
      \ (([^;]+);([^;]*))|(([^;]*);(true))\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n\
      \    action: drop\n    regex: (http)\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n\
      \    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n\
      \  - source_labels: [__address__]  # Only keep address that is host:port\n \
      \   action: keep    # otherwise an extra target with ':443' is added for https\
      \ scheme\n    regex: ([^:]+):(\\d+)\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
      \    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement:\
      \ $1:$2\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n\
      \  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n   \
      \ target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    action: replace\n    target_label: pod_name"
  kind: ConfigMap
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: prometheus
    namespace: istio-system
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  spec:
    ports:
    - name: http
      port: 8085
      protocol: TCP
      targetPort: 8085
    selector:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/name: aws-cluster-autoscaler
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
  spec:
    ports:
    - name: http
      port: 7979
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/name: external-dns
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      istio: citadel
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel
    namespace: istio-system
  spec:
    ports:
    - name: http-monitoring
      port: 15014
    - name: grpc-citadel
      port: 8060
      protocol: TCP
      targetPort: 8060
    selector:
      istio: citadel
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      istio: galley
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley
    namespace: istio-system
  spec:
    ports:
    - name: http-monitoring
      port: 15014
    - name: https-validation
      port: 443
    - name: grpc-mcp
      port: 9901
    selector:
      istio: galley
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      certmanager.k8s.io/acme-challenge-type: dns01
      certmanager.k8s.io/acme-dns01-provider: aws
      certmanager.k8s.io/cluster-issuer: cert-issuer
      domainName: future-is-comming.dev.buildit.consulting
      external-dns.alpha.kubernetes.io/hostname: '*.future-is-comming.dev.buildit.consulting'
      kubernetes.io/tls: ingress-cert
      kubernetes.io/tls-acme: 'true'
      service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: Owner=damian.baar@wipro.com
      type: external
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      istio: ingressgateway
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway
    namespace: istio-system
  spec:
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: https-kiali
      port: 15029
      targetPort: 15029
    - name: https-prometheus
      port: 15030
      targetPort: 15030
    - name: https-grafana
      port: 15031
      targetPort: 15031
    - name: https-tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    - name: tcp
      nodePort: 31400
      port: 31400
    - name: https
      nodePort: 31390
      port: 443
    - name: http2
      nodePort: 31380
      port: 80
      targetPort: 80
    selector:
      app: istio-ingressgateway
      istio: ingressgateway
      release: istio
    type: LoadBalancer
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      istio: pilot
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot
    namespace: istio-system
  spec:
    ports:
    - name: grpc-xds
      port: 15010
    - name: https-xds
      port: 15011
    - name: http-monitoring
      port: 15014
    - name: http-legacy-discovery
      port: 8080
    selector:
      istio: pilot
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
  spec:
    ports:
    - port: 443
    selector:
      istio: sidecar-injector
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      networking.istio.io/exportTo: '*'
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      istio: mixer
      kubenix/project-name: kubenix
      release: istio
    name: istio-telemetry
    namespace: istio-system
  spec:
    ports:
    - name: grpc-mixer-mtls
      port: 15004
    - name: http-monitoring
      port: 15014
    - name: prometheus
      port: 42422
    - name: grpc-mixer
      port: 9091
    selector:
      istio: mixer
      istio-mixer-type: telemetry
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: 'true'
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: prometheus
    namespace: istio-system
  spec:
    ports:
    - name: http-prometheus
      port: 9090
      protocol: TCP
    selector:
      app: prometheus
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: certmanager
      chart: certmanager
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: certmanager
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      helm.sh/hook: post-delete
      helm.sh/hook-delete-policy: hook-succeeded
      helm.sh/hook-weight: '1'
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-cleanup-secrets-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-mixer-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: istio-multi
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: nodeagent
      chart: nodeagent
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-nodeagent-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-post-install-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: kube2iam
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: kube2iam
      helm.sh/chart: kube2iam-2.0.1
      kubenix/project-name: kubenix
    name: kube2iam
    namespace: eks
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: prometheus
    namespace: istio-system
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    labels:
      app.kubernetes.io/instance: kube2iam
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: kube2iam
      helm.sh/chart: kube2iam-2.0.1
      kubenix/project-name: kubenix
    name: kube2iam
    namespace: eks
  spec:
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: kube2iam
          app.kubernetes.io/name: kube2iam
      spec:
        containers:
        - args:
          - --host-interface=docker0
          - --node=$(NODE_NAME)
          - --iptables=false
          - --app-port=8181
          - --metrics-port=8181
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          image: jtblin/kube2iam:0.10.7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8181
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: kube2iam
          ports:
          - containerPort: 8181
            name: http
          resources: {}
        hostNetwork: true
        serviceAccountName: kube2iam
        tolerations: []
    updateStrategy:
      type: OnDelete
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: eks-cluster-autoscaler
        app.kubernetes.io/name: aws-cluster-autoscaler
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: eks-cluster-autoscaler
          app.kubernetes.io/name: aws-cluster-autoscaler
      spec:
        containers:
        - command:
          - ./cluster-autoscaler
          - --cloud-provider=aws
          - --namespace=eks
          - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/future-is-comming-dev-cluster
          - --logtostderr=true
          - --stderrthreshold=info
          - --v=4
          env:
          - name: AWS_REGION
            value: eu-west-2
          image: k8s.gcr.io/cluster-autoscaler:v1.13.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8085
          name: aws-cluster-autoscaler
          ports:
          - containerPort: 8085
          resources: {}
          volumeMounts:
          - mountPath: /etc/ssl/certs/ca-bundle.crt
            name: ssl-certs
            readOnly: true
        nodeSelector:
          kubernetes.io/lifecycle: on-demand
        serviceAccountName: eks-cluster-autoscaler-aws-cluster-autoscaler
        tolerations: []
        volumes:
        - hostPath:
            path: /etc/ssl/certs/ca-certificates.crt
          name: ssl-certs
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: certmanager
      chart: certmanager
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
      version: 1.2.4
    name: certmanager
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: certmanager
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  spec:
    maxUnavailable: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: eks-cluster-autoscaler
        app.kubernetes.io/name: aws-cluster-autoscaler
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      istio: galley
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: galley
        istio: galley
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      istio: ingressgateway
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: istio-ingressgateway
        istio: ingressgateway
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      istio: pilot
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: pilot
        istio: pilot
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: sidecarInjectorWebhook
      istio: sidecar-injector
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: sidecarInjectorWebhook
        istio: sidecar-injector
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: telemetry
      chart: mixer
      heritage: Tiller
      istio: mixer
      istio-mixer-type: telemetry
      kubenix/project-name: kubenix
      release: istio
      version: 1.2.4
    name: istio-telemetry
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: telemetry
        istio: mixer
        istio-mixer-type: telemetry
        release: istio
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: certmanager
      chart: certmanager
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: certmanager
    namespace: istio-system
  rules:
  - apiGroups:
    - certmanager.k8s.io
    resources:
    - certificates
    - certificates/finalizers
    - issuers
    - clusterissuers
    - orders
    - orders/finalizers
    - challenges
    verbs:
    - '*'
  - apiGroups:
    - ''
    resources:
    - configmaps
    - secrets
    - events
    - services
    - pods
    verbs:
    - '*'
  - apiGroups:
    - extensions
    resources:
    - ingresses
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - create
    - get
    - update
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - create
    - get
    - watch
    - list
    - update
    - delete
  - apiGroups:
    - ''
    resources:
    - serviceaccounts
    - services
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      helm.sh/hook: post-delete
      helm.sh/hook-delete-policy: hook-succeeded
      helm.sh/hook-weight: '1'
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-cleanup-secrets-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - list
    - delete
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    verbs:
    - '*'
  - apiGroups:
    - config.istio.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.istio.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authentication.istio.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.istio.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - apps
    resourceNames:
    - istio-galley
    resources:
    - deployments
    verbs:
    - get
  - apiGroups:
    - ''
    resources:
    - pods
    - nodes
    - services
    - endpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resourceNames:
    - istio-galley
    resources:
    - deployments/finalizers
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-mixer-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - config.istio.io
    resources:
    - '*'
    verbs:
    - create
    - get
    - list
    - watch
    - patch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    - endpoints
    - pods
    - services
    - namespaces
    - secrets
    - replicationcontrollers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - apps
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: nodeagent
      chart: nodeagent
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-nodeagent-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - config.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - rbac.istio.io
    resources:
    - '*'
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - networking.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - authentication.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - '*'
  - apiGroups:
    - extensions
    resources:
    - ingresses
    - ingresses/status
    verbs:
    - '*'
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - create
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ''
    resources:
    - endpoints
    - pods
    - services
    - namespaces
    - nodes
    - secrets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: istio-reader
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - nodes
    - pods
    - services
    - endpoints
    - replicationcontrollers
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - extensions
    - apps
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    verbs:
    - get
    - list
    - watch
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: prometheus-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - nodes
    - services
    - endpoints
    - pods
    - nodes/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
  - nonResourceURLs:
    - /metrics
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: certmanager
      chart: certmanager
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: certmanager
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: certmanager
  subjects:
  - kind: ServiceAccount
    name: certmanager
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-citadel-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-citadel-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      helm.sh/hook: post-delete
      helm.sh/hook-delete-policy: hook-succeeded
      helm.sh/hook-weight: '2'
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-cleanup-secrets-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-cleanup-secrets-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-cleanup-secrets-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley-admin-role-binding-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-galley-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-galley-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-mixer-admin-role-binding-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-mixer-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-mixer-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      chart: istio-1.2.4
      kubenix/project-name: kubenix
    name: istio-multi
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-reader
  subjects:
  - kind: ServiceAccount
    name: istio-multi
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: nodeagent
      chart: nodeagent
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-nodeagent-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-nodeagent-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-nodeagent-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-pilot-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-pilot-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector-admin-role-binding-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-sidecar-injector-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-sidecar-injector-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: prometheus-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: prometheus-istio-system
  subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: istio-ingressgateway-sds
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: istio-ingressgateway-sds
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: istio-ingressgateway-sds
  subjects:
  - kind: ServiceAccount
    name: istio-ingressgateway-service-account
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  rules:
  - apiGroups:
    - ''
    resources:
    - events
    - endpoints
    verbs:
    - create
    - patch
  - apiGroups:
    - ''
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ''
    resources:
    - pods/status
    verbs:
    - update
  - apiGroups:
    - ''
    resourceNames:
    - cluster-autoscaler
    resources:
    - endpoints
    verbs:
    - get
    - update
  - apiGroups:
    - ''
    resources:
    - nodes
    verbs:
    - watch
    - list
    - get
    - update
  - apiGroups:
    - ''
    resources:
    - pods
    - services
    - replicationcontrollers
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - batch
    resources:
    - jobs
    - cronjobs
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - extensions
    resources:
    - replicasets
    - daemonsets
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - watch
    - list
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - replicasets
    - statefulsets
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
  rules:
  - apiGroups:
    - ''
    resources:
    - services
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.istio.io
    resources:
    - gateways
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - externaldns.k8s.io
    resources:
    - dnsendpoints
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-post-install-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - authentication.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - networking.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    verbs:
    - get
  - apiGroups:
    - extensions
    - apps
    resources:
    - deployments
    - replicasets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    labels:
      app.kubernetes.io/instance: kube2iam
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: kube2iam
      helm.sh/chart: kube2iam-2.0.1
      kubenix/project-name: kubenix
    name: kube2iam
    namespace: eks
  rules:
  - apiGroups:
    - ''
    resources:
    - namespaces
    - pods
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
  subjects:
  - kind: ServiceAccount
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: external-dns
      helm.sh/chart: external-dns-2.5.4
      kubenix/project-name: kubenix
    name: external-dns
    namespace: eks
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: external-dns
  subjects:
  - kind: ServiceAccount
    name: external-dns
    namespace: eks
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-post-install-role-binding-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-security-post-install-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-security-post-install-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: kube2iam
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: kube2iam
      helm.sh/chart: kube2iam-2.0.1
      kubenix/project-name: kubenix
    name: kube2iam
    namespace: eks
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube2iam
  subjects:
  - kind: ServiceAccount
    name: kube2iam
    namespace: eks
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - create
  - apiGroups:
    - ''
    resourceNames:
    - cluster-autoscaler-status
    resources:
    - configmaps
    verbs:
    - delete
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: eks-cluster-autoscaler
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: aws-cluster-autoscaler
      helm.sh/chart: cluster-autoscaler-3.2.0
      kubenix/project-name: kubenix
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
  subjects:
  - kind: ServiceAccount
    name: eks-cluster-autoscaler-aws-cluster-autoscaler
    namespace: eks
kind: List
labels:
