apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      istio-injection: enabled
      serving.knative.dev/release: v0.7.1
    name: knative-serving
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      networking.knative.dev/certificate-provider: cert-manager
      serving.knative.dev/controller: 'true'
      serving.knative.dev/release: v0.7.1
    name: knative-serving-certmanager
  rules:
  - apiGroups:
    - certmanager.k8s.io
    resources:
    - certificates
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      autoscaling.knative.dev/metric-provider: custom-metrics
      serving.knative.dev/release: v0.7.1
    name: custom-metrics-auth-reader
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - kind: ServiceAccount
    name: controller
    namespace: knative-serving
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    labels:
      networking.knative.dev/ingress-provider: istio
      serving.knative.dev/release: v0.7.1
    name: knative-ingress-gateway
    namespace: knative-serving
  spec:
    selector:
      istio: ingressgateway
    servers:
    - hosts:
      - '*'
      port:
        name: http
        number: 80
        protocol: HTTP
    - hosts:
      - '*'
      port:
        name: https
        number: 443
        protocol: HTTPS
      tls:
        mode: PASSTHROUGH
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    labels:
      networking.knative.dev/ingress-provider: istio
      serving.knative.dev/release: v0.7.1
    name: cluster-local-gateway
    namespace: knative-serving
  spec:
    selector:
      istio: cluster-local-gateway
    servers:
    - hosts:
      - '*'
      port:
        name: http
        number: 80
        protocol: HTTP
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: certificates.networking.internal.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=="Ready")].reason
      name: Reason
      type: string
    group: networking.internal.knative.dev
    names:
      categories:
      - all
      - knative-internal
      - networking
      kind: Certificate
      plural: certificates
      shortNames:
      - kcert
      singular: certificate
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: clusteringresses.networking.internal.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    group: networking.internal.knative.dev
    names:
      categories:
      - all
      - knative-internal
      - networking
      kind: ClusterIngress
      plural: clusteringresses
      singular: clusteringress
    scope: Cluster
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
    name: images.caching.internal.knative.dev
  spec:
    group: caching.internal.knative.dev
    names:
      categories:
      - all
      - knative-internal
      - caching
      kind: Image
      plural: images
      shortNames:
      - img
      singular: image
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: ingresses.networking.internal.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    group: networking.internal.knative.dev
    names:
      categories:
      - all
      - knative-internal
      - networking
      kind: Ingress
      plural: ingresses
      shortNames:
      - ing
      singular: ingress
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: podautoscalers.autoscaling.internal.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    group: autoscaling.internal.knative.dev
    names:
      categories:
      - all
      - knative-internal
      - autoscaling
      kind: PodAutoscaler
      plural: podautoscalers
      shortNames:
      - kpa
      singular: podautoscaler
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: serverlessservices.networking.internal.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .spec.mode
      name: Mode
      type: string
    - JSONPath: .status.serviceName
      name: ServiceName
      type: string
    - JSONPath: .status.privateServiceName
      name: PrivateServiceName
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    group: networking.internal.knative.dev
    names:
      categories:
      - all
      - knative-internal
      - networking
      kind: ServerlessService
      plural: serverlessservices
      shortNames:
      - sks
      singular: serverlessservice
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: activator
      serving.knative.dev/release: v0.7.1
    name: activator-service
    namespace: knative-serving
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8012
    - name: http2
      port: 81
      protocol: TCP
      targetPort: 8013
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: activator
    type: ClusterIP
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      networking.knative.dev/ingress-provider: istio
      serving.knative.dev/controller: 'true'
      serving.knative.dev/release: v0.7.1
    name: knative-serving-istio
  rules:
  - apiGroups:
    - networking.istio.io
    resources:
    - virtualservices
    - gateways
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: controller
      serving.knative.dev/release: v0.7.1
    name: controller
    namespace: knative-serving
  spec:
    ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: controller
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      role: webhook
      serving.knative.dev/release: v0.7.1
    name: webhook
    namespace: knative-serving
  spec:
    ports:
    - port: 443
      targetPort: 8443
    selector:
      role: webhook
- apiVersion: caching.internal.knative.dev/v1alpha1
  kind: Image
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: queue-proxy
    namespace: knative-serving
  spec:
    image: gcr.io/knative-releases/github.com/knative/serving/cmd/queue@sha256:89fb5a1d2d9c0abd10ce3135c02f9e9ffbf93087a3ece7481615a0f9d9209713
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: activator
    namespace: knative-serving
  spec:
    selector:
      matchLabels:
        app: activator
        role: activator
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
          sidecar.istio.io/inject: 'true'
        labels:
          app: activator
          role: activator
          serving.knative.dev/release: v0.7.1
      spec:
        containers:
        - args:
          - -logtostderr=false
          - -stderrthreshold=FATAL
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/serving
          image: gcr.io/knative-releases/github.com/knative/serving/cmd/activator@sha256:864c0dc5e8d8eeee6162f448ae6452ab53f53642536a4720d59b6bc2402df01f
          livenessProbe:
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: activator
              path: /healthz
              port: 8012
          name: activator
          ports:
          - containerPort: 8012
            name: http1-port
          - containerPort: 8013
            name: h2c-port
          - containerPort: 9090
            name: metrics-port
          readinessProbe:
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: activator
              path: /healthz
              port: 8012
          resources:
            limits:
              cpu: 200m
              memory: 600Mi
            requests:
              cpu: 20m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - mountPath: /etc/config-logging
            name: config-logging
          - mountPath: /etc/config-observability
            name: config-observability
        serviceAccountName: controller
        volumes:
        - configMap:
            name: config-logging
          name: config-logging
        - configMap:
            name: config-observability
          name: config-observability
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: autoscaler
      serving.knative.dev/release: v0.7.1
    name: autoscaler
    namespace: knative-serving
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: custom-metrics
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: autoscaler
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: autoscaler
    namespace: knative-serving
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: autoscaler
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
          sidecar.istio.io/inject: 'true'
        labels:
          app: autoscaler
          serving.knative.dev/release: v0.7.1
      spec:
        containers:
        - args:
          - --secure-port=8443
          - --cert-dir=/tmp
          env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/serving
          image: gcr.io/knative-releases/github.com/knative/serving/cmd/autoscaler@sha256:026860790fe07bf3dcd42fe2c0a21c7c15ef59f4cb772b6e369f927620f6c0ec
          livenessProbe:
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: autoscaler
              path: /healthz
              port: 8080
          name: autoscaler
          ports:
          - containerPort: 8080
            name: websocket
          - containerPort: 9090
            name: metrics
          - containerPort: 8443
            name: custom-metrics
          readinessProbe:
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: autoscaler
              path: /healthz
              port: 8080
          resources:
            limits:
              cpu: 300m
              memory: 400Mi
            requests:
              cpu: 30m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - mountPath: /etc/config-autoscaler
            name: config-autoscaler
          - mountPath: /etc/config-logging
            name: config-logging
          - mountPath: /etc/config-observability
            name: config-observability
        serviceAccountName: controller
        volumes:
        - configMap:
            name: config-autoscaler
          name: config-autoscaler
        - configMap:
            name: config-logging
          name: config-logging
        - configMap:
            name: config-observability
          name: config-observability
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.


      # The Revision ContainerConcurrency field specifies the maximum number

      # of requests the Container can handle at once. Container concurrency

      # target percentage is how much of that maximum to use in a stable

      # state. E.g. if a Revision specifies ContainerConcurrency of 10, then

      # the Autoscaler will try to maintain 7 concurrent connections per pod

      # on average. A value of 70 is chosen because the Autoscaler panics

      # when concurrency exceeds 2x the desired set point. So we will panic

      # before we reach the limit.

      # For legacy and backwards compatibility reasons, this value also accepts

      # fractional values in (0, 1] interval (i.e. 0.7 ⇒ 70%).

      # Thus minimal percentage value must be greater than 1.0, or it will be

      # treated as a fraction.

      # TODO(#2016): Set to 70%.

      container-concurrency-target-percentage: "100"


      # The container concurrency target default is what the Autoscaler will

      # try to maintain when the Revision specifies unlimited concurrency.

      # Even when specifying unlimited concurrency, the autoscaler will

      # horizontally scale the application based on this target concurrency.

      #

      # A value of 100 is chosen because it''s enough to allow vertical pod

      # autoscaling to tune resource requests. E.g. maintaining 1 concurrent

      # "hello world" request doesn''t consume enough resources to allow VPA

      # to achieve efficient resource usage (VPA CPU minimum is 300m).

      container-concurrency-target-default: "100"


      # When operating in a stable mode, the autoscaler operates on the

      # average concurrency over the stable window.

      stable-window: "60s"


      # When observed average concurrency during the panic window reaches

      # panic-threshold-percentage the target concurrency, the autoscaler

      # enters panic mode. When operating in panic mode, the autoscaler

      # scales on the average concurrency over the panic window which is

      # panic-window-percentage of the stable-window.

      panic-window-percentage: "10.0"


      # Absolute panic window duration.

      # Deprecated in favor of panic-window-percentage.

      # Existing revisions will continue to scale based on panic-window

      # but new revisions will default to panic-window-percentage.

      panic-window: "6s"


      # The percentage of the container concurrency target at which to

      # enter panic mode when reached within the panic window.

      panic-threshold-percentage: "200.0"


      # Max scale up rate limits the rate at which the autoscaler will

      # increase pod count. It is the maximum ratio of desired pods versus

      # observed pods.

      max-scale-up-rate: "10"


      # Scale to zero feature flag

      enable-scale-to-zero: "true"


      # Tick interval is the time between autoscaling calculations.

      tick-interval: "2s"


      # Dynamic parameters (take effect when config map is updated):


      # Scale to zero grace period is the time an inactive revision is left

      # running before it is scaled to zero (min: 30s).

      scale-to-zero-grace-period: "30s"

      '
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-autoscaler
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: "################################\n#                              #\n\
      #    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\
      \n# This block is not actually functional configuration,\n# but serves to illustrate\
      \ the available configuration\n# options and document them in a way that is\
      \ accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample\
      \ configuration options may be copied out of\n# this block and unindented to\
      \ actually change the configuration.\n\n# IssuerRef is a reference to the issuer\
      \ for this certificate.\n# IssuerRef should be either `ClusterIssuer` or `Issuer`.\n\
      # Please refer `IssuerRef` in https://github.com/jetstack/cert-manager/blob/master/pkg/apis/certmanager/v1alpha1/types_certificate.go\n\
      # for more details about IssuerRef configuration.\nissuerRef: |\n  kind: ClusterIssuer\n\
      \  name: letsencrypt-issuer\n\n# solverConfig defines the configuration for\
      \ the ACME certificate provider.\n# The solverConfig should be either dns01\
      \ or http01.\n# Please refer `SolverConfig` in https://github.com/jetstack/cert-manager/blob/master/pkg/apis/certmanager/v1alpha1/types_certificate.go\n\
      # for more details about ACME configuration.\nsolverConfig: |\n  dns01:\n  \
      \  provider: cloud-dns-provider\n"
  kind: ConfigMap
  metadata:
    labels:
      networking.knative.dev/certificate-provider: cert-manager
      serving.knative.dev/release: v0.7.1
    name: config-certmanager
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.


      # revision-timeout-seconds contains the default number of

      # seconds to use for the revision''s per-request timeout, if

      # none is specified.

      revision-timeout-seconds: "300"  # 5 minutes


      # max-revision-timeout-seconds contains the maximum number of

      # seconds that can be used for revision-timeout-seconds.

      # This value must be greater than or equal to revision-timeout-seconds.

      # If omitted, the system default is used (600 seconds).

      max-revision-timeout-seconds: "600"  # 10 minutes


      # revision-cpu-request contains the cpu allocation to assign

      # to revisions by default.  If omitted, no value is specified

      # and the system default is used.

      revision-cpu-request: "400m"  # 0.4 of a CPU (aka 400 milli-CPU)


      # revision-memory-request contains the memory allocation to assign

      # to revisions by default.  If omitted, no value is specified

      # and the system default is used.

      revision-memory-request: "100M"  # 100 megabytes of memory


      # revision-cpu-limit contains the cpu allocation to limit

      # revisions to by default.  If omitted, no value is specified

      # and the system default is used.

      revision-cpu-limit: "1000m"  # 1 CPU (aka 1000 milli-CPU)


      # revision-memory-limit contains the memory allocation to limit

      # revisions to by default.  If omitted, no value is specified

      # and the system default is used.

      revision-memory-limit: "200M"  # 200 megabytes of memory


      # container-name-template contains a template for the default

      # container name, if none is specified.  This field supports

      # Go templating and is supplied with the ObjectMeta of the

      # enclosing Service or Configuration, so values such as

      # {{.Name}} are also valid.

      container-name-template: "user-container"

      '
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-defaults
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.


      # List of repositories for which tag to digest resolving should be skipped

      registriesSkippingTagResolving: "ko.local,dev.local"

      '
    queueSidecarImage: gcr.io/knative-releases/github.com/knative/serving/cmd/queue@sha256:89fb5a1d2d9c0abd10ce3135c02f9e9ffbf93087a3ece7481615a0f9d9209713
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-deployment
    namespace: knative-serving
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      autoscaling.knative.dev/metric-provider: custom-metrics
      serving.knative.dev/release: v0.7.1
    name: custom-metrics-server-resources
  rules:
  - apiGroups:
    - custom.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - '*'
- apiVersion: v1
  data:
    _example: "################################\n#                              #\n\
      #    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\
      \n# This block is not actually functional configuration,\n# but serves to illustrate\
      \ the available configuration\n# options and document them in a way that is\
      \ accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample\
      \ configuration options may be copied out of\n# this example block and unindented\
      \ to be in the data block\n# to actually change the configuration.\n\n# Default\
      \ value for domain.\n# Although it will match all routes, it is the least-specific\
      \ rule so it\n# will only be used if no other domain matches.\nexample.com:\
      \ |\n\n# These are example settings of domain.\n# example.org will be used for\
      \ routes having app=nonprofit.\nexample.org: |\n  selector:\n    app: nonprofit\n\
      \n# Routes having domain suffix of 'svc.cluster.local' will not be exposed\n\
      # through Ingress. You can define your own label selector to assign that\n#\
      \ domain suffix to your Route here, or you can set the label\n#    \"serving.knative.dev/visibility=cluster-local\"\
      \n# to achieve the same effect.  This shows how to make routes having\n# the\
      \ label app=secret only exposed to the local cluster.\nsvc.cluster.local: |\n\
      \  selector:\n    app: secret\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-domain
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.


      # Delay after revision creation before considering it for GC

      stale-revision-create-delay: "24h"


      # Duration since a route has been pointed at a revision before it should be
      GC''d

      # This minus lastpinned-debounce be longer than the controller resync period
      (10 hours)

      stale-revision-timeout: "15h"


      # Minimum number of generations of revisions to keep before considering for
      GC

      stale-revision-minimum-generations: "1"


      # To avoid constant updates, we allow an existing annotation to be stale by
      this

      # amount before we update the timestamp

      stale-revision-lastpinned-debounce: "5h"

      '
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-gc
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.


      # Default Knative Gateway after v0.3. It points to the Istio

      # standard istio-ingressgateway, instead of a custom one that we

      # used pre-0.3.

      gateway.knative-ingress-gateway: "istio-ingressgateway.istio-system.svc.cluster.local"


      # A cluster local gateway to allow pods outside of the mesh to access

      # Services and Routes not exposing through an ingress.  If the users

      # do have a service mesh setup, this isn''t required and can be removed.

      #

      # An example use case is when users want to use Istio without any

      # sidecar injection (like Knative''s istio-lean.yaml).  Since every pod

      # is outside of the service mesh in that case, a cluster-local  service

      # will need to be exposed to a cluster-local gateway to be accessible.

      local-gateway.cluster-local-gateway: "cluster-local-gateway.istio-system.svc.cluster.local"


      # To use only Istio service mesh and no cluster-local-gateway, replace

      # all local-gateway.* entries the following entry.

      local-gateway.mesh: "mesh"

      '
  kind: ConfigMap
  metadata:
    labels:
      networking.knative.dev/ingress-provider: istio
      serving.knative.dev/release: v0.7.1
    name: config-istio
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: "################################\n#                              #\n\
      #    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\
      \n# This block is not actually functional configuration,\n# but serves to illustrate\
      \ the available configuration\n# options and document them in a way that is\
      \ accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample\
      \ configuration options may be copied out of\n# this example block and unindented\
      \ to be in the data block\n# to actually change the configuration.\n\n# Common\
      \ configuration for all Knative codebase\nzap-logger-config: |\n  {\n    \"\
      level\": \"info\",\n    \"development\": false,\n    \"outputPaths\": [\"stdout\"\
      ],\n    \"errorOutputPaths\": [\"stderr\"],\n    \"encoding\": \"json\",\n \
      \   \"encoderConfig\": {\n      \"timeKey\": \"ts\",\n      \"levelKey\": \"\
      level\",\n      \"nameKey\": \"logger\",\n      \"callerKey\": \"caller\",\n\
      \      \"messageKey\": \"msg\",\n      \"stacktraceKey\": \"stacktrace\",\n\
      \      \"lineEnding\": \"\",\n      \"levelEncoder\": \"\",\n      \"timeEncoder\"\
      : \"iso8601\",\n      \"durationEncoder\": \"\",\n      \"callerEncoder\": \"\
      \"\n    }\n  }\n\n# Log level overrides\n# For all components except the autoscaler\
      \ and queue proxy,\n# changes are be picked up immediately.\n# For autoscaler\
      \ and queue proxy, changes require recreation of the pods.\nloglevel.controller:\
      \ \"info\"\nloglevel.autoscaler: \"info\"\nloglevel.queueproxy: \"info\"\nloglevel.webhook:\
      \ \"info\"\nloglevel.activator: \"info\"\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-logging
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.


      # istio.sidecar.includeOutboundIPRanges specifies the IP ranges that Istio sidecar

      # will intercept.

      #

      # Replace this with the IP ranges of your cluster (see below for some examples).

      # Separate multiple entries with a comma.

      # Example: "10.4.0.0/14,10.7.240.0/20"

      #

      # If set to "*" Istio will intercept all traffic within

      # the cluster as well as traffic that is going outside the cluster.

      # Traffic going outside the cluster will be blocked unless

      # necessary egress rules are created.

      #

      # If omitted or set to "", value of global.proxy.includeIPRanges

      # provided at Istio deployment time is used. In default Knative serving

      # deployment, global.proxy.includeIPRanges value is set to "*".

      #

      # If an invalid value is passed, "" is used instead.

      #

      # If valid set of IP address ranges are put into this value,

      # Istio will no longer intercept traffic going to IP addresses

      # outside the provided ranges and there is no need to specify

      # egress rules.

      #

      # To determine the IP ranges of your cluster:

      #   IBM Cloud Private: cat cluster/config.yaml | grep service_cluster_ip_range

      #   IBM Cloud Kubernetes Service: "172.30.0.0/16,172.20.0.0/16,10.10.10.0/24"

      #   Google Container Engine (GKE): gcloud container clusters describe XXXXXXX
      --zone=XXXXXX | grep -e clusterIpv4Cidr -e servicesIpv4Cidr

      #   Azure Kubernetes Service (AKS): "10.0.0.0/16"

      #   Azure Container Service (ACS; deprecated): "10.244.0.0/16,10.240.0.0/16"

      #   Azure Container Service Engine (ACS-Engine; OSS): Configurable, but defaults
      to "10.0.0.0/16"

      #   Minikube: "10.0.0.1/24"

      #

      # For more information, visit

      # https://istio.io/docs/tasks/traffic-management/egress/

      #

      istio.sidecar.includeOutboundIPRanges: "*"


      # clusteringress.class specifies the default cluster ingress class

      # to use when not dictated by Route annotation.

      #

      # If not specified, will use the Istio ingress.

      #

      # Note that changing the ClusterIngress class of an existing Route

      # will result in undefined behavior.  Therefore it is best to only

      # update this value during the setup of Knative, to avoid getting

      # undefined behavior.

      clusteringress.class: "istio.ingress.networking.knative.dev"


      # domainTemplate specifies the golang text template string to use

      # when constructing the Knative service''s DNS name. The default

      # value is "{{.Name}}.{{.Namespace}}.{{.Domain}}". And those three

      # values (Name, Namespace, Domain) are the only variables defined.

      #

      # Changing this value might be necessary when the extra levels in

      # the domain name generated is problematic for wildcard certificates

      # that only support a single level of domain name added to the

      # certificate''s domain. In those cases you might consider using a value

      # of "{{.Name}}-{{.Namespace}}.{{.Domain}}", or removing the Namespace

      # entirely from the template. When choosing a new value be thoughtful

      # of the potential for conflicts - for example, when users choose to use

      # characters such as `-` in their service, or namespace, names.

      # {{.Annotations}} can be used for any customization in the go template if needed.

      # We strongly recommend keeping namespace part of the template to avoid domain
      name clashes

      # Example ''{{.Name}}-{{.Namespace}}.{{ index .Annotations "sub"}}.{{.Domain}}''

      # and you have an annotation {"sub":"foo"}, then the generated template would
      be {Name}-{Namespace}.foo.{Domain}

      domainTemplate: "{{.Name}}.{{.Namespace}}.{{.Domain}}"


      # tagTemplate specifies the golang text template string to use

      # when constructing the DNS name for "tags" within the traffic blocks

      # of Routes and Configuration.  This is used in conjunction with the

      # domainTemplate above to determine the full URL for the tag.

      tagTemplate: "{{.Name}}-{{.Tag}}"


      # Controls whether TLS certificates are automatically provisioned and

      # installed in the Knative ingress to terminate external TLS connection.

      # 1. Enabled: enabling auto-TLS feature.

      # 2. Disabled: disabling auto-TLS feature.

      autoTLS: "Disabled"


      # Controls the behavior of the HTTP endpoint for the Knative ingress.

      # It requires autoTLS to be enabled.

      # 1. Enabled: The Knative ingress will be able to serve HTTP connection.

      # 2. Disabled: The Knative ingress ter will reject HTTP traffic.

      # 3. Redirected: The Knative ingress will send a 302 redirect for all

      # http connections, asking the clients to use HTTPS

      httpProtocol: "Enabled"

      '
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-network
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: "################################\n#                              #\n\
      #    EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\
      \n# This block is not actually functional configuration,\n# but serves to illustrate\
      \ the available configuration\n# options and document them in a way that is\
      \ accessible\n# to users that `kubectl edit` this config map.\n#\n# These sample\
      \ configuration options may be copied out of\n# this example block and unindented\
      \ to be in the data block\n# to actually change the configuration.\n\n# logging.enable-var-log-collection\
      \ defaults to false.\n# The fluentd daemon set will be set up to collect /var/log\
      \ if\n# this flag is true.\nlogging.enable-var-log-collection: false\n\n# logging.revision-url-template\
      \ provides a template to use for producing the\n# logging URL that is injected\
      \ into the status of each Revision.\n# This value is what you might use the\
      \ the Knative monitoring bundle, and provides\n# access to Kibana after setting\
      \ up kubectl proxy.\nlogging.revision-url-template: |\n  http://localhost:8001/api/v1/namespaces/knative-monitoring/services/kibana-logging/proxy/app/kibana#/discover?_a=(query:(match:(kubernetes.labels.knative-dev%2FrevisionUID:(query:'${REVISION_UID}',type:phrase))))\n\
      \n# If non-empty, this enables queue proxy writing request logs to stdout.\n\
      # The value determines the shape of the request logs and it must be a valid\
      \ go text/template.\n# It is important to keep this as a single line. Multiple\
      \ lines are parsed as separate entities\n# by most collection agents and will\
      \ split the request logs into multiple records.\n#\n# The following fields and\
      \ functions are available to the template:\n#\n# Request: An http.Request (see\
      \ https://golang.org/pkg/net/http/#Request)\n# representing an HTTP request\
      \ received by the server.\n#\n# Response:\n# struct {\n#   Code    int     \
      \  // HTTP status code (see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)\n\
      #   Size    int       // An int representing the size of the response.\n#  \
      \ Latency float64   // A float64 representing the latency of the response in\
      \ seconds.\n# }\n#\n# Revision:\n# struct {\n#   Name          string  // Knative\
      \ revision name\n#   Namespace     string  // Knative revision namespace\n#\
      \   Service       string  // Knative service name\n#   Configuration string\
      \  // Knative configuration name\n#   PodName       string  // Name of the pod\
      \ hosting the revision\n#   PodIP         string  // IP of the pod hosting the\
      \ revision\n# }\n#\nlogging.request-log-template: '{\"httpRequest\": {\"requestMethod\"\
      : \"{{.Request.Method}}\", \"requestUrl\": \"{{js .Request.RequestURI}}\", \"\
      requestSize\": \"{{.Request.ContentLength}}\", \"status\": {{.Response.Code}},\
      \ \"responseSize\": \"{{.Response.Size}}\", \"userAgent\": \"{{js .Request.UserAgent}}\"\
      , \"remoteIp\": \"{{js .Request.RemoteAddr}}\", \"serverIp\": \"{{.Revision.PodIP}}\"\
      , \"referer\": \"{{js .Request.Referer}}\", \"latency\": \"{{.Response.Latency}}s\"\
      , \"protocol\": \"{{.Request.Proto}}\"}, \"traceId\": \"{{index .Request.Header\
      \ \"X-B3-Traceid\"}}\"}'\n\n# metrics.backend-destination field specifies the\
      \ system metrics destination.\n# It supports either prometheus (the default)\
      \ or stackdriver.\n# Note: Using stackdriver will incur additional charges\n\
      metrics.backend-destination: prometheus\n\n# metrics.request-metrics-backend-destination\
      \ specifies the request metrics\n# destination. If non-empty, it enables queue\
      \ proxy to send request metrics.\n# Currently supported values: prometheus,\
      \ stackdriver.\nmetrics.request-metrics-backend-destination: prometheus\n\n\
      # metrics.stackdriver-project-id field specifies the stackdriver project ID.\
      \ This\n# field is optional. When running on GCE, application default credentials\
      \ will be\n# used if this field is not provided.\nmetrics.stackdriver-project-id:\
      \ \"<your stackdriver project id>\"\n\n# metrics.allow-stackdriver-custom-metrics\
      \ indicates whether it is allowed to send metrics to\n# Stackdriver using \"\
      global\" resource type and custom metric type if the\n# metrics are not supported\
      \ by \"knative_revision\" resource type. Setting this\n# flag to \"true\" could\
      \ cause extra Stackdriver charge.\n# If metrics.backend-destination is not Stackdriver,\
      \ this is ignored.\nmetrics.allow-stackdriver-custom-metrics: \"false\"\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-observability
    namespace: knative-serving
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.

      #

      # If true we enable adding spans within our applications.

      enable: "false"


      # URL to zipkin collector where traces are sent.

      zipkin-endpoint: "http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans"


      # Enable zipkin debug mode. This allows all spans to be sent to the server

      # bypassing sampling.

      debug: "false"


      # Percentage (0-1) of requests to trace

      sample-rate: "0.1"

      '
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: config-tracing
    namespace: knative-serving
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: controller
    namespace: knative-serving
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: controller
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: controller
          serving.knative.dev/release: v0.7.1
      spec:
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/serving
          image: gcr.io/knative-releases/github.com/knative/serving/cmd/controller@sha256:36e48772b4a38d4790c4b72d3e05c5552b3b083709ba6bf3f355af0c4ebb216a
          name: controller
          ports:
          - containerPort: 9090
            name: metrics
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - mountPath: /etc/config-logging
            name: config-logging
        serviceAccountName: controller
        volumes:
        - configMap:
            name: config-logging
          name: config-logging
- apiVersion: apiregistration.k8s.io/v1beta1
  kind: APIService
  metadata:
    labels:
      autoscaling.knative.dev/metric-provider: custom-metrics
      serving.knative.dev/release: v0.7.1
    name: v1beta1.custom.metrics.k8s.io
  spec:
    group: custom.metrics.k8s.io
    groupPriorityMinimum: 100
    insecureSkipTLSVerify: true
    service:
      name: autoscaler
      namespace: knative-serving
    version: v1beta1
    versionPriority: 100
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      networking.knative.dev/certificate-provider: cert-manager
      serving.knative.dev/release: v0.7.1
    name: networking-certmanager
    namespace: knative-serving
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: networking-certmanager
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: networking-certmanager
      spec:
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/serving
          image: gcr.io/knative-releases/github.com/knative/serving/cmd/networking/certmanager@sha256:0868e623602dfa736092baf15c71930dff67a5eec0d89a689496525b32bdad08
          name: networking-certmanager
          ports:
          - containerPort: 9090
            name: metrics
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - mountPath: /etc/config-logging
            name: config-logging
        serviceAccountName: controller
        volumes:
        - configMap:
            name: config-logging
          name: config-logging
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        serving.knative.dev/controller: 'true'
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: knative-serving-admin
  rules: []
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      networking.knative.dev/ingress-provider: istio
      serving.knative.dev/release: v0.7.1
    name: networking-istio
    namespace: knative-serving
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: networking-istio
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: networking-istio
      spec:
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/serving
          image: gcr.io/knative-releases/github.com/knative/serving/cmd/networking/istio@sha256:5dfcc86f10638ce64c173969a685cf8d3a243cf863b62c95a952c0b4f9513f88
          name: networking-istio
          ports:
          - containerPort: 9090
            name: metrics
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - mountPath: /etc/config-logging
            name: config-logging
        serviceAccountName: controller
        volumes:
        - configMap:
            name: config-logging
          name: config-logging
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: webhook
    namespace: knative-serving
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: webhook
        role: webhook
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
          sidecar.istio.io/inject: 'false'
        labels:
          app: webhook
          role: webhook
          serving.knative.dev/release: v0.7.1
      spec:
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          image: gcr.io/knative-releases/github.com/knative/serving/cmd/webhook@sha256:76e726d1f3f015623513224c3787793f0e71294f8df9e6dca46dc92f31bec1c3
          name: webhook
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - mountPath: /etc/config-logging
            name: config-logging
        serviceAccountName: controller
        volumes:
        - configMap:
            name: config-logging
          name: config-logging
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: configurations.serving.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.latestCreatedRevisionName
      name: LatestCreated
      type: string
    - JSONPath: .status.latestReadyRevisionName
      name: LatestReady
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    group: serving.knative.dev
    names:
      categories:
      - all
      - knative
      - serving
      kind: Configuration
      plural: configurations
      shortNames:
      - config
      - cfg
      singular: configuration
    scope: Namespaced
    subresources:
      status: {}
    versions:
    - name: v1alpha1
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: revisions.serving.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.serviceName
      name: Service Name
      type: string
    - JSONPath: .metadata.labels['serving\.knative\.dev/configurationGeneration']
      name: Generation
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    group: serving.knative.dev
    names:
      categories:
      - all
      - knative
      - serving
      kind: Revision
      plural: revisions
      shortNames:
      - rev
      singular: revision
    scope: Namespaced
    subresources:
      status: {}
    versions:
    - name: v1alpha1
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: routes.serving.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.url
      name: URL
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    group: serving.knative.dev
    names:
      categories:
      - all
      - knative
      - serving
      kind: Route
      plural: routes
      shortNames:
      - rt
      singular: route
    scope: Namespaced
    subresources:
      status: {}
    versions:
    - name: v1alpha1
      served: true
      storage: true
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
      serving.knative.dev/release: v0.7.1
    name: services.serving.knative.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.url
      name: URL
      type: string
    - JSONPath: .status.latestCreatedRevisionName
      name: LatestCreated
      type: string
    - JSONPath: .status.latestReadyRevisionName
      name: LatestReady
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - JSONPath: .status.conditions[?(@.type=='Ready')].reason
      name: Reason
      type: string
    group: serving.knative.dev
    names:
      categories:
      - all
      - knative
      - serving
      kind: Service
      plural: services
      shortNames:
      - kservice
      - ksvc
      singular: service
    scope: Namespaced
    subresources:
      status: {}
    versions:
    - name: v1alpha1
      served: true
      storage: true
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      serving.knative.dev/controller: 'true'
      serving.knative.dev/release: v0.7.1
    name: knative-serving-core
  rules:
  - apiGroups:
    - ''
    resources:
    - pods
    - namespaces
    - secrets
    - configmaps
    - endpoints
    - services
    - events
    - serviceaccounts
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - ''
    resources:
    - endpoints/restricted
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - deployments
    - deployments/finalizers
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - serving.knative.dev
    - autoscaling.internal.knative.dev
    - networking.internal.knative.dev
    resources:
    - '*'
    - '*/status'
    - '*/finalizers'
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - deletecollection
    - patch
    - watch
  - apiGroups:
    - caching.internal.knative.dev
    resources:
    - images
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: controller
    namespace: knative-serving
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      autoscaling.knative.dev/metric-provider: custom-metrics
      serving.knative.dev/release: v0.7.1
    name: custom-metrics:system:auth-delegator
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - kind: ServiceAccount
    name: controller
    namespace: knative-serving
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      autoscaling.knative.dev/metric-provider: custom-metrics
      serving.knative.dev/release: v0.7.1
    name: hpa-controller-custom-metrics
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: custom-metrics-server-resources
  subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: knative-serving-controller-admin
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: knative-serving-admin
  subjects:
  - kind: ServiceAccount
    name: controller
    namespace: knative-serving
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: knative-monitoring
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: elasticsearch-logging
      kubernetes.io/cluster-service: 'true'
      kubernetes.io/name: Elasticsearch
    name: elasticsearch-logging
    namespace: knative-monitoring
  spec:
    ports:
    - port: 9200
      protocol: TCP
      targetPort: db
    selector:
      app: elasticsearch-logging
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: fluentd-ds
      kubernetes.io/cluster-service: 'true'
      serving.knative.dev/release: v0.7.1
    name: fluentd-ds
  rules:
  - apiGroups:
    - ''
    resources:
    - namespaces
    - pods
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: fluentd-ds
      kubernetes.io/cluster-service: 'true'
      serving.knative.dev/release: v0.7.1
    name: fluentd-ds
  roleRef:
    apiGroup: ''
    kind: ClusterRole
    name: fluentd-ds
  subjects:
  - apiGroup: ''
    kind: ServiceAccount
    name: fluentd-ds
    namespace: knative-monitoring
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: fluentd-ds
      serving.knative.dev/release: v0.7.1
    name: fluentd-ds
    namespace: knative-monitoring
  spec:
    ports:
    - name: fluentd-tcp
      port: 24224
      protocol: TCP
      targetPort: 24224
    - name: fluentd-udp
      port: 24224
      protocol: UDP
      targetPort: 24224
    selector:
      app: fluentd-ds
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: fluentd-ds
      kubernetes.io/cluster-service: 'true'
      serving.knative.dev/release: v0.7.1
      version: v2.0.4
    name: fluentd-ds
    namespace: knative-monitoring
  spec:
    selector:
      matchLabels:
        app: fluentd-ds
        version: v2.0.4
    template:
      metadata:
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ''
        labels:
          app: fluentd-ds
          kubernetes.io/cluster-service: 'true'
          serving.knative.dev/release: v0.7.1
          version: v2.0.4
      spec:
        containers:
        - env:
          - name: FLUENTD_ARGS
            value: --no-supervisor -q
          image: k8s.gcr.io/fluentd-elasticsearch:v2.0.4
          name: fluentd-ds
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
          - mountPath: /var/log/containers
            name: varlogcontainers
            readOnly: true
          - mountPath: /var/log/pods
            name: varlogpods
            readOnly: true
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/kubelet/pods
            name: varlibkubeletpods
            readOnly: true
          - mountPath: /host/lib
            name: libsystemddir
            readOnly: true
          - mountPath: /etc/fluent/config.d
            name: config-volume
        nodeSelector:
          beta.kubernetes.io/fluentd-ds-ready: 'true'
        serviceAccountName: fluentd-ds
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/log/containers
          name: varlogcontainers
        - hostPath:
            path: /var/log/pods
          name: varlogpods
        - hostPath:
            path: /var/lib/docker/containers
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/kubelet/pods
          name: varlibkubeletpods
        - hostPath:
            path: /usr/lib64
          name: libsystemddir
        - configMap:
            name: fluentd-ds-config
          name: config-volume
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
    name: kube-state-metrics
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    labels:
    name: kube-state-metrics-resizer
    namespace: knative-monitoring
  rules:
  - apiGroups:
    - ''
    resources:
    - pods
    verbs:
    - get
  - apiGroups:
    - extensions
    resourceNames:
    - kube-state-metrics
    resources:
    - deployments
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    labels:
    name: kube-state-metrics
    namespace: knative-monitoring
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kube-state-metrics-resizer
  subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    labels:
    name: kube-state-metrics
    namespace: knative-monitoring
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    - secrets
    - nodes
    - pods
    - services
    - resourcequotas
    - replicationcontrollers
    - limitranges
    - persistentvolumeclaims
    - persistentvolumes
    - namespaces
    - endpoints
    verbs:
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - replicasets
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - list
    - watch
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
    name: kube-state-metrics
    namespace: knative-monitoring
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-state-metrics
  subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: knative-monitoring
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
    name: kube-state-metrics
    namespace: knative-monitoring
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: kube-state-metrics
      spec:
        containers:
        - args:
          - --secure-listen-address=:8443
          - --upstream=http://127.0.0.1:8081/
          image: quay.io/coreos/kube-rbac-proxy:v0.3.0
          name: kube-rbac-proxy-main
          ports:
          - containerPort: 8443
            name: https-main
          resources:
            limits:
              cpu: 20m
              memory: 40Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - args:
          - --secure-listen-address=:9443
          - --upstream=http://127.0.0.1:8082/
          image: quay.io/coreos/kube-rbac-proxy:v0.3.0
          name: kube-rbac-proxy-self
          ports:
          - containerPort: 9443
            name: https-self
          resources:
            limits:
              cpu: 20m
              memory: 40Mi
            requests:
              cpu: 10m
              memory: 20Mi
        - args:
          - --host=127.0.0.1
          - --port=8081
          - --telemetry-host=127.0.0.1
          - --telemetry-port=8082
          image: quay.io/coreos/kube-state-metrics:v1.3.0
          name: kube-state-metrics
        - command:
          - /pod_nanny
          - --container=kube-state-metrics
          - --cpu=100m
          - --extra-cpu=1m
          - --memory=100Mi
          - --extra-memory=2Mi
          - --threshold=5
          - --deployment=kube-state-metrics
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: k8s.gcr.io/addon-resizer:1.7
          name: addon-resizer
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 30Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccountName: kube-state-metrics
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: elasticsearch-logging
      kubernetes.io/cluster-service: 'true'
    name: elasticsearch-logging
    namespace: knative-monitoring
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kube-state-metrics
    name: kube-state-metrics
    namespace: knative-monitoring
  spec:
    clusterIP: None
    ports:
    - name: https-main
      port: 8443
      protocol: TCP
      targetPort: https-main
    - name: https-self
      port: 9443
      protocol: TCP
      targetPort: https-self
    selector:
      app: kube-state-metrics
- apiVersion: v1
  data:
    kubernetes-deployment-dashboard.json: "{\n  \"__inputs\": [\n    {\n      \"description\"\
      : \"\",\n      \"label\": \"prometheus\",\n      \"name\": \"prometheus\",\n\
      \      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\",\n\
      \      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\": {\n    \"list\"\
      : []\n  },\n  \"editable\": false,\n  \"gnetId\": null,\n  \"graphTooltip\"\
      : 0,\n  \"id\": null,\n  \"links\": [],\n  \"rows\": [\n    {\n      \"collapse\"\
      : false,\n      \"editable\": false,\n      \"height\": \"200px\",\n      \"\
      panels\": [\n        {\n          \"colorBackground\": false,\n          \"\
      colorValue\": false,\n          \"colors\": [\n            \"rgba(245, 54, 54,\
      \ 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(50,\
      \ 172, 45, 0.97)\"\n          ],\n          \"datasource\": \"prometheus\",\n\
      \          \"editable\": false,\n          \"format\": \"none\",\n         \
      \ \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n\
      \            \"show\": false,\n            \"thresholdLabels\": false,\n   \
      \         \"thresholdMarkers\": true\n          },\n          \"id\": 8,\n \
      \         \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfix\": \"cores\",\n          \"postfixFontSize\": \"50%\"\
      ,\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\",\n   \
      \       \"rangeMaps\": [\n            {\n              \"from\": \"null\",\n\
      \              \"text\": \"N/A\",\n              \"to\": \"null\"\n        \
      \    }\n          ],\n          \"span\": 4,\n          \"sparkline\": {\n \
      \           \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": true\n          },\n          \"targets\": [\n            {\n      \
      \        \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=\\\
      \"$deployment_namespace\\\",pod_name=~\\\"$deployment_name.*\\\"}[3m]))\",\n\
      \              \"intervalFactor\": 2,\n              \"refId\": \"A\",\n   \
      \           \"step\": 600\n            }\n          ],\n          \"title\"\
      : \"CPU\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"110%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"avg\"\n        },\n\
      \        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : false,\n          \"colors\": [\n            \"rgba(245, 54, 54, 0.9)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(50, 172, 45,\
      \ 0.97)\"\n          ],\n          \"datasource\": \"prometheus\",\n       \
      \   \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": true\n          },\n          \"id\": 9,\n         \
      \ \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfix\": \"GB\",\n          \"postfixFontSize\": \"50%\",\n\
      \          \"prefix\": \"\",\n          \"prefixFontSize\": \"80%\",\n     \
      \     \"rangeMaps\": [\n            {\n              \"from\": \"null\",\n \
      \             \"text\": \"N/A\",\n              \"to\": \"null\"\n         \
      \   }\n          ],\n          \"span\": 4,\n          \"sparkline\": {\n  \
      \          \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": true\n          },\n          \"targets\": [\n            {\n      \
      \        \"expr\": \"sum(container_memory_usage_bytes{namespace=\\\"$deployment_namespace\\\
      \",pod_name=~\\\"$deployment_name.*\\\"}) / 1024^3\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 600\n       \
      \     }\n          ],\n          \"title\": \"Memory\",\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"110%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"avg\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": false,\n          \"colors\": [\n      \
      \      \"rgba(245, 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      Bps\",\n          \"gauge\": {\n            \"maxValue\": 100,\n           \
      \ \"minValue\": 0,\n            \"show\": false,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": false\n          },\n          \"\
      id\": 7,\n          \"links\": [],\n          \"mappingType\": 1,\n        \
      \  \"mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfix\": \"\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 4,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": true\n          },\n          \"targets\": [\n            {\n      \
      \        \"expr\": \"sum(rate(container_network_transmit_bytes_total{namespace=\\\
      \"$deployment_namespace\\\",pod_name=~\\\"$deployment_name.*\\\"}[3m])) + sum(rate(container_network_receive_bytes_total{namespace=\\\
      \"$deployment_namespace\\\",pod_name=~\\\"$deployment_name.*\\\"}[3m]))\",\n\
      \              \"intervalFactor\": 2,\n              \"refId\": \"A\",\n   \
      \           \"step\": 600\n            }\n          ],\n          \"title\"\
      : \"Network\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"avg\"\n        }\n\
      \      ],\n      \"showTitle\": false,\n      \"title\": \"Dashboard Row\",\n\
      \      \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\": false,\n  \
      \    \"editable\": false,\n      \"height\": \"100px\",\n      \"panels\": [\n\
      \        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : false,\n          \"colors\": [\n            \"rgba(245, 54, 54, 0.9)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(50, 172, 45,\
      \ 0.97)\"\n          ],\n          \"datasource\": \"prometheus\",\n       \
      \   \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": false\n          },\n          \"id\": 5,\n        \
      \  \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"max(kube_deployment_spec_replicas{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"metric\": \"\
      kube_deployment_spec_replicas\",\n              \"refId\": \"A\",\n        \
      \      \"step\": 600\n            }\n          ],\n          \"title\": \"Desired\
      \ Replicas\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"avg\"\n        },\n\
      \        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : false,\n          \"colors\": [\n            \"rgba(245, 54, 54, 0.9)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(50, 172, 45,\
      \ 0.97)\"\n          ],\n          \"datasource\": \"prometheus\",\n       \
      \   \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": true\n          },\n          \"id\": 6,\n         \
      \ \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"min(kube_deployment_status_replicas_available{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"refId\": \"\
      A\",\n              \"step\": 600\n            }\n          ],\n          \"\
      title\": \"Available Replicas\",\n          \"type\": \"singlestat\",\n    \
      \      \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n           \
      \ {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n      \
      \        \"value\": \"null\"\n            }\n          ],\n          \"valueName\"\
      : \"avg\"\n        },\n        {\n          \"colorBackground\": false,\n  \
      \        \"colorValue\": false,\n          \"colors\": [\n            \"rgba(245,\
      \ 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"\
      rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"none\",\n       \
      \   \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\":\
      \ 0,\n            \"show\": false,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"id\": 3,\n\
      \          \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"max(kube_deployment_status_observed_generation{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"refId\": \"\
      A\",\n              \"step\": 600\n            }\n          ],\n          \"\
      title\": \"Observed Generation\",\n          \"type\": \"singlestat\",\n   \
      \       \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n          \
      \  {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n     \
      \         \"value\": \"null\"\n            }\n          ],\n          \"valueName\"\
      : \"avg\"\n        },\n        {\n          \"colorBackground\": false,\n  \
      \        \"colorValue\": false,\n          \"colors\": [\n            \"rgba(245,\
      \ 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"\
      rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"none\",\n       \
      \   \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\":\
      \ 0,\n            \"show\": false,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"id\": 2,\n\
      \          \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"max(kube_deployment_metadata_generation{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"refId\": \"\
      A\",\n              \"step\": 600\n            }\n          ],\n          \"\
      title\": \"Metadata Generation\",\n          \"type\": \"singlestat\",\n   \
      \       \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n          \
      \  {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n     \
      \         \"value\": \"null\"\n            }\n          ],\n          \"valueName\"\
      : \"avg\"\n        }\n      ],\n      \"showTitle\": false,\n      \"title\"\
      : \"Dashboard Row\",\n      \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\"\
      : false,\n      \"editable\": false,\n      \"height\": \"350px\",\n      \"\
      panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\":\
      \ false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n    \
      \      \"datasource\": \"prometheus\",\n          \"editable\": false,\n   \
      \       \"error\": false,\n          \"fill\": 1,\n          \"grid\": {\n \
      \           \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n           \
      \ \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n       \
      \   \"id\": 1,\n          \"isNew\": true,\n          \"legend\": {\n      \
      \      \"alignAsTable\": false,\n            \"avg\": false,\n            \"\
      current\": false,\n            \"hideEmpty\": false,\n            \"hideZero\"\
      : false,\n            \"max\": false,\n            \"min\": false,\n       \
      \     \"rightSide\": false,\n            \"show\": true,\n            \"total\"\
      : false\n          },\n          \"lines\": true,\n          \"linewidth\":\
      \ 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n\
      \          \"percentage\": false,\n          \"pointradius\": 5,\n         \
      \ \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\"\
      : [],\n          \"spaceLength\": 10,\n          \"span\": 12,\n          \"\
      stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n\
      \            {\n              \"expr\": \"max(kube_deployment_status_replicas{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"current replicas\",\n              \"refId\": \"A\",\n              \"step\"\
      : 30\n            },\n            {\n              \"expr\": \"min(kube_deployment_status_replicas_available{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"available\",\n              \"refId\": \"B\",\n              \"step\": 30\n\
      \            },\n            {\n              \"expr\": \"max(kube_deployment_status_replicas_unavailable{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"unavailable\",\n              \"refId\": \"C\",\n              \"step\"\
      : 30\n            },\n            {\n              \"expr\": \"min(kube_deployment_status_replicas_updated{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"updated\",\n              \"refId\": \"D\",\n              \"step\": 30\n\
      \            },\n            {\n              \"expr\": \"max(kube_deployment_spec_replicas{deployment=\\\
      \"$deployment_name\\\",namespace=\\\"$deployment_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"desired\",\n              \"refId\": \"E\",\n              \"step\": 30\n\
      \            }\n          ],\n          \"title\": \"Replicas\",\n         \
      \ \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\"\
      : true,\n            \"sort\": 0,\n            \"value_type\": \"cumulative\"\
      \n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n   \
      \         \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"none\",\n              \"label\": \"\",\n              \"logBase\"\
      : 1,\n              \"show\": true\n            },\n            {\n        \
      \      \"format\": \"short\",\n              \"label\": \"\",\n            \
      \  \"logBase\": 1,\n              \"show\": false\n            }\n         \
      \ ]\n        }\n      ],\n      \"showTitle\": false,\n      \"title\": \"Dashboard\
      \ Row\",\n      \"titleSize\": \"h6\"\n    }\n  ],\n  \"schemaVersion\": 14,\n\
      \  \"sharedCrosshair\": false,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"\
      templating\": {\n    \"list\": [\n      {\n        \"allValue\": \".*\",\n \
      \       \"current\": {},\n        \"datasource\": \"prometheus\",\n        \"\
      hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\"\
      ,\n        \"multi\": false,\n        \"name\": \"deployment_namespace\",\n\
      \        \"options\": [],\n        \"query\": \"label_values(kube_deployment_metadata_generation,\
      \ namespace)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n       \
      \ \"sort\": 0,\n        \"tagValuesQuery\": null,\n        \"tags\": [],\n \
      \       \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\"\
      : false\n      },\n      {\n        \"allValue\": null,\n        \"current\"\
      : {},\n        \"datasource\": \"prometheus\",\n        \"hide\": 0,\n     \
      \   \"includeAll\": false,\n        \"label\": \"Deployment\",\n        \"multi\"\
      : false,\n        \"name\": \"deployment_name\",\n        \"options\": [],\n\
      \        \"query\": \"label_values(kube_deployment_metadata_generation{namespace=\\\
      \"$deployment_namespace\\\"}, deployment)\",\n        \"refresh\": 1,\n    \
      \    \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\"\
      ,\n        \"tags\": [],\n        \"tagsQuery\": \"deployment\",\n        \"\
      type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\"\
      : {\n    \"from\": \"now-6h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\"\
      : {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\"\
      ,\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\"\
      ,\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\"\
      ,\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\"\
      ,\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\"\
      : \"browser\",\n  \"title\": \"Deployment\",\n  \"version\": 1\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-deployment
    namespace: knative-monitoring
- apiVersion: v1
  data:
    kubernetes-capacity-planning-dashboard.json: "{\n  \"__inputs\": [\n    {\n  \
      \    \"description\": \"\",\n      \"label\": \"prometheus\",\n      \"name\"\
      : \"prometheus\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\"\
      : \"Prometheus\",\n      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\"\
      : {\n    \"list\": []\n  },\n  \"editable\": false,\n  \"gnetId\": null,\n \
      \ \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"refresh\": false,\n\
      \  \"rows\": [\n    {\n      \"collapse\": false,\n      \"editable\": false,\n\
      \      \"height\": \"250px\",\n      \"panels\": [\n        {\n          \"\
      aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n\
      \          \"dashes\": false,\n          \"datasource\": \"prometheus\",\n \
      \         \"editable\": false,\n          \"error\": false,\n          \"fill\"\
      : 1,\n          \"grid\": {\n            \"threshold1Color\": \"rgba(216, 200,\
      \ 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\
      \n          },\n          \"id\": 3,\n          \"isNew\": false,\n        \
      \  \"legend\": {\n            \"alignAsTable\": false,\n            \"avg\"\
      : false,\n            \"current\": false,\n            \"hideEmpty\": false,\n\
      \            \"hideZero\": false,\n            \"max\": false,\n           \
      \ \"min\": false,\n            \"rightSide\": false,\n            \"show\":\
      \ true,\n            \"total\": false\n          },\n          \"lines\": true,\n\
      \          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\"\
      : \"connected\",\n          \"percentage\": false,\n          \"pointradius\"\
      : 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n    \
      \      \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"\
      span\": 6,\n          \"stack\": false,\n          \"steppedLine\": false,\n\
      \          \"targets\": [\n            {\n              \"expr\": \"sum(rate(node_cpu{mode=\\\
      \"idle\\\"}[2m])) * 100\",\n              \"hide\": false,\n              \"\
      intervalFactor\": 10,\n              \"legendFormat\": \"\",\n             \
      \ \"refId\": \"A\",\n              \"step\": 50\n            }\n          ],\n\
      \          \"title\": \"Idle CPU\",\n          \"tooltip\": {\n            \"\
      msResolution\": false,\n            \"shared\": true,\n            \"sort\"\
      : 0,\n            \"value_type\": \"cumulative\"\n          },\n          \"\
      type\": \"graph\",\n          \"xaxis\": {\n            \"mode\": \"time\",\n\
      \            \"show\": true,\n            \"values\": []\n          },\n   \
      \       \"yaxes\": [\n            {\n              \"format\": \"percent\",\n\
      \              \"label\": \"cpu usage\",\n              \"logBase\": 1,\n  \
      \            \"min\": 0,\n              \"show\": true\n            },\n   \
      \         {\n              \"format\": \"short\",\n              \"logBase\"\
      : 1,\n              \"show\": true\n            }\n          ]\n        },\n\
      \        {\n          \"aliasColors\": {},\n          \"bars\": false,\n   \
      \       \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"error\": false,\n\
      \          \"fill\": 1,\n          \"grid\": {\n            \"threshold1Color\"\
      : \"rgba(216, 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234,\
      \ 112, 112, 0.22)\"\n          },\n          \"id\": 9,\n          \"isNew\"\
      : false,\n          \"legend\": {\n            \"alignAsTable\": false,\n  \
      \          \"avg\": false,\n            \"current\": false,\n            \"\
      hideEmpty\": false,\n            \"hideZero\": false,\n            \"max\":\
      \ false,\n            \"min\": false,\n            \"rightSide\": false,\n \
      \           \"show\": true,\n            \"total\": false\n          },\n  \
      \        \"lines\": true,\n          \"linewidth\": 2,\n          \"links\"\
      : [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\"\
      : false,\n          \"pointradius\": 5,\n          \"points\": false,\n    \
      \      \"renderer\": \"flot\",\n          \"seriesOverrides\": [],\n       \
      \   \"spaceLength\": 10,\n          \"span\": 6,\n          \"stack\": false,\n\
      \          \"steppedLine\": false,\n          \"targets\": [\n            {\n\
      \              \"expr\": \"sum(node_load1)\",\n              \"intervalFactor\"\
      : 4,\n              \"legendFormat\": \"load 1m\",\n              \"refId\"\
      : \"A\",\n              \"step\": 20,\n              \"target\": \"\"\n    \
      \        },\n            {\n              \"expr\": \"sum(node_load5)\",\n \
      \             \"intervalFactor\": 4,\n              \"legendFormat\": \"load\
      \ 5m\",\n              \"refId\": \"B\",\n              \"step\": 20,\n    \
      \          \"target\": \"\"\n            },\n            {\n              \"\
      expr\": \"sum(node_load15)\",\n              \"intervalFactor\": 4,\n      \
      \        \"legendFormat\": \"load 15m\",\n              \"refId\": \"C\",\n\
      \              \"step\": 20,\n              \"target\": \"\"\n            }\n\
      \          ],\n          \"title\": \"System Load\",\n          \"tooltip\"\
      : {\n            \"msResolution\": false,\n            \"shared\": true,\n \
      \           \"sort\": 0,\n            \"value_type\": \"cumulative\"\n     \
      \     },\n          \"type\": \"graph\",\n          \"xaxis\": {\n         \
      \   \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"percentunit\",\n              \"logBase\": 1,\n              \"\
      show\": true\n            },\n            {\n              \"format\": \"short\"\
      ,\n              \"logBase\": 1,\n              \"show\": true\n           \
      \ }\n          ]\n        }\n      ],\n      \"showTitle\": false,\n      \"\
      title\": \"New Row\",\n      \"titleSize\": \"h6\"\n    },\n    {\n      \"\
      collapse\": false,\n      \"editable\": false,\n      \"height\": \"250px\"\
      ,\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n        \
      \  \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n\
      \          \"datasource\": \"prometheus\",\n          \"editable\": false,\n\
      \          \"error\": false,\n          \"fill\": 1,\n          \"grid\": {\n\
      \            \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n          \
      \  \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n      \
      \    \"id\": 4,\n          \"isNew\": false,\n          \"legend\": {\n    \
      \        \"alignAsTable\": false,\n            \"avg\": false,\n           \
      \ \"current\": false,\n            \"hideEmpty\": false,\n            \"hideZero\"\
      : false,\n            \"max\": false,\n            \"min\": false,\n       \
      \     \"rightSide\": false,\n            \"show\": true,\n            \"total\"\
      : false\n          },\n          \"lines\": true,\n          \"linewidth\":\
      \ 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n\
      \          \"percentage\": false,\n          \"pointradius\": 5,\n         \
      \ \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\"\
      : [\n            {\n              \"alias\": \"node_memory_SwapFree{instance=\\\
      \"172.17.0.1:9100\\\",job=\\\"prometheus\\\"}\",\n              \"yaxis\": 2\n\
      \            }\n          ],\n          \"spaceLength\": 10,\n          \"span\"\
      : 9,\n          \"stack\": true,\n          \"steppedLine\": false,\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"sum(node_memory_MemTotal)\
      \ - sum(node_memory_MemFree) - sum(node_memory_Buffers) - sum(node_memory_Cached)\"\
      ,\n              \"intervalFactor\": 2,\n              \"legendFormat\": \"\
      memory usage\",\n              \"metric\": \"memo\",\n              \"refId\"\
      : \"A\",\n              \"step\": 10,\n              \"target\": \"\"\n    \
      \        },\n            {\n              \"expr\": \"sum(node_memory_Buffers)\"\
      ,\n              \"interval\": \"\",\n              \"intervalFactor\": 2,\n\
      \              \"legendFormat\": \"memory buffers\",\n              \"metric\"\
      : \"memo\",\n              \"refId\": \"B\",\n              \"step\": 10,\n\
      \              \"target\": \"\"\n            },\n            {\n           \
      \   \"expr\": \"sum(node_memory_Cached)\",\n              \"interval\": \"\"\
      ,\n              \"intervalFactor\": 2,\n              \"legendFormat\": \"\
      memory cached\",\n              \"metric\": \"memo\",\n              \"refId\"\
      : \"C\",\n              \"step\": 10,\n              \"target\": \"\"\n    \
      \        },\n            {\n              \"expr\": \"sum(node_memory_MemFree)\"\
      ,\n              \"interval\": \"\",\n              \"intervalFactor\": 2,\n\
      \              \"legendFormat\": \"memory free\",\n              \"metric\"\
      : \"memo\",\n              \"refId\": \"D\",\n              \"step\": 10,\n\
      \              \"target\": \"\"\n            }\n          ],\n          \"title\"\
      : \"Memory Usage\",\n          \"tooltip\": {\n            \"msResolution\"\
      : false,\n            \"shared\": true,\n            \"sort\": 0,\n        \
      \    \"value_type\": \"individual\"\n          },\n          \"type\": \"graph\"\
      ,\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\"\
      : true,\n            \"values\": []\n          },\n          \"yaxes\": [\n\
      \            {\n              \"format\": \"bytes\",\n              \"logBase\"\
      : 1,\n              \"min\": \"0\",\n              \"show\": true\n        \
      \    },\n            {\n              \"format\": \"short\",\n             \
      \ \"logBase\": 1,\n              \"show\": true\n            }\n          ]\n\
      \        },\n        {\n          \"colorBackground\": false,\n          \"\
      colorValue\": false,\n          \"colors\": [\n            \"rgba(50, 172, 45,\
      \ 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245,\
      \ 54, 54, 0.9)\"\n          ],\n          \"datasource\": \"prometheus\",\n\
      \          \"editable\": false,\n          \"format\": \"percent\",\n      \
      \    \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"hideTimeOverride\"\
      : false,\n          \"id\": 5,\n          \"links\": [],\n          \"mappingType\"\
      : 1,\n          \"mappingTypes\": [\n            {\n              \"name\":\
      \ \"value to text\",\n              \"value\": 1\n            },\n         \
      \   {\n              \"name\": \"range to text\",\n              \"value\":\
      \ 2\n            }\n          ],\n          \"maxDataPoints\": 100,\n      \
      \    \"nullPointMode\": \"connected\",\n          \"postfix\": \"\",\n     \
      \     \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n         \
      \ \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n            {\n\
      \              \"from\": \"null\",\n              \"text\": \"N/A\",\n     \
      \         \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"((sum(node_memory_MemTotal)\
      \ - sum(node_memory_MemFree) - sum(node_memory_Buffers) - sum(node_memory_Cached))\
      \ / sum(node_memory_MemTotal)) * 100\",\n              \"intervalFactor\": 2,\n\
      \              \"metric\": \"\",\n              \"refId\": \"A\",\n        \
      \      \"step\": 60,\n              \"target\": \"\"\n            }\n      \
      \    ],\n          \"thresholds\": \"80, 90\",\n          \"title\": \"Memory\
      \ Usage\",\n          \"transparent\": false,\n          \"type\": \"singlestat\"\
      ,\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n     \
      \       {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n\
      \              \"value\": \"null\"\n            }\n          ],\n          \"\
      valueName\": \"avg\"\n        }\n      ],\n      \"showTitle\": false,\n   \
      \   \"title\": \"New Row\",\n      \"titleSize\": \"h6\"\n    },\n    {\n  \
      \    \"collapse\": false,\n      \"editable\": false,\n      \"height\": \"\
      246px\",\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n \
      \         \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\"\
      : false,\n          \"datasource\": \"prometheus\",\n          \"editable\"\
      : false,\n          \"error\": false,\n          \"fill\": 1,\n          \"\
      grid\": {\n            \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n\
      \            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n\
      \          \"id\": 6,\n          \"isNew\": false,\n          \"legend\": {\n\
      \            \"alignAsTable\": false,\n            \"avg\": false,\n       \
      \     \"current\": false,\n            \"hideEmpty\": false,\n            \"\
      hideZero\": false,\n            \"max\": false,\n            \"min\": false,\n\
      \            \"rightSide\": false,\n            \"show\": true,\n          \
      \  \"total\": false\n          },\n          \"lines\": true,\n          \"\
      linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\"\
      ,\n          \"percentage\": false,\n          \"pointradius\": 5,\n       \
      \   \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\"\
      : [\n            {\n              \"alias\": \"read\",\n              \"yaxis\"\
      : 1\n            },\n            {\n              \"alias\": \"{instance=\\\"\
      172.17.0.1:9100\\\"}\",\n              \"yaxis\": 2\n            },\n      \
      \      {\n              \"alias\": \"io time\",\n              \"yaxis\": 2\n\
      \            }\n          ],\n          \"spaceLength\": 10,\n          \"span\"\
      : 9,\n          \"stack\": false,\n          \"steppedLine\": false,\n     \
      \     \"targets\": [\n            {\n              \"expr\": \"sum(rate(node_disk_bytes_read[5m]))\"\
      ,\n              \"hide\": false,\n              \"intervalFactor\": 4,\n  \
      \            \"legendFormat\": \"read\",\n              \"refId\": \"A\",\n\
      \              \"step\": 20,\n              \"target\": \"\"\n            },\n\
      \            {\n              \"expr\": \"sum(rate(node_disk_bytes_written[5m]))\"\
      ,\n              \"intervalFactor\": 4,\n              \"legendFormat\": \"\
      written\",\n              \"refId\": \"B\",\n              \"step\": 20\n  \
      \          },\n            {\n              \"expr\": \"sum(rate(node_disk_io_time_ms[5m]))\"\
      ,\n              \"intervalFactor\": 4,\n              \"legendFormat\": \"\
      io time\",\n              \"refId\": \"C\",\n              \"step\": 20\n  \
      \          }\n          ],\n          \"title\": \"Disk I/O\",\n          \"\
      tooltip\": {\n            \"msResolution\": false,\n            \"shared\":\
      \ true,\n            \"sort\": 0,\n            \"value_type\": \"cumulative\"\
      \n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n   \
      \         \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"bytes\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            },\n            {\n              \"format\": \"ms\",\n \
      \             \"logBase\": 1,\n              \"show\": true\n            }\n\
      \          ]\n        },\n        {\n          \"colorBackground\": false,\n\
      \          \"colorValue\": false,\n          \"colors\": [\n            \"rgba(50,\
      \ 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\",\n           \
      \ \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"percentunit\",\n\
      \          \"gauge\": {\n            \"maxValue\": 1,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"hideTimeOverride\"\
      : false,\n          \"id\": 12,\n          \"links\": [],\n          \"mappingType\"\
      : 1,\n          \"mappingTypes\": [\n            {\n              \"name\":\
      \ \"value to text\",\n              \"value\": 1\n            },\n         \
      \   {\n              \"name\": \"range to text\",\n              \"value\":\
      \ 2\n            }\n          ],\n          \"maxDataPoints\": 100,\n      \
      \    \"nullPointMode\": \"connected\",\n          \"postfix\": \"\",\n     \
      \     \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n         \
      \ \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n            {\n\
      \              \"from\": \"null\",\n              \"text\": \"N/A\",\n     \
      \         \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"(sum(node_filesystem_size{device!=\\\
      \"rootfs\\\"}) - sum(node_filesystem_free{device!=\\\"rootfs\\\"})) / sum(node_filesystem_size{device!=\\\
      \"rootfs\\\"})\",\n              \"intervalFactor\": 2,\n              \"refId\"\
      : \"A\",\n              \"step\": 60,\n              \"target\": \"\"\n    \
      \        }\n          ],\n          \"thresholds\": \"0.75, 0.9\",\n       \
      \   \"title\": \"Disk Space Usage\",\n          \"transparent\": false,\n  \
      \        \"type\": \"singlestat\",\n          \"valueFontSize\": \"80%\",\n\
      \          \"valueMaps\": [\n            {\n              \"op\": \"=\",\n \
      \             \"text\": \"N/A\",\n              \"value\": \"null\"\n      \
      \      }\n          ],\n          \"valueName\": \"current\"\n        }\n  \
      \    ],\n      \"showTitle\": false,\n      \"title\": \"New Row\",\n      \"\
      titleSize\": \"h6\"\n    },\n    {\n      \"collapse\": false,\n      \"editable\"\
      : false,\n      \"height\": \"250px\",\n      \"panels\": [\n        {\n   \
      \       \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\"\
      : 10,\n          \"dashes\": false,\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"error\": false,\n          \"\
      fill\": 1,\n          \"grid\": {\n            \"threshold1Color\": \"rgba(216,\
      \ 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112,\
      \ 0.22)\"\n          },\n          \"id\": 8,\n          \"isNew\": false,\n\
      \          \"legend\": {\n            \"alignAsTable\": false,\n           \
      \ \"avg\": false,\n            \"current\": false,\n            \"hideEmpty\"\
      : false,\n            \"hideZero\": false,\n            \"max\": false,\n  \
      \          \"min\": false,\n            \"rightSide\": false,\n            \"\
      show\": true,\n            \"total\": false\n          },\n          \"lines\"\
      : true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"\
      nullPointMode\": \"connected\",\n          \"percentage\": false,\n        \
      \  \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\"\
      : \"flot\",\n          \"seriesOverrides\": [\n            {\n             \
      \ \"alias\": \"transmitted\",\n              \"yaxis\": 2\n            }\n \
      \         ],\n          \"spaceLength\": 10,\n          \"span\": 6,\n     \
      \     \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\"\
      : [\n            {\n              \"expr\": \"sum(rate(node_network_receive_bytes{device!~\\\
      \"lo\\\"}[5m]))\",\n              \"hide\": false,\n              \"intervalFactor\"\
      : 2,\n              \"legendFormat\": \"\",\n              \"refId\": \"A\"\
      ,\n              \"step\": 10,\n              \"target\": \"\"\n           \
      \ }\n          ],\n          \"title\": \"Network Received\",\n          \"\
      tooltip\": {\n            \"msResolution\": false,\n            \"shared\":\
      \ true,\n            \"sort\": 0,\n            \"value_type\": \"cumulative\"\
      \n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n   \
      \         \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"bytes\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            },\n            {\n              \"format\": \"bytes\",\n\
      \              \"logBase\": 1,\n              \"show\": true\n            }\n\
      \          ]\n        },\n        {\n          \"aliasColors\": {},\n      \
      \    \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\":\
      \ false,\n          \"datasource\": \"prometheus\",\n          \"editable\"\
      : false,\n          \"error\": false,\n          \"fill\": 1,\n          \"\
      grid\": {\n            \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n\
      \            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n\
      \          \"id\": 10,\n          \"isNew\": false,\n          \"legend\": {\n\
      \            \"alignAsTable\": false,\n            \"avg\": false,\n       \
      \     \"current\": false,\n            \"hideEmpty\": false,\n            \"\
      hideZero\": false,\n            \"max\": false,\n            \"min\": false,\n\
      \            \"rightSide\": false,\n            \"show\": true,\n          \
      \  \"total\": false\n          },\n          \"lines\": true,\n          \"\
      linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\"\
      ,\n          \"percentage\": false,\n          \"pointradius\": 5,\n       \
      \   \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\"\
      : [\n            {\n              \"alias\": \"transmitted\",\n            \
      \  \"yaxis\": 2\n            }\n          ],\n          \"spaceLength\": 10,\n\
      \          \"span\": 6,\n          \"stack\": false,\n          \"steppedLine\"\
      : false,\n          \"targets\": [\n            {\n              \"expr\": \"\
      sum(rate(node_network_transmit_bytes{device!~\\\"lo\\\"}[5m]))\",\n        \
      \      \"hide\": false,\n              \"intervalFactor\": 2,\n            \
      \  \"legendFormat\": \"\",\n              \"refId\": \"B\",\n              \"\
      step\": 10,\n              \"target\": \"\"\n            }\n          ],\n \
      \         \"title\": \"Network Transmitted\",\n          \"tooltip\": {\n  \
      \          \"msResolution\": false,\n            \"shared\": true,\n       \
      \     \"sort\": 0,\n            \"value_type\": \"cumulative\"\n          },\n\
      \          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\"\
      : \"time\",\n            \"show\": true,\n            \"values\": []\n     \
      \     },\n          \"yaxes\": [\n            {\n              \"format\": \"\
      bytes\",\n              \"logBase\": 1,\n              \"show\": true\n    \
      \        },\n            {\n              \"format\": \"bytes\",\n         \
      \     \"logBase\": 1,\n              \"show\": true\n            }\n       \
      \   ]\n        }\n      ],\n      \"showTitle\": false,\n      \"title\": \"\
      New Row\",\n      \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\":\
      \ false,\n      \"editable\": false,\n      \"height\": \"276px\",\n      \"\
      panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\":\
      \ false,\n          \"dashes\": false,\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"error\": false,\n          \"\
      fill\": 1,\n          \"grid\": {\n            \"threshold1Color\": \"rgba(216,\
      \ 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112,\
      \ 0.22)\"\n          },\n          \"id\": 11,\n          \"isNew\": true,\n\
      \          \"legend\": {\n            \"alignAsTable\": false,\n           \
      \ \"avg\": false,\n            \"current\": false,\n            \"hideEmpty\"\
      : false,\n            \"hideZero\": false,\n            \"max\": false,\n  \
      \          \"min\": false,\n            \"rightSide\": false,\n            \"\
      show\": true,\n            \"total\": false\n          },\n          \"lines\"\
      : true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"\
      nullPointMode\": \"connected\",\n          \"percentage\": false,\n        \
      \  \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\"\
      : \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\":\
      \ 11,\n          \"span\": 9,\n          \"stack\": false,\n          \"steppedLine\"\
      : false,\n          \"targets\": [\n            {\n              \"expr\": \"\
      sum(kube_pod_info)\",\n              \"format\": \"time_series\",\n        \
      \      \"intervalFactor\": 2,\n              \"legendFormat\": \"Current number\
      \ of Pods\",\n              \"refId\": \"A\",\n              \"step\": 10\n\
      \            },\n            {\n              \"expr\": \"sum(kube_node_status_capacity_pods)\"\
      ,\n              \"format\": \"time_series\",\n              \"intervalFactor\"\
      : 2,\n              \"legendFormat\": \"Maximum capacity of pods\",\n      \
      \        \"refId\": \"B\",\n              \"step\": 10\n            }\n    \
      \      ],\n          \"title\": \"Cluster Pod Utilization\",\n          \"tooltip\"\
      : {\n            \"msResolution\": false,\n            \"shared\": true,\n \
      \           \"sort\": 0,\n            \"value_type\": \"individual\"\n     \
      \     },\n          \"type\": \"graph\",\n          \"xaxis\": {\n         \
      \   \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"short\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            },\n            {\n              \"format\": \"short\",\n\
      \              \"logBase\": 1,\n              \"show\": true\n            }\n\
      \          ]\n        },\n        {\n          \"colorBackground\": false,\n\
      \          \"colorValue\": false,\n          \"colors\": [\n            \"rgba(50,\
      \ 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\",\n           \
      \ \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"percent\",\n    \
      \      \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"hideTimeOverride\"\
      : false,\n          \"id\": 7,\n          \"links\": [],\n          \"mappingType\"\
      : 1,\n          \"mappingTypes\": [\n            {\n              \"name\":\
      \ \"value to text\",\n              \"value\": 1\n            },\n         \
      \   {\n              \"name\": \"range to text\",\n              \"value\":\
      \ 2\n            }\n          ],\n          \"maxDataPoints\": 100,\n      \
      \    \"nullPointMode\": \"connected\",\n          \"postfix\": \"\",\n     \
      \     \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n         \
      \ \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n            {\n\
      \              \"from\": \"null\",\n              \"text\": \"N/A\",\n     \
      \         \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"100 - (sum(kube_node_status_capacity_pods)\
      \ - sum(kube_pod_info)) / sum(kube_node_status_capacity_pods) * 100\",\n   \
      \           \"format\": \"time_series\",\n              \"intervalFactor\":\
      \ 2,\n              \"legendFormat\": \"\",\n              \"refId\": \"A\"\
      ,\n              \"step\": 60,\n              \"target\": \"\"\n           \
      \ }\n          ],\n          \"thresholds\": \"80, 90\",\n          \"title\"\
      : \"Pod Utilization\",\n          \"transparent\": false,\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"current\"\n        }\n      ],\n      \"showTitle\"\
      : false,\n      \"title\": \"New Row\",\n      \"titleSize\": \"h6\"\n    }\n\
      \  ],\n  \"schemaVersion\": 14,\n  \"sharedCrosshair\": false,\n  \"style\"\
      : \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n\
      \  \"time\": {\n    \"from\": \"now-1h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\"\
      : {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\"\
      ,\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\"\
      ,\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\"\
      ,\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\"\
      ,\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\"\
      : \"browser\",\n  \"title\": \"Kubernetes Capacity Planning\",\n  \"version\"\
      : 4\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-capacity-planning
    namespace: knative-monitoring
- apiVersion: v1
  data:
    kubernetes-cluster-health-dashboard.json: "{\n  \"__inputs\": [\n    {\n     \
      \ \"description\": \"\",\n      \"label\": \"prometheus\",\n      \"name\":\
      \ \"prometheus\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\"\
      : \"Prometheus\",\n      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\"\
      : {\n    \"list\": []\n  },\n  \"editable\": false,\n  \"gnetId\": null,\n \
      \ \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"refresh\": \"\
      10s\",\n  \"rows\": [\n    {\n      \"collapse\": false,\n      \"editable\"\
      : false,\n      \"height\": \"254px\",\n      \"panels\": [\n        {\n   \
      \       \"colorBackground\": false,\n          \"colorValue\": true,\n     \
      \     \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n            \"\
      rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54, 0.9)\"\n      \
      \    ],\n          \"datasource\": \"prometheus\",\n          \"editable\":\
      \ false,\n          \"format\": \"none\",\n          \"gauge\": {\n        \
      \    \"maxValue\": 100,\n            \"minValue\": 0,\n            \"show\"\
      : false,\n            \"thresholdLabels\": false,\n            \"thresholdMarkers\"\
      : true\n          },\n          \"hideTimeOverride\": false,\n          \"id\"\
      : 1,\n          \"links\": [],\n          \"mappingType\": 1,\n          \"\
      mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfix\": \"\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 3,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": false\n          },\n          \"targets\": [\n            {\n     \
      \         \"expr\": \"sum(up{job=~\\\"apiserver|kube-scheduler|kube-controller-manager\\\
      \"} == 0)\",\n              \"format\": \"time_series\",\n              \"intervalFactor\"\
      : 2,\n              \"legendFormat\": \"\",\n              \"refId\": \"A\"\
      ,\n              \"step\": 600\n            }\n          ],\n          \"thresholds\"\
      : \"1, 3\",\n          \"title\": \"Control Plane Components Down\",\n     \
      \     \"transparent\": false,\n          \"type\": \"singlestat\",\n       \
      \   \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n            {\n\
      \              \"op\": \"=\",\n              \"text\": \"Everything UP and healthy\"\
      ,\n              \"value\": \"null\"\n            },\n            {\n      \
      \        \"op\": \"=\",\n              \"text\": \"\",\n              \"value\"\
      : \"\"\n            }\n          ],\n          \"valueName\": \"avg\"\n    \
      \    },\n        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : true,\n          \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54,\
      \ 0.9)\"\n          ],\n          \"datasource\": \"prometheus\",\n        \
      \  \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": true\n          },\n          \"hideTimeOverride\":\
      \ false,\n          \"id\": 2,\n          \"links\": [],\n          \"mappingType\"\
      : 1,\n          \"mappingTypes\": [\n            {\n              \"name\":\
      \ \"value to text\",\n              \"value\": 1\n            },\n         \
      \   {\n              \"name\": \"range to text\",\n              \"value\":\
      \ 2\n            }\n          ],\n          \"maxDataPoints\": 100,\n      \
      \    \"nullPointMode\": \"connected\",\n          \"postfix\": \"\",\n     \
      \     \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n         \
      \ \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n            {\n\
      \              \"from\": \"null\",\n              \"text\": \"N/A\",\n     \
      \         \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"sum(ALERTS{alertstate=\\\
      \"firing\\\",alertname!=\\\"DeadMansSwitch\\\"})\",\n              \"format\"\
      : \"time_series\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"\",\n              \"refId\": \"A\",\n              \"step\": 600\n    \
      \        }\n          ],\n          \"thresholds\": \"1, 3\",\n          \"\
      title\": \"Alerts Firing\",\n          \"transparent\": false,\n          \"\
      type\": \"singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"\
      valueMaps\": [\n            {\n              \"op\": \"=\",\n              \"\
      text\": \"0\",\n              \"value\": \"null\"\n            }\n         \
      \ ],\n          \"valueName\": \"current\"\n        },\n        {\n        \
      \  \"colorBackground\": false,\n          \"colorValue\": true,\n          \"\
      colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n            \"rgba(237,\
      \ 129, 40, 0.89)\",\n            \"rgba(245, 54, 54, 0.9)\"\n          ],\n\
      \          \"datasource\": \"prometheus\",\n          \"editable\": false,\n\
      \          \"format\": \"none\",\n          \"gauge\": {\n            \"maxValue\"\
      : 100,\n            \"minValue\": 0,\n            \"show\": false,\n       \
      \     \"thresholdLabels\": false,\n            \"thresholdMarkers\": true\n\
      \          },\n          \"hideTimeOverride\": false,\n          \"id\": 3,\n\
      \          \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfix\": \"\",\n          \"postfixFontSize\": \"50%\",\n \
      \         \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\",\n      \
      \    \"rangeMaps\": [\n            {\n              \"from\": \"null\",\n  \
      \            \"text\": \"N/A\",\n              \"to\": \"null\"\n          \
      \  }\n          ],\n          \"span\": 3,\n          \"sparkline\": {\n   \
      \         \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": false\n          },\n          \"targets\": [\n            {\n     \
      \         \"expr\": \"sum(ALERTS{alertstate=\\\"pending\\\",alertname!=\\\"\
      DeadMansSwitch\\\"})\",\n              \"format\": \"time_series\",\n      \
      \        \"intervalFactor\": 2,\n              \"legendFormat\": \"\",\n   \
      \           \"refId\": \"A\",\n              \"step\": 600\n            }\n\
      \          ],\n          \"thresholds\": \"3, 5\",\n          \"title\": \"\
      Alerts Pending\",\n          \"transparent\": false,\n          \"type\": \"\
      singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      0\",\n              \"value\": \"null\"\n            }\n          ],\n     \
      \     \"valueName\": \"current\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": true,\n          \"colors\": [\n       \
      \     \"rgba(50, 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      none\",\n          \"gauge\": {\n            \"maxValue\": 100,\n          \
      \  \"minValue\": 0,\n            \"show\": false,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": true\n          },\n          \"\
      hideTimeOverride\": false,\n          \"id\": 4,\n          \"links\": [],\n\
      \          \"mappingType\": 1,\n          \"mappingTypes\": [\n            {\n\
      \              \"name\": \"value to text\",\n              \"value\": 1\n  \
      \          },\n            {\n              \"name\": \"range to text\",\n \
      \             \"value\": 2\n            }\n          ],\n          \"maxDataPoints\"\
      : 100,\n          \"nullPointMode\": \"connected\",\n          \"postfix\":\
      \ \"\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\"\
      ,\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n    \
      \        {\n              \"from\": \"null\",\n              \"text\": \"N/A\"\
      ,\n              \"to\": \"null\"\n            }\n          ],\n          \"\
      span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31,\
      \ 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"count(increase(kube_pod_container_status_restarts[1h])\
      \ > 5)\",\n              \"format\": \"time_series\",\n              \"intervalFactor\"\
      : 2,\n              \"legendFormat\": \"\",\n              \"refId\": \"A\"\
      ,\n              \"step\": 600\n            }\n          ],\n          \"thresholds\"\
      : \"1, 3\",\n          \"title\": \"Crashlooping Pods\",\n          \"transparent\"\
      : false,\n          \"type\": \"singlestat\",\n          \"valueFontSize\":\
      \ \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"0\",\n              \"value\": \"null\"\n\
      \            }\n          ],\n          \"valueName\": \"current\"\n       \
      \ }\n      ],\n      \"showTitle\": false,\n      \"title\": \"Row\",\n    \
      \  \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\": false,\n      \"\
      editable\": false,\n      \"height\": \"250px\",\n      \"panels\": [\n    \
      \    {\n          \"colorBackground\": false,\n          \"colorValue\": true,\n\
      \          \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n       \
      \     \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54, 0.9)\"\n\
      \          ],\n          \"datasource\": \"prometheus\",\n          \"editable\"\
      : false,\n          \"format\": \"none\",\n          \"gauge\": {\n        \
      \    \"maxValue\": 100,\n            \"minValue\": 0,\n            \"show\"\
      : false,\n            \"thresholdLabels\": false,\n            \"thresholdMarkers\"\
      : true\n          },\n          \"hideTimeOverride\": false,\n          \"id\"\
      : 5,\n          \"links\": [],\n          \"mappingType\": 1,\n          \"\
      mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfix\": \"\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 3,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": false\n          },\n          \"targets\": [\n            {\n     \
      \         \"expr\": \"sum(kube_node_status_condition{condition=\\\"Ready\\\"\
      ,status!=\\\"true\\\"})\",\n              \"format\": \"time_series\",\n   \
      \           \"intervalFactor\": 2,\n              \"legendFormat\": \"\",\n\
      \              \"refId\": \"A\",\n              \"step\": 600\n            }\n\
      \          ],\n          \"thresholds\": \"1, 3\",\n          \"title\": \"\
      Node Not Ready\",\n          \"transparent\": false,\n          \"type\": \"\
      singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"current\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": true,\n          \"colors\": [\n       \
      \     \"rgba(50, 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      none\",\n          \"gauge\": {\n            \"maxValue\": 100,\n          \
      \  \"minValue\": 0,\n            \"show\": false,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": true\n          },\n          \"\
      hideTimeOverride\": false,\n          \"id\": 6,\n          \"links\": [],\n\
      \          \"mappingType\": 1,\n          \"mappingTypes\": [\n            {\n\
      \              \"name\": \"value to text\",\n              \"value\": 1\n  \
      \          },\n            {\n              \"name\": \"range to text\",\n \
      \             \"value\": 2\n            }\n          ],\n          \"maxDataPoints\"\
      : 100,\n          \"nullPointMode\": \"connected\",\n          \"postfix\":\
      \ \"\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\"\
      ,\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n    \
      \        {\n              \"from\": \"null\",\n              \"text\": \"N/A\"\
      ,\n              \"to\": \"null\"\n            }\n          ],\n          \"\
      span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31,\
      \ 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"sum(kube_node_status_condition{condition=\\\
      \"DiskPressure\\\",status=\\\"true\\\"})\",\n              \"format\": \"time_series\"\
      ,\n              \"intervalFactor\": 2,\n              \"legendFormat\": \"\"\
      ,\n              \"refId\": \"A\",\n              \"step\": 600\n          \
      \  }\n          ],\n          \"thresholds\": \"1, 3\",\n          \"title\"\
      : \"Node Disk Pressure\",\n          \"transparent\": false,\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"current\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": true,\n          \"colors\": [\n       \
      \     \"rgba(50, 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      none\",\n          \"gauge\": {\n            \"maxValue\": 100,\n          \
      \  \"minValue\": 0,\n            \"show\": false,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": true\n          },\n          \"\
      hideTimeOverride\": false,\n          \"id\": 7,\n          \"links\": [],\n\
      \          \"mappingType\": 1,\n          \"mappingTypes\": [\n            {\n\
      \              \"name\": \"value to text\",\n              \"value\": 1\n  \
      \          },\n            {\n              \"name\": \"range to text\",\n \
      \             \"value\": 2\n            }\n          ],\n          \"maxDataPoints\"\
      : 100,\n          \"nullPointMode\": \"connected\",\n          \"postfix\":\
      \ \"\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\"\
      ,\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n    \
      \        {\n              \"from\": \"null\",\n              \"text\": \"N/A\"\
      ,\n              \"to\": \"null\"\n            }\n          ],\n          \"\
      span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31,\
      \ 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"sum(kube_node_status_condition{condition=\\\
      \"MemoryPressure\\\",status=\\\"true\\\"})\",\n              \"format\": \"\
      time_series\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"\",\n              \"refId\": \"A\",\n              \"step\": 600\n    \
      \        }\n          ],\n          \"thresholds\": \"1, 3\",\n          \"\
      title\": \"Node Memory Pressure\",\n          \"transparent\": false,\n    \
      \      \"type\": \"singlestat\",\n          \"valueFontSize\": \"80%\",\n  \
      \        \"valueMaps\": [\n            {\n              \"op\": \"=\",\n   \
      \           \"text\": \"N/A\",\n              \"value\": \"null\"\n        \
      \    }\n          ],\n          \"valueName\": \"current\"\n        },\n   \
      \     {\n          \"colorBackground\": false,\n          \"colorValue\": true,\n\
      \          \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n       \
      \     \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54, 0.9)\"\n\
      \          ],\n          \"datasource\": \"prometheus\",\n          \"editable\"\
      : false,\n          \"format\": \"none\",\n          \"gauge\": {\n        \
      \    \"maxValue\": 100,\n            \"minValue\": 0,\n            \"show\"\
      : false,\n            \"thresholdLabels\": false,\n            \"thresholdMarkers\"\
      : true\n          },\n          \"hideTimeOverride\": false,\n          \"id\"\
      : 8,\n          \"links\": [],\n          \"mappingType\": 1,\n          \"\
      mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfix\": \"\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 3,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": false\n          },\n          \"targets\": [\n            {\n     \
      \         \"expr\": \"sum(kube_node_spec_unschedulable)\",\n              \"\
      format\": \"time_series\",\n              \"intervalFactor\": 2,\n         \
      \     \"legendFormat\": \"\",\n              \"refId\": \"A\",\n           \
      \   \"step\": 600\n            }\n          ],\n          \"thresholds\": \"\
      1, 3\",\n          \"title\": \"Nodes Unschedulable\",\n          \"transparent\"\
      : false,\n          \"type\": \"singlestat\",\n          \"valueFontSize\":\
      \ \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"current\"\n      \
      \  }\n      ],\n      \"showTitle\": false,\n      \"title\": \"Row\",\n   \
      \   \"titleSize\": \"h6\"\n    }\n  ],\n  \"schemaVersion\": 14,\n  \"sharedCrosshair\"\
      : false,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n   \
      \ \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-6h\",\n    \"to\":\
      \ \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"\
      5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"\
      15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n\
      \    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n   \
      \   \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n\
      \      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"Kubernetes\
      \ Cluster Health\",\n  \"version\": 9\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-cluster-health
    namespace: knative-monitoring
- apiVersion: v1
  data:
    kubernetes-cluster-status-dashboard.json: "{\n  \"__inputs\": [\n    {\n     \
      \ \"description\": \"\",\n      \"label\": \"prometheus\",\n      \"name\":\
      \ \"prometheus\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\"\
      : \"Prometheus\",\n      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\"\
      : {\n    \"list\": []\n  },\n  \"editable\": false,\n  \"graphTooltip\": 0,\n\
      \  \"hideControls\": false,\n  \"links\": [],\n  \"rows\": [\n    {\n      \"\
      collapse\": false,\n      \"editable\": false,\n      \"height\": \"129px\"\
      ,\n      \"panels\": [\n        {\n          \"colorBackground\": false,\n \
      \         \"colorValue\": true,\n          \"colors\": [\n            \"rgba(50,\
      \ 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\",\n           \
      \ \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"none\",\n       \
      \   \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\":\
      \ 0,\n            \"show\": false,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"id\": 5,\n\
      \          \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 6,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"sum(up{job=~\\\"apiserver|kube-scheduler|kube-controller-manager\\\
      \"} == 0)\",\n              \"format\": \"time_series\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 600\n       \
      \     }\n          ],\n          \"thresholds\": \"1, 3\",\n          \"title\"\
      : \"Control Plane UP\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"UP\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"total\"\n        },\n\
      \        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : true,\n          \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54,\
      \ 0.9)\"\n          ],\n          \"datasource\": \"prometheus\",\n        \
      \  \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": true\n          },\n          \"id\": 6,\n         \
      \ \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 6,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"sum(ALERTS{alertstate=\\\
      \"firing\\\",alertname!=\\\"DeadMansSwitch\\\"})\",\n              \"format\"\
      : \"time_series\",\n              \"intervalFactor\": 2,\n              \"refId\"\
      : \"A\",\n              \"step\": 600\n            }\n          ],\n       \
      \   \"thresholds\": \"3, 5\",\n          \"title\": \"Alerts Firing\",\n   \
      \       \"type\": \"singlestat\",\n          \"valueFontSize\": \"80%\",\n \
      \         \"valueMaps\": [\n            {\n              \"op\": \"=\",\n  \
      \            \"text\": \"0\",\n              \"value\": \"null\"\n         \
      \   }\n          ],\n          \"valueName\": \"current\"\n        }\n     \
      \ ],\n      \"showTitle\": true,\n      \"title\": \"Cluster Health\",\n   \
      \   \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\": false,\n     \
      \ \"editable\": false,\n      \"height\": \"168px\",\n      \"panels\": [\n\
      \        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : false,\n          \"colors\": [\n            \"rgba(245, 54, 54, 0.9)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(50, 172, 45,\
      \ 0.97)\"\n          ],\n          \"datasource\": \"prometheus\",\n       \
      \   \"editable\": false,\n          \"format\": \"percent\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": true,\n            \"thresholdLabels\": false,\n            \"\
      thresholdMarkers\": true\n          },\n          \"id\": 1,\n          \"links\"\
      : [],\n          \"mappingType\": 1,\n          \"mappingTypes\": [\n      \
      \      {\n              \"name\": \"value to text\",\n              \"value\"\
      : 1\n            },\n            {\n              \"name\": \"range to text\"\
      ,\n              \"value\": 2\n            }\n          ],\n          \"maxDataPoints\"\
      : 100,\n          \"nullPointMode\": \"connected\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 3,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": false\n          },\n          \"targets\": [\n            {\n     \
      \         \"expr\": \"(sum(up{job=\\\"apiserver\\\"} == 1) / count(up{job=\\\
      \"apiserver\\\"})) * 100\",\n              \"format\": \"time_series\",\n  \
      \            \"intervalFactor\": 2,\n              \"refId\": \"A\",\n     \
      \         \"step\": 600\n            }\n          ],\n          \"thresholds\"\
      : \"50, 80\",\n          \"title\": \"API Servers UP\",\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"current\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": false,\n          \"colors\": [\n      \
      \      \"rgba(245, 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      percent\",\n          \"gauge\": {\n            \"maxValue\": 100,\n       \
      \     \"minValue\": 0,\n            \"show\": true,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": true\n          },\n          \"\
      id\": 2,\n          \"links\": [],\n          \"mappingType\": 1,\n        \
      \  \"mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\"\
      : \"\",\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n\
      \            {\n              \"from\": \"null\",\n              \"text\": \"\
      N/A\",\n              \"to\": \"null\"\n            }\n          ],\n      \
      \    \"span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"\
      rgba(31, 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"(sum(up{job=\\\
      \"kube-controller-manager\\\"} == 1) / count(up{job=\\\"kube-controller-manager\\\
      \"})) * 100\",\n              \"format\": \"time_series\",\n              \"\
      intervalFactor\": 2,\n              \"refId\": \"A\",\n              \"step\"\
      : 600\n            }\n          ],\n          \"thresholds\": \"50, 80\",\n\
      \          \"title\": \"Controller Managers UP\",\n          \"type\": \"singlestat\"\
      ,\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n     \
      \       {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n\
      \              \"value\": \"null\"\n            }\n          ],\n          \"\
      valueName\": \"current\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": false,\n          \"colors\": [\n      \
      \      \"rgba(245, 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      percent\",\n          \"gauge\": {\n            \"maxValue\": 100,\n       \
      \     \"minValue\": 0,\n            \"show\": true,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": true\n          },\n          \"\
      id\": 3,\n          \"links\": [],\n          \"mappingType\": 1,\n        \
      \  \"mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\"\
      : \"\",\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n\
      \            {\n              \"from\": \"null\",\n              \"text\": \"\
      N/A\",\n              \"to\": \"null\"\n            }\n          ],\n      \
      \    \"span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"\
      rgba(31, 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"(sum(up{job=\\\
      \"kube-scheduler\\\"} == 1) / count(up{job=\\\"kube-scheduler\\\"})) * 100\"\
      ,\n              \"format\": \"time_series\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 600\n       \
      \     }\n          ],\n          \"thresholds\": \"50, 80\",\n          \"title\"\
      : \"Schedulers UP\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"current\"\n      \
      \  },\n        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : true,\n          \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54,\
      \ 0.9)\"\n          ],\n          \"datasource\": \"prometheus\",\n        \
      \  \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": true\n          },\n          \"id\": 4,\n         \
      \ \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"count(increase(kube_pod_container_status_restarts{namespace=~\\\
      \"kube-system|tectonic-system\\\"}[1h]) > 5)\",\n              \"format\": \"\
      time_series\",\n              \"intervalFactor\": 2,\n              \"refId\"\
      : \"A\",\n              \"step\": 600\n            }\n          ],\n       \
      \   \"thresholds\": \"1, 3\",\n          \"title\": \"Crashlooping Control Plane\
      \ Pods\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"0\",\n              \"value\": \"null\"\n\
      \            }\n          ],\n          \"valueName\": \"current\"\n       \
      \ }\n      ],\n      \"showTitle\": true,\n      \"title\": \"Control Plane\
      \ Status\",\n      \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\"\
      : false,\n      \"editable\": false,\n      \"height\": \"158px\",\n      \"\
      panels\": [\n        {\n          \"colorBackground\": false,\n          \"\
      colorValue\": false,\n          \"colors\": [\n            \"rgba(50, 172, 45,\
      \ 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245,\
      \ 54, 54, 0.9)\"\n          ],\n          \"datasource\": \"prometheus\",\n\
      \          \"editable\": false,\n          \"format\": \"percent\",\n      \
      \    \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"id\": 8,\n\
      \          \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"sum(100 - (avg by (instance)\
      \ (rate(node_cpu{job=\\\"node-exporter\\\",mode=\\\"idle\\\"}[5m])) * 100))\
      \ / count(node_cpu{job=\\\"node-exporter\\\",mode=\\\"idle\\\"})\",\n      \
      \        \"format\": \"time_series\",\n              \"intervalFactor\": 2,\n\
      \              \"refId\": \"A\",\n              \"step\": 600\n            }\n\
      \          ],\n          \"thresholds\": \"80, 90\",\n          \"title\": \"\
      CPU Utilization\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"avg\"\n        },\n\
      \        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : false,\n          \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54,\
      \ 0.9)\"\n          ],\n          \"datasource\": \"prometheus\",\n        \
      \  \"editable\": false,\n          \"format\": \"percent\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": true,\n            \"thresholdLabels\": false,\n            \"\
      thresholdMarkers\": true\n          },\n          \"id\": 7,\n          \"links\"\
      : [],\n          \"mappingType\": 1,\n          \"mappingTypes\": [\n      \
      \      {\n              \"name\": \"value to text\",\n              \"value\"\
      : 1\n            },\n            {\n              \"name\": \"range to text\"\
      ,\n              \"value\": 2\n            }\n          ],\n          \"maxDataPoints\"\
      : 100,\n          \"nullPointMode\": \"connected\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 3,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": false\n          },\n          \"targets\": [\n            {\n     \
      \         \"expr\": \"((sum(node_memory_MemTotal) - sum(node_memory_MemFree)\
      \ - sum(node_memory_Buffers) - sum(node_memory_Cached)) / sum(node_memory_MemTotal))\
      \ * 100\",\n              \"format\": \"time_series\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 600\n       \
      \     }\n          ],\n          \"thresholds\": \"80, 90\",\n          \"title\"\
      : \"Memory Utilization\",\n          \"type\": \"singlestat\",\n          \"\
      valueFontSize\": \"80%\",\n          \"valueMaps\": [\n            {\n     \
      \         \"op\": \"=\",\n              \"text\": \"N/A\",\n              \"\
      value\": \"null\"\n            }\n          ],\n          \"valueName\": \"\
      avg\"\n        },\n        {\n          \"colorBackground\": false,\n      \
      \    \"colorValue\": false,\n          \"colors\": [\n            \"rgba(50,\
      \ 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\",\n           \
      \ \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"percent\",\n    \
      \      \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"id\": 9,\n\
      \          \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"(sum(node_filesystem_size{device!=\\\
      \"rootfs\\\"}) - sum(node_filesystem_free{device!=\\\"rootfs\\\"})) / sum(node_filesystem_size{device!=\\\
      \"rootfs\\\"})\",\n              \"format\": \"time_series\",\n            \
      \  \"intervalFactor\": 2,\n              \"refId\": \"A\",\n              \"\
      step\": 600\n            }\n          ],\n          \"thresholds\": \"80, 90\"\
      ,\n          \"title\": \"Filesystem Utilization\",\n          \"type\": \"\
      singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"avg\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": false,\n          \"colors\": [\n      \
      \      \"rgba(50, 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      percent\",\n          \"gauge\": {\n            \"maxValue\": 100,\n       \
      \     \"minValue\": 0,\n            \"show\": true,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": true\n          },\n          \"\
      id\": 10,\n          \"links\": [],\n          \"mappingType\": 1,\n       \
      \   \"mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\"\
      : \"\",\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n\
      \            {\n              \"from\": \"null\",\n              \"text\": \"\
      N/A\",\n              \"to\": \"null\"\n            }\n          ],\n      \
      \    \"span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"\
      rgba(31, 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"100 - (sum(kube_node_status_capacity_pods)\
      \ - sum(kube_pod_info)) / sum(kube_node_status_capacity_pods) * 100\",\n   \
      \           \"format\": \"time_series\",\n              \"intervalFactor\":\
      \ 2,\n              \"refId\": \"A\",\n              \"step\": 600\n       \
      \     }\n          ],\n          \"thresholds\": \"80, 90\",\n          \"title\"\
      : \"Pod Utilization\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"avg\"\n        }\n\
      \      ],\n      \"showTitle\": true,\n      \"title\": \"Capacity Planning\"\
      ,\n      \"titleSize\": \"h6\"\n    }\n  ],\n  \"schemaVersion\": 14,\n  \"\
      sharedCrosshair\": false,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\"\
      : {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"now-6h\",\n    \"\
      to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n   \
      \   \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n\
      \      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n\
      \    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\"\
      ,\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\"\
      ,\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"\
      Kubernetes Cluster Status\",\n  \"version\": 3\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-cluster-status
    namespace: knative-monitoring
- apiVersion: v1
  data:
    kubernetes-control-plane-status-dashboard.json: "{\n  \"__inputs\": [\n    {\n\
      \      \"description\": \"\",\n      \"label\": \"prometheus\",\n      \"name\"\
      : \"prometheus\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\"\
      : \"Prometheus\",\n      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\"\
      : {\n    \"list\": []\n  },\n  \"editable\": false,\n  \"graphTooltip\": 0,\n\
      \  \"hideControls\": false,\n  \"links\": [],\n  \"rows\": [\n    {\n      \"\
      collapse\": false,\n      \"editable\": false,\n      \"height\": \"250px\"\
      ,\n      \"panels\": [\n        {\n          \"colorBackground\": false,\n \
      \         \"colorValue\": false,\n          \"colors\": [\n            \"rgba(245,\
      \ 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"\
      rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"percent\",\n    \
      \      \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"hideTimeOverride\"\
      : false,\n          \"id\": 1,\n          \"links\": [],\n          \"mappingType\"\
      : 1,\n          \"mappingTypes\": [\n            {\n              \"name\":\
      \ \"value to text\",\n              \"value\": 1\n            },\n         \
      \   {\n              \"name\": \"range to text\",\n              \"value\":\
      \ 2\n            }\n          ],\n          \"maxDataPoints\": 100,\n      \
      \    \"nullPointMode\": \"connected\",\n          \"postfix\": \"\",\n     \
      \     \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n         \
      \ \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n            {\n\
      \              \"from\": \"null\",\n              \"text\": \"N/A\",\n     \
      \         \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"(sum(up{job=\\\"apiserver\\\
      \"} == 1) / sum(up{job=\\\"apiserver\\\"})) * 100\",\n              \"format\"\
      : \"time_series\",\n              \"intervalFactor\": 2,\n              \"refId\"\
      : \"A\",\n              \"step\": 600\n            }\n          ],\n       \
      \   \"thresholds\": \"50, 80\",\n          \"title\": \"API Servers UP\",\n\
      \          \"transparent\": false,\n          \"type\": \"singlestat\",\n  \
      \        \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n         \
      \   {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n    \
      \          \"value\": \"null\"\n            }\n          ],\n          \"valueName\"\
      : \"avg\"\n        },\n        {\n          \"colorBackground\": false,\n  \
      \        \"colorValue\": false,\n          \"colors\": [\n            \"rgba(245,\
      \ 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"\
      rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"percent\",\n    \
      \      \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"hideTimeOverride\"\
      : false,\n          \"id\": 2,\n          \"links\": [],\n          \"mappingType\"\
      : 1,\n          \"mappingTypes\": [\n            {\n              \"name\":\
      \ \"value to text\",\n              \"value\": 1\n            },\n         \
      \   {\n              \"name\": \"range to text\",\n              \"value\":\
      \ 2\n            }\n          ],\n          \"maxDataPoints\": 100,\n      \
      \    \"nullPointMode\": \"connected\",\n          \"postfix\": \"\",\n     \
      \     \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n         \
      \ \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n            {\n\
      \              \"from\": \"null\",\n              \"text\": \"N/A\",\n     \
      \         \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"(sum(up{job=\\\"kube-controller-manager\\\
      \"} == 1) / sum(up{job=\\\"kube-controller-manager\\\"})) * 100\",\n       \
      \       \"format\": \"time_series\",\n              \"intervalFactor\": 2,\n\
      \              \"refId\": \"A\",\n              \"step\": 600\n            }\n\
      \          ],\n          \"thresholds\": \"50, 80\",\n          \"title\": \"\
      Controller Managers UP\",\n          \"transparent\": false,\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"avg\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": false,\n          \"colors\": [\n      \
      \      \"rgba(245, 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      percent\",\n          \"gauge\": {\n            \"maxValue\": 100,\n       \
      \     \"minValue\": 0,\n            \"show\": true,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": true\n          },\n          \"\
      hideTimeOverride\": false,\n          \"id\": 3,\n          \"links\": [],\n\
      \          \"mappingType\": 1,\n          \"mappingTypes\": [\n            {\n\
      \              \"name\": \"value to text\",\n              \"value\": 1\n  \
      \          },\n            {\n              \"name\": \"range to text\",\n \
      \             \"value\": 2\n            }\n          ],\n          \"maxDataPoints\"\
      : 100,\n          \"nullPointMode\": \"connected\",\n          \"postfix\":\
      \ \"\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\"\
      ,\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n    \
      \        {\n              \"from\": \"null\",\n              \"text\": \"N/A\"\
      ,\n              \"to\": \"null\"\n            }\n          ],\n          \"\
      span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31,\
      \ 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"(sum(up{job=\\\
      \"kube-scheduler\\\"} == 1) / sum(up{job=\\\"kube-scheduler\\\"})) * 100\",\n\
      \              \"format\": \"time_series\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 600\n       \
      \     }\n          ],\n          \"thresholds\": \"50, 80\",\n          \"title\"\
      : \"Schedulers UP\",\n          \"transparent\": false,\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"avg\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": false,\n          \"colors\": [\n      \
      \      \"rgba(50, 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      percent\",\n          \"gauge\": {\n            \"maxValue\": 100,\n       \
      \     \"minValue\": 0,\n            \"show\": true,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": true\n          },\n          \"\
      hideTimeOverride\": false,\n          \"id\": 4,\n          \"links\": [],\n\
      \          \"mappingType\": 1,\n          \"mappingTypes\": [\n            {\n\
      \              \"name\": \"value to text\",\n              \"value\": 1\n  \
      \          },\n            {\n              \"name\": \"range to text\",\n \
      \             \"value\": 2\n            }\n          ],\n          \"maxDataPoints\"\
      : 100,\n          \"nullPointMode\": \"connected\",\n          \"postfix\":\
      \ \"\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\"\
      ,\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n    \
      \        {\n              \"from\": \"null\",\n              \"text\": \"N/A\"\
      ,\n              \"to\": \"null\"\n            }\n          ],\n          \"\
      span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31,\
      \ 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"max(sum by(instance)\
      \ (rate(apiserver_request_count{code=~\\\"5..\\\"}[5m])) / sum by(instance)\
      \ (rate(apiserver_request_count[5m]))) * 100\",\n              \"format\": \"\
      time_series\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"\",\n              \"refId\": \"A\",\n              \"step\": 600\n    \
      \        }\n          ],\n          \"thresholds\": \"5, 10\",\n          \"\
      title\": \"API Server Request Error Rate\",\n          \"transparent\": false,\n\
      \          \"type\": \"singlestat\",\n          \"valueFontSize\": \"80%\",\n\
      \          \"valueMaps\": [\n            {\n              \"op\": \"=\",\n \
      \             \"text\": \"0\",\n              \"value\": \"null\"\n        \
      \    }\n          ],\n          \"valueName\": \"avg\"\n        }\n      ],\n\
      \      \"showTitle\": false,\n      \"title\": \"Dashboard Row\",\n      \"\
      titleSize\": \"h6\"\n    },\n    {\n      \"collapse\": false,\n      \"editable\"\
      : false,\n      \"height\": \"250px\",\n      \"panels\": [\n        {\n   \
      \       \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\"\
      : 10,\n          \"dashes\": false,\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"error\": false,\n          \"\
      fill\": 1,\n          \"grid\": {\n            \"threshold1Color\": \"rgba(216,\
      \ 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112,\
      \ 0.22)\"\n          },\n          \"id\": 7,\n          \"isNew\": false,\n\
      \          \"legend\": {\n            \"alignAsTable\": false,\n           \
      \ \"avg\": false,\n            \"current\": false,\n            \"hideEmpty\"\
      : false,\n            \"hideZero\": false,\n            \"max\": false,\n  \
      \          \"min\": false,\n            \"rightSide\": false,\n            \"\
      show\": true,\n            \"total\": false\n          },\n          \"lines\"\
      : true,\n          \"linewidth\": 1,\n          \"links\": [],\n          \"\
      nullPointMode\": \"null\",\n          \"percentage\": false,\n          \"pointradius\"\
      : 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n    \
      \      \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"\
      span\": 12,\n          \"stack\": false,\n          \"steppedLine\": false,\n\
      \          \"targets\": [\n            {\n              \"expr\": \"sum by(verb)\
      \ (rate(apiserver_latency_seconds:quantile[5m]) >= 0)\",\n              \"format\"\
      : \"time_series\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"\",\n              \"refId\": \"A\",\n              \"step\": 30\n     \
      \       }\n          ],\n          \"title\": \"API Server Request Latency\"\
      ,\n          \"tooltip\": {\n            \"msResolution\": false,\n        \
      \    \"shared\": true,\n            \"sort\": 0,\n            \"value_type\"\
      : \"individual\"\n          },\n          \"type\": \"graph\",\n          \"\
      xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n \
      \           \"values\": []\n          },\n          \"yaxes\": [\n         \
      \   {\n              \"format\": \"short\",\n              \"logBase\": 1,\n\
      \              \"show\": true\n            },\n            {\n             \
      \ \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            }\n          ]\n        }\n      ],\n      \"showTitle\"\
      : false,\n      \"title\": \"Dashboard Row\",\n      \"titleSize\": \"h6\"\n\
      \    },\n    {\n      \"collapse\": false,\n      \"editable\": false,\n   \
      \   \"height\": \"250px\",\n      \"panels\": [\n        {\n          \"aliasColors\"\
      : {},\n          \"bars\": false,\n          \"dashLength\": 10,\n         \
      \ \"dashes\": false,\n          \"datasource\": \"prometheus\",\n          \"\
      editable\": false,\n          \"error\": false,\n          \"fill\": 1,\n  \
      \        \"grid\": {\n            \"threshold1Color\": \"rgba(216, 200, 27,\
      \ 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n\
      \          },\n          \"id\": 5,\n          \"isNew\": false,\n         \
      \ \"legend\": {\n            \"alignAsTable\": false,\n            \"avg\":\
      \ false,\n            \"current\": false,\n            \"hideEmpty\": false,\n\
      \            \"hideZero\": false,\n            \"max\": false,\n           \
      \ \"min\": false,\n            \"rightSide\": false,\n            \"show\":\
      \ true,\n            \"total\": false\n          },\n          \"lines\": true,\n\
      \          \"linewidth\": 1,\n          \"links\": [],\n          \"nullPointMode\"\
      : \"null\",\n          \"percentage\": false,\n          \"pointradius\": 5,\n\
      \          \"points\": false,\n          \"renderer\": \"flot\",\n         \
      \ \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"span\"\
      : 6,\n          \"stack\": false,\n          \"steppedLine\": false,\n     \
      \     \"targets\": [\n            {\n              \"expr\": \"cluster:scheduler_e2e_scheduling_latency_seconds:quantile\"\
      ,\n              \"format\": \"time_series\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 60\n        \
      \    }\n          ],\n          \"title\": \"End to End Scheduling Latency\"\
      ,\n          \"tooltip\": {\n            \"msResolution\": false,\n        \
      \    \"shared\": true,\n            \"sort\": 0,\n            \"value_type\"\
      : \"individual\"\n          },\n          \"type\": \"graph\",\n          \"\
      xaxis\": {\n            \"mode\": \"time\",\n            \"show\": true,\n \
      \           \"values\": []\n          },\n          \"yaxes\": [\n         \
      \   {\n              \"format\": \"short\",\n              \"logBase\": 1,\n\
      \              \"show\": true\n            },\n            {\n             \
      \ \"format\": \"dtdurations\",\n              \"logBase\": 1,\n            \
      \  \"show\": true\n            }\n          ]\n        },\n        {\n     \
      \     \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\"\
      : 10,\n          \"dashes\": false,\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"error\": false,\n          \"\
      fill\": 1,\n          \"grid\": {\n            \"threshold1Color\": \"rgba(216,\
      \ 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112,\
      \ 0.22)\"\n          },\n          \"id\": 6,\n          \"isNew\": false,\n\
      \          \"legend\": {\n            \"alignAsTable\": false,\n           \
      \ \"avg\": false,\n            \"current\": false,\n            \"hideEmpty\"\
      : false,\n            \"hideZero\": false,\n            \"max\": false,\n  \
      \          \"min\": false,\n            \"rightSide\": false,\n            \"\
      show\": true,\n            \"total\": false\n          },\n          \"lines\"\
      : true,\n          \"linewidth\": 1,\n          \"links\": [],\n          \"\
      nullPointMode\": \"null\",\n          \"percentage\": false,\n          \"pointradius\"\
      : 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n    \
      \      \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"\
      span\": 6,\n          \"stack\": false,\n          \"steppedLine\": false,\n\
      \          \"targets\": [\n            {\n              \"expr\": \"sum by(instance)\
      \ (rate(apiserver_request_count{code!~\\\"2..\\\"}[5m]))\",\n              \"\
      format\": \"time_series\",\n              \"intervalFactor\": 2,\n         \
      \     \"legendFormat\": \"Error Rate\",\n              \"refId\": \"A\",\n \
      \             \"step\": 60\n            },\n            {\n              \"\
      expr\": \"sum by(instance) (rate(apiserver_request_count[5m]))\",\n        \
      \      \"format\": \"time_series\",\n              \"intervalFactor\": 2,\n\
      \              \"legendFormat\": \"Request Rate\",\n              \"refId\"\
      : \"B\",\n              \"step\": 60\n            }\n          ],\n        \
      \  \"title\": \"API Server Request Rates\",\n          \"tooltip\": {\n    \
      \        \"msResolution\": false,\n            \"shared\": true,\n         \
      \   \"sort\": 0,\n            \"value_type\": \"individual\"\n          },\n\
      \          \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\"\
      : \"time\",\n            \"show\": true,\n            \"values\": []\n     \
      \     },\n          \"yaxes\": [\n            {\n              \"format\": \"\
      short\",\n              \"logBase\": 1,\n              \"show\": true\n    \
      \        },\n            {\n              \"format\": \"short\",\n         \
      \     \"logBase\": 1,\n              \"show\": true\n            }\n       \
      \   ]\n        }\n      ],\n      \"showTitle\": false,\n      \"title\": \"\
      Dashboard Row\",\n      \"titleSize\": \"h6\"\n    }\n  ],\n  \"schemaVersion\"\
      : 14,\n  \"sharedCrosshair\": false,\n  \"style\": \"dark\",\n  \"tags\": [],\n\
      \  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"\
      now-6h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\"\
      : [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"\
      5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"\
      1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n     \
      \ \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n  \
      \    \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"\
      title\": \"Kubernetes Control Plane Status\",\n  \"version\": 3\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-control-plane-status
    namespace: knative-monitoring
- apiVersion: v1
  data:
    kubernetes-resource-requests-dashboard.json: "{\n  \"__inputs\": [\n    {\n  \
      \    \"description\": \"\",\n      \"label\": \"prometheus\",\n      \"name\"\
      : \"prometheus\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\"\
      : \"Prometheus\",\n      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\"\
      : {\n    \"list\": []\n  },\n  \"editable\": false,\n  \"graphTooltip\": 0,\n\
      \  \"hideControls\": false,\n  \"links\": [],\n  \"refresh\": false,\n  \"rows\"\
      : [\n    {\n      \"collapse\": false,\n      \"editable\": false,\n      \"\
      height\": \"300px\",\n      \"panels\": [\n        {\n          \"aliasColors\"\
      : {},\n          \"bars\": false,\n          \"dashLength\": 10,\n         \
      \ \"dashes\": false,\n          \"datasource\": \"prometheus\",\n          \"\
      description\": \"This represents the total [CPU resource requests](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu)\
      \ in the cluster.\\nFor comparison the total [allocatable CPU cores](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node-allocatable.md)\
      \ is also shown.\",\n          \"editable\": false,\n          \"error\": false,\n\
      \          \"fill\": 1,\n          \"grid\": {\n            \"threshold1Color\"\
      : \"rgba(216, 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234,\
      \ 112, 112, 0.22)\"\n          },\n          \"id\": 1,\n          \"isNew\"\
      : false,\n          \"legend\": {\n            \"alignAsTable\": false,\n  \
      \          \"avg\": false,\n            \"current\": false,\n            \"\
      hideEmpty\": false,\n            \"hideZero\": false,\n            \"max\":\
      \ false,\n            \"min\": false,\n            \"rightSide\": false,\n \
      \           \"show\": true,\n            \"total\": false\n          },\n  \
      \        \"lines\": true,\n          \"linewidth\": 1,\n          \"links\"\
      : [],\n          \"nullPointMode\": \"null\",\n          \"percentage\": false,\n\
      \          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\"\
      : \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\":\
      \ 10,\n          \"span\": 9,\n          \"stack\": false,\n          \"steppedLine\"\
      : false,\n          \"targets\": [\n            {\n              \"expr\": \"\
      min(sum(kube_node_status_allocatable_cpu_cores) by (instance))\",\n        \
      \      \"hide\": false,\n              \"intervalFactor\": 2,\n            \
      \  \"legendFormat\": \"Allocatable CPU Cores\",\n              \"refId\": \"\
      A\",\n              \"step\": 20\n            },\n            {\n          \
      \    \"expr\": \"max(sum(kube_pod_container_resource_requests_cpu_cores) by\
      \ (instance))\",\n              \"hide\": false,\n              \"intervalFactor\"\
      : 2,\n              \"legendFormat\": \"Requested CPU Cores\",\n           \
      \   \"refId\": \"B\",\n              \"step\": 20\n            }\n         \
      \ ],\n          \"title\": \"CPU Cores\",\n          \"tooltip\": {\n      \
      \      \"msResolution\": false,\n            \"shared\": true,\n           \
      \ \"sort\": 0,\n            \"value_type\": \"individual\"\n          },\n \
      \         \"type\": \"graph\",\n          \"xaxis\": {\n            \"mode\"\
      : \"time\",\n            \"show\": true,\n            \"values\": []\n     \
      \     },\n          \"yaxes\": [\n            {\n              \"format\": \"\
      short\",\n              \"label\": \"CPU Cores\",\n              \"logBase\"\
      : 1,\n              \"show\": true\n            },\n            {\n        \
      \      \"format\": \"short\",\n              \"logBase\": 1,\n             \
      \ \"show\": true\n            }\n          ]\n        },\n        {\n      \
      \    \"colorBackground\": false,\n          \"colorValue\": false,\n       \
      \   \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n            \"\
      rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54, 0.9)\"\n      \
      \    ],\n          \"datasource\": \"prometheus\",\n          \"editable\":\
      \ false,\n          \"format\": \"percent\",\n          \"gauge\": {\n     \
      \       \"maxValue\": 100,\n            \"minValue\": 0,\n            \"show\"\
      : true,\n            \"thresholdLabels\": false,\n            \"thresholdMarkers\"\
      : true\n          },\n          \"hideTimeOverride\": false,\n          \"id\"\
      : 2,\n          \"links\": [],\n          \"mappingType\": 1,\n          \"\
      mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfix\": \"\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 3,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": true\n          },\n          \"targets\": [\n            {\n      \
      \        \"expr\": \"max(sum(kube_pod_container_resource_requests_cpu_cores)\
      \ by (instance)) / min(sum(kube_node_status_allocatable_cpu_cores) by (instance))\
      \ * 100\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"\",\n              \"refId\": \"A\",\n              \"step\": 240\n    \
      \        }\n          ],\n          \"thresholds\": \"80, 90\",\n          \"\
      title\": \"CPU Cores\",\n          \"transparent\": false,\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"110%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"avg\"\n        }\n      ],\n      \"showTitle\": false,\n\
      \      \"title\": \"CPU Cores\",\n      \"titleSize\": \"h6\"\n    },\n    {\n\
      \      \"collapse\": false,\n      \"editable\": false,\n      \"height\": \"\
      300px\",\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n \
      \         \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\"\
      : false,\n          \"datasource\": \"prometheus\",\n          \"description\"\
      : \"This represents the total [memory resource requests](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-memory)\
      \ in the cluster.\\nFor comparison the total [allocatable memory](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node-allocatable.md)\
      \ is also shown.\",\n          \"editable\": false,\n          \"error\": false,\n\
      \          \"fill\": 1,\n          \"grid\": {\n            \"threshold1Color\"\
      : \"rgba(216, 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234,\
      \ 112, 112, 0.22)\"\n          },\n          \"id\": 3,\n          \"isNew\"\
      : false,\n          \"legend\": {\n            \"alignAsTable\": false,\n  \
      \          \"avg\": false,\n            \"current\": false,\n            \"\
      hideEmpty\": false,\n            \"hideZero\": false,\n            \"max\":\
      \ false,\n            \"min\": false,\n            \"rightSide\": false,\n \
      \           \"show\": true,\n            \"total\": false\n          },\n  \
      \        \"lines\": true,\n          \"linewidth\": 1,\n          \"links\"\
      : [],\n          \"nullPointMode\": \"null\",\n          \"percentage\": false,\n\
      \          \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\"\
      : \"flot\",\n          \"seriesOverrides\": [],\n          \"spaceLength\":\
      \ 10,\n          \"span\": 9,\n          \"stack\": false,\n          \"steppedLine\"\
      : false,\n          \"targets\": [\n            {\n              \"expr\": \"\
      min(sum(kube_node_status_allocatable_memory_bytes) by (instance))\",\n     \
      \         \"hide\": false,\n              \"intervalFactor\": 2,\n         \
      \     \"legendFormat\": \"Allocatable Memory\",\n              \"refId\": \"\
      A\",\n              \"step\": 20\n            },\n            {\n          \
      \    \"expr\": \"max(sum(kube_pod_container_resource_requests_memory_bytes)\
      \ by (instance))\",\n              \"hide\": false,\n              \"intervalFactor\"\
      : 2,\n              \"legendFormat\": \"Requested Memory\",\n              \"\
      refId\": \"B\",\n              \"step\": 20\n            }\n          ],\n \
      \         \"title\": \"Memory\",\n          \"tooltip\": {\n            \"msResolution\"\
      : false,\n            \"shared\": true,\n            \"sort\": 0,\n        \
      \    \"value_type\": \"individual\"\n          },\n          \"type\": \"graph\"\
      ,\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\"\
      : true,\n            \"values\": []\n          },\n          \"yaxes\": [\n\
      \            {\n              \"format\": \"bytes\",\n              \"label\"\
      : \"Memory\",\n              \"logBase\": 1,\n              \"show\": true\n\
      \            },\n            {\n              \"format\": \"short\",\n     \
      \         \"logBase\": 1,\n              \"show\": true\n            }\n   \
      \       ]\n        },\n        {\n          \"colorBackground\": false,\n  \
      \        \"colorValue\": false,\n          \"colors\": [\n            \"rgba(50,\
      \ 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\",\n           \
      \ \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"percent\",\n    \
      \      \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"hideTimeOverride\"\
      : false,\n          \"id\": 4,\n          \"links\": [],\n          \"mappingType\"\
      : 1,\n          \"mappingTypes\": [\n            {\n              \"name\":\
      \ \"value to text\",\n              \"value\": 1\n            },\n         \
      \   {\n              \"name\": \"range to text\",\n              \"value\":\
      \ 2\n            }\n          ],\n          \"maxDataPoints\": 100,\n      \
      \    \"nullPointMode\": \"connected\",\n          \"postfix\": \"\",\n     \
      \     \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n         \
      \ \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n            {\n\
      \              \"from\": \"null\",\n              \"text\": \"N/A\",\n     \
      \         \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": true\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"max(sum(kube_pod_container_resource_requests_memory_bytes)\
      \ by (instance)) / min(sum(kube_node_status_allocatable_memory_bytes) by (instance))\
      \ * 100\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"\",\n              \"refId\": \"A\",\n              \"step\": 240\n    \
      \        }\n          ],\n          \"thresholds\": \"80, 90\",\n          \"\
      title\": \"Memory\",\n          \"transparent\": false,\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"110%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"avg\"\n        }\n      ],\n      \"showTitle\": false,\n\
      \      \"title\": \"Memory\",\n      \"titleSize\": \"h6\"\n    }\n  ],\n  \"\
      schemaVersion\": 14,\n  \"sharedCrosshair\": false,\n  \"style\": \"dark\",\n\
      \  \"tags\": [],\n  \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n\
      \    \"from\": \"now-3h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n\
      \    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\"\
      ,\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\"\
      ,\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\"\
      ,\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\"\
      ,\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\"\
      : \"browser\",\n  \"title\": \"Kubernetes Resource Requests\",\n  \"version\"\
      : 2\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-resource-requests
    namespace: knative-monitoring
- apiVersion: v1
  data:
    kubernetes-nodes-dashboard.json: "{\n  \"__inputs\": [\n    {\n      \"description\"\
      : \"\",\n      \"label\": \"prometheus\",\n      \"name\": \"prometheus\",\n\
      \      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\",\n\
      \      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\": {\n    \"list\"\
      : []\n  },\n  \"description\": \"Dashboard to get an overview of one server\"\
      ,\n  \"editable\": false,\n  \"gnetId\": 22,\n  \"graphTooltip\": 0,\n  \"hideControls\"\
      : false,\n  \"links\": [],\n  \"refresh\": false,\n  \"rows\": [\n    {\n  \
      \    \"collapse\": false,\n      \"editable\": false,\n      \"height\": \"\
      250px\",\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n \
      \         \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\"\
      : false,\n          \"datasource\": \"prometheus\",\n          \"editable\"\
      : false,\n          \"error\": false,\n          \"fill\": 1,\n          \"\
      grid\": {\n            \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n\
      \            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n\
      \          \"id\": 3,\n          \"isNew\": false,\n          \"legend\": {\n\
      \            \"alignAsTable\": false,\n            \"avg\": false,\n       \
      \     \"current\": false,\n            \"hideEmpty\": false,\n            \"\
      hideZero\": false,\n            \"max\": false,\n            \"min\": false,\n\
      \            \"rightSide\": false,\n            \"show\": true,\n          \
      \  \"total\": false\n          },\n          \"lines\": true,\n          \"\
      linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\"\
      ,\n          \"percentage\": false,\n          \"pointradius\": 5,\n       \
      \   \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\"\
      : [],\n          \"spaceLength\": 10,\n          \"span\": 6,\n          \"\
      stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n\
      \            {\n              \"expr\": \"100 - (avg by (cpu) (irate(node_cpu{mode=\\\
      \"idle\\\", instance=\\\"$server\\\"}[5m])) * 100)\",\n              \"hide\"\
      : false,\n              \"intervalFactor\": 10,\n              \"legendFormat\"\
      : \"{{cpu}}\",\n              \"refId\": \"A\",\n              \"step\": 50\n\
      \            }\n          ],\n          \"title\": \"Idle CPU\",\n         \
      \ \"tooltip\": {\n            \"msResolution\": false,\n            \"shared\"\
      : true,\n            \"sort\": 0,\n            \"value_type\": \"cumulative\"\
      \n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n   \
      \         \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"percent\",\n              \"label\": \"cpu usage\",\n          \
      \    \"logBase\": 1,\n              \"max\": 100,\n              \"min\": 0,\n\
      \              \"show\": true\n            },\n            {\n             \
      \ \"format\": \"short\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            }\n          ]\n        },\n        {\n          \"aliasColors\"\
      : {},\n          \"bars\": false,\n          \"dashLength\": 10,\n         \
      \ \"dashes\": false,\n          \"datasource\": \"prometheus\",\n          \"\
      editable\": false,\n          \"error\": false,\n          \"fill\": 1,\n  \
      \        \"grid\": {\n            \"threshold1Color\": \"rgba(216, 200, 27,\
      \ 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n\
      \          },\n          \"id\": 9,\n          \"isNew\": false,\n         \
      \ \"legend\": {\n            \"alignAsTable\": false,\n            \"avg\":\
      \ false,\n            \"current\": false,\n            \"hideEmpty\": false,\n\
      \            \"hideZero\": false,\n            \"max\": false,\n           \
      \ \"min\": false,\n            \"rightSide\": false,\n            \"show\":\
      \ true,\n            \"total\": false\n          },\n          \"lines\": true,\n\
      \          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\"\
      : \"connected\",\n          \"percentage\": false,\n          \"pointradius\"\
      : 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n    \
      \      \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"\
      span\": 6,\n          \"stack\": false,\n          \"steppedLine\": false,\n\
      \          \"targets\": [\n            {\n              \"expr\": \"node_load1{instance=\\\
      \"$server\\\"}\",\n              \"intervalFactor\": 4,\n              \"legendFormat\"\
      : \"load 1m\",\n              \"refId\": \"A\",\n              \"step\": 20,\n\
      \              \"target\": \"\"\n            },\n            {\n           \
      \   \"expr\": \"node_load5{instance=\\\"$server\\\"}\",\n              \"intervalFactor\"\
      : 4,\n              \"legendFormat\": \"load 5m\",\n              \"refId\"\
      : \"B\",\n              \"step\": 20,\n              \"target\": \"\"\n    \
      \        },\n            {\n              \"expr\": \"node_load15{instance=\\\
      \"$server\\\"}\",\n              \"intervalFactor\": 4,\n              \"legendFormat\"\
      : \"load 15m\",\n              \"refId\": \"C\",\n              \"step\": 20,\n\
      \              \"target\": \"\"\n            }\n          ],\n          \"title\"\
      : \"System Load\",\n          \"tooltip\": {\n            \"msResolution\":\
      \ false,\n            \"shared\": true,\n            \"sort\": 0,\n        \
      \    \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\"\
      ,\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\"\
      : true,\n            \"values\": []\n          },\n          \"yaxes\": [\n\
      \            {\n              \"format\": \"percentunit\",\n              \"\
      logBase\": 1,\n              \"show\": true\n            },\n            {\n\
      \              \"format\": \"short\",\n              \"logBase\": 1,\n     \
      \         \"show\": true\n            }\n          ]\n        }\n      ],\n\
      \      \"showTitle\": false,\n      \"title\": \"New Row\",\n      \"titleSize\"\
      : \"h6\"\n    },\n    {\n      \"collapse\": false,\n      \"editable\": false,\n\
      \      \"height\": \"250px\",\n      \"panels\": [\n        {\n          \"\
      aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\": 10,\n\
      \          \"dashes\": false,\n          \"datasource\": \"prometheus\",\n \
      \         \"editable\": false,\n          \"error\": false,\n          \"fill\"\
      : 1,\n          \"grid\": {\n            \"threshold1Color\": \"rgba(216, 200,\
      \ 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\
      \n          },\n          \"id\": 4,\n          \"isNew\": false,\n        \
      \  \"legend\": {\n            \"alignAsTable\": false,\n            \"avg\"\
      : false,\n            \"current\": false,\n            \"hideEmpty\": false,\n\
      \            \"hideZero\": false,\n            \"max\": false,\n           \
      \ \"min\": false,\n            \"rightSide\": false,\n            \"show\":\
      \ true,\n            \"total\": false\n          },\n          \"lines\": true,\n\
      \          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\"\
      : \"connected\",\n          \"percentage\": false,\n          \"pointradius\"\
      : 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n    \
      \      \"seriesOverrides\": [\n            {\n              \"alias\": \"node_memory_SwapFree{instance=\\\
      \"172.17.0.1:9100\\\",job=\\\"prometheus\\\"}\",\n              \"yaxis\": 2\n\
      \            }\n          ],\n          \"spaceLength\": 10,\n          \"span\"\
      : 9,\n          \"stack\": true,\n          \"steppedLine\": false,\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"node_memory_MemTotal{instance=\\\
      \"$server\\\"} - node_memory_MemFree{instance=\\\"$server\\\"} - node_memory_Buffers{instance=\\\
      \"$server\\\"} - node_memory_Cached{instance=\\\"$server\\\"}\",\n         \
      \     \"hide\": false,\n              \"interval\": \"\",\n              \"\
      intervalFactor\": 2,\n              \"legendFormat\": \"memory used\",\n   \
      \           \"metric\": \"\",\n              \"refId\": \"C\",\n           \
      \   \"step\": 10\n            },\n            {\n              \"expr\": \"\
      node_memory_Buffers{instance=\\\"$server\\\"}\",\n              \"interval\"\
      : \"\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"memory buffers\",\n              \"metric\": \"\",\n              \"refId\"\
      : \"E\",\n              \"step\": 10\n            },\n            {\n      \
      \        \"expr\": \"node_memory_Cached{instance=\\\"$server\\\"}\",\n     \
      \         \"intervalFactor\": 2,\n              \"legendFormat\": \"memory cached\"\
      ,\n              \"metric\": \"\",\n              \"refId\": \"F\",\n      \
      \        \"step\": 10\n            },\n            {\n              \"expr\"\
      : \"node_memory_MemFree{instance=\\\"$server\\\"}\",\n              \"intervalFactor\"\
      : 2,\n              \"legendFormat\": \"memory free\",\n              \"metric\"\
      : \"\",\n              \"refId\": \"D\",\n              \"step\": 10\n     \
      \       }\n          ],\n          \"title\": \"Memory Usage\",\n          \"\
      tooltip\": {\n            \"msResolution\": false,\n            \"shared\":\
      \ true,\n            \"sort\": 0,\n            \"value_type\": \"individual\"\
      \n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n   \
      \         \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"bytes\",\n              \"logBase\": 1,\n              \"min\":\
      \ \"0\",\n              \"show\": true\n            },\n            {\n    \
      \          \"format\": \"short\",\n              \"logBase\": 1,\n         \
      \     \"show\": true\n            }\n          ]\n        },\n        {\n  \
      \        \"colorBackground\": false,\n          \"colorValue\": false,\n   \
      \       \"colors\": [\n            \"rgba(50, 172, 45, 0.97)\",\n          \
      \  \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(245, 54, 54, 0.9)\"\n \
      \         ],\n          \"datasource\": \"prometheus\",\n          \"editable\"\
      : false,\n          \"format\": \"percent\",\n          \"gauge\": {\n     \
      \       \"maxValue\": 100,\n            \"minValue\": 0,\n            \"show\"\
      : true,\n            \"thresholdLabels\": false,\n            \"thresholdMarkers\"\
      : true\n          },\n          \"hideTimeOverride\": false,\n          \"id\"\
      : 5,\n          \"links\": [],\n          \"mappingType\": 1,\n          \"\
      mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfix\": \"\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 3,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": false\n          },\n          \"targets\": [\n            {\n     \
      \         \"expr\": \"((node_memory_MemTotal{instance=\\\"$server\\\"} - node_memory_MemFree{instance=\\\
      \"$server\\\"}  - node_memory_Buffers{instance=\\\"$server\\\"} - node_memory_Cached{instance=\\\
      \"$server\\\"}) / node_memory_MemTotal{instance=\\\"$server\\\"}) * 100\",\n\
      \              \"intervalFactor\": 2,\n              \"refId\": \"A\",\n   \
      \           \"step\": 60,\n              \"target\": \"\"\n            }\n \
      \         ],\n          \"thresholds\": \"80, 90\",\n          \"title\": \"\
      Memory Usage\",\n          \"transparent\": false,\n          \"type\": \"singlestat\"\
      ,\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n     \
      \       {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n\
      \              \"value\": \"null\"\n            }\n          ],\n          \"\
      valueName\": \"avg\"\n        }\n      ],\n      \"showTitle\": false,\n   \
      \   \"title\": \"New Row\",\n      \"titleSize\": \"h6\"\n    },\n    {\n  \
      \    \"collapse\": false,\n      \"editable\": false,\n      \"height\": \"\
      250px\",\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n \
      \         \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\"\
      : false,\n          \"datasource\": \"prometheus\",\n          \"editable\"\
      : false,\n          \"error\": false,\n          \"fill\": 1,\n          \"\
      grid\": {\n            \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n\
      \            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n\
      \          \"id\": 6,\n          \"isNew\": true,\n          \"legend\": {\n\
      \            \"alignAsTable\": false,\n            \"avg\": false,\n       \
      \     \"current\": false,\n            \"hideEmpty\": false,\n            \"\
      hideZero\": false,\n            \"max\": false,\n            \"min\": false,\n\
      \            \"rightSide\": false,\n            \"show\": true,\n          \
      \  \"total\": false\n          },\n          \"lines\": true,\n          \"\
      linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\"\
      ,\n          \"percentage\": false,\n          \"pointradius\": 5,\n       \
      \   \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\"\
      : [\n            {\n              \"alias\": \"read\",\n              \"yaxis\"\
      : 1\n            },\n            {\n              \"alias\": \"{instance=\\\"\
      172.17.0.1:9100\\\"}\",\n              \"yaxis\": 2\n            },\n      \
      \      {\n              \"alias\": \"io time\",\n              \"yaxis\": 2\n\
      \            }\n          ],\n          \"spaceLength\": 10,\n          \"span\"\
      : 9,\n          \"stack\": false,\n          \"steppedLine\": false,\n     \
      \     \"targets\": [\n            {\n              \"expr\": \"sum by (instance)\
      \ (rate(node_disk_bytes_read{instance=\\\"$server\\\"}[2m]))\",\n          \
      \    \"hide\": false,\n              \"intervalFactor\": 4,\n              \"\
      legendFormat\": \"read\",\n              \"refId\": \"A\",\n              \"\
      step\": 20,\n              \"target\": \"\"\n            },\n            {\n\
      \              \"expr\": \"sum by (instance) (rate(node_disk_bytes_written{instance=\\\
      \"$server\\\"}[2m]))\",\n              \"intervalFactor\": 4,\n            \
      \  \"legendFormat\": \"written\",\n              \"refId\": \"B\",\n       \
      \       \"step\": 20\n            },\n            {\n              \"expr\"\
      : \"sum by (instance) (rate(node_disk_io_time_ms{instance=\\\"$server\\\"}[2m]))\"\
      ,\n              \"intervalFactor\": 4,\n              \"legendFormat\": \"\
      io time\",\n              \"refId\": \"C\",\n              \"step\": 20\n  \
      \          }\n          ],\n          \"title\": \"Disk I/O\",\n          \"\
      tooltip\": {\n            \"msResolution\": false,\n            \"shared\":\
      \ true,\n            \"sort\": 0,\n            \"value_type\": \"cumulative\"\
      \n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n   \
      \         \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"bytes\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            },\n            {\n              \"format\": \"ms\",\n \
      \             \"logBase\": 1,\n              \"show\": true\n            }\n\
      \          ]\n        },\n        {\n          \"colorBackground\": false,\n\
      \          \"colorValue\": false,\n          \"colors\": [\n            \"rgba(50,\
      \ 172, 45, 0.97)\",\n            \"rgba(237, 129, 40, 0.89)\",\n           \
      \ \"rgba(245, 54, 54, 0.9)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"percentunit\",\n\
      \          \"gauge\": {\n            \"maxValue\": 1,\n            \"minValue\"\
      : 0,\n            \"show\": true,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"hideTimeOverride\"\
      : false,\n          \"id\": 7,\n          \"links\": [],\n          \"mappingType\"\
      : 1,\n          \"mappingTypes\": [\n            {\n              \"name\":\
      \ \"value to text\",\n              \"value\": 1\n            },\n         \
      \   {\n              \"name\": \"range to text\",\n              \"value\":\
      \ 2\n            }\n          ],\n          \"maxDataPoints\": 100,\n      \
      \    \"nullPointMode\": \"connected\",\n          \"postfix\": \"\",\n     \
      \     \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n         \
      \ \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n            {\n\
      \              \"from\": \"null\",\n              \"text\": \"N/A\",\n     \
      \         \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"(sum(node_filesystem_size{device!=\\\
      \"rootfs\\\",instance=\\\"$server\\\"}) - sum(node_filesystem_free{device!=\\\
      \"rootfs\\\",instance=\\\"$server\\\"})) / sum(node_filesystem_size{device!=\\\
      \"rootfs\\\",instance=\\\"$server\\\"})\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 60,\n       \
      \       \"target\": \"\"\n            }\n          ],\n          \"thresholds\"\
      : \"0.75, 0.9\",\n          \"title\": \"Disk Space Usage\",\n          \"transparent\"\
      : false,\n          \"type\": \"singlestat\",\n          \"valueFontSize\":\
      \ \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"current\"\n      \
      \  }\n      ],\n      \"showTitle\": false,\n      \"title\": \"New Row\",\n\
      \      \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\": false,\n  \
      \    \"editable\": false,\n      \"height\": \"250px\",\n      \"panels\": [\n\
      \        {\n          \"aliasColors\": {},\n          \"bars\": false,\n   \
      \       \"dashLength\": 10,\n          \"dashes\": false,\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"error\": false,\n\
      \          \"fill\": 1,\n          \"grid\": {\n            \"threshold1Color\"\
      : \"rgba(216, 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234,\
      \ 112, 112, 0.22)\"\n          },\n          \"id\": 8,\n          \"isNew\"\
      : false,\n          \"legend\": {\n            \"alignAsTable\": false,\n  \
      \          \"avg\": false,\n            \"current\": false,\n            \"\
      hideEmpty\": false,\n            \"hideZero\": false,\n            \"max\":\
      \ false,\n            \"min\": false,\n            \"rightSide\": false,\n \
      \           \"show\": true,\n            \"total\": false\n          },\n  \
      \        \"lines\": true,\n          \"linewidth\": 2,\n          \"links\"\
      : [],\n          \"nullPointMode\": \"connected\",\n          \"percentage\"\
      : false,\n          \"pointradius\": 5,\n          \"points\": false,\n    \
      \      \"renderer\": \"flot\",\n          \"seriesOverrides\": [\n         \
      \   {\n              \"alias\": \"transmitted\",\n              \"yaxis\": 2\n\
      \            }\n          ],\n          \"spaceLength\": 10,\n          \"span\"\
      : 6,\n          \"stack\": false,\n          \"steppedLine\": false,\n     \
      \     \"targets\": [\n            {\n              \"expr\": \"rate(node_network_receive_bytes{instance=\\\
      \"$server\\\",device!~\\\"lo\\\"}[5m])\",\n              \"hide\": false,\n\
      \              \"intervalFactor\": 2,\n              \"legendFormat\": \"{{device}}\"\
      ,\n              \"refId\": \"A\",\n              \"step\": 10,\n          \
      \    \"target\": \"\"\n            }\n          ],\n          \"title\": \"\
      Network Received\",\n          \"tooltip\": {\n            \"msResolution\"\
      : false,\n            \"shared\": true,\n            \"sort\": 0,\n        \
      \    \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\"\
      ,\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\"\
      : true,\n            \"values\": []\n          },\n          \"yaxes\": [\n\
      \            {\n              \"format\": \"bytes\",\n              \"logBase\"\
      : 1,\n              \"show\": true\n            },\n            {\n        \
      \      \"format\": \"bytes\",\n              \"logBase\": 1,\n             \
      \ \"show\": true\n            }\n          ]\n        },\n        {\n      \
      \    \"aliasColors\": {},\n          \"bars\": false,\n          \"dashLength\"\
      : 10,\n          \"dashes\": false,\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"error\": false,\n          \"\
      fill\": 1,\n          \"grid\": {\n            \"threshold1Color\": \"rgba(216,\
      \ 200, 27, 0.27)\",\n            \"threshold2Color\": \"rgba(234, 112, 112,\
      \ 0.22)\"\n          },\n          \"id\": 10,\n          \"isNew\": false,\n\
      \          \"legend\": {\n            \"alignAsTable\": false,\n           \
      \ \"avg\": false,\n            \"current\": false,\n            \"hideEmpty\"\
      : false,\n            \"hideZero\": false,\n            \"max\": false,\n  \
      \          \"min\": false,\n            \"rightSide\": false,\n            \"\
      show\": true,\n            \"total\": false\n          },\n          \"lines\"\
      : true,\n          \"linewidth\": 2,\n          \"links\": [],\n          \"\
      nullPointMode\": \"connected\",\n          \"percentage\": false,\n        \
      \  \"pointradius\": 5,\n          \"points\": false,\n          \"renderer\"\
      : \"flot\",\n          \"seriesOverrides\": [\n            {\n             \
      \ \"alias\": \"transmitted\",\n              \"yaxis\": 2\n            }\n \
      \         ],\n          \"spaceLength\": 10,\n          \"span\": 6,\n     \
      \     \"stack\": false,\n          \"steppedLine\": false,\n          \"targets\"\
      : [\n            {\n              \"expr\": \"rate(node_network_transmit_bytes{instance=\\\
      \"$server\\\",device!~\\\"lo\\\"}[5m])\",\n              \"hide\": false,\n\
      \              \"intervalFactor\": 2,\n              \"legendFormat\": \"{{device}}\"\
      ,\n              \"refId\": \"B\",\n              \"step\": 10,\n          \
      \    \"target\": \"\"\n            }\n          ],\n          \"title\": \"\
      Network Transmitted\",\n          \"tooltip\": {\n            \"msResolution\"\
      : false,\n            \"shared\": true,\n            \"sort\": 0,\n        \
      \    \"value_type\": \"cumulative\"\n          },\n          \"type\": \"graph\"\
      ,\n          \"xaxis\": {\n            \"mode\": \"time\",\n            \"show\"\
      : true,\n            \"values\": []\n          },\n          \"yaxes\": [\n\
      \            {\n              \"format\": \"bytes\",\n              \"logBase\"\
      : 1,\n              \"show\": true\n            },\n            {\n        \
      \      \"format\": \"bytes\",\n              \"logBase\": 1,\n             \
      \ \"show\": true\n            }\n          ]\n        }\n      ],\n      \"\
      showTitle\": false,\n      \"title\": \"New Row\",\n      \"titleSize\": \"\
      h6\"\n    }\n  ],\n  \"schemaVersion\": 14,\n  \"sharedCrosshair\": false,\n\
      \  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\"\
      : [\n      {\n        \"allValue\": null,\n        \"current\": {},\n      \
      \  \"datasource\": \"prometheus\",\n        \"hide\": 0,\n        \"includeAll\"\
      : false,\n        \"label\": null,\n        \"multi\": false,\n        \"name\"\
      : \"server\",\n        \"options\": [],\n        \"query\": \"label_values(node_boot_time,\
      \ instance)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"\
      sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n     \
      \   \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\"\
      : false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-1h\",\n  \
      \  \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n\
      \      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\"\
      ,\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\
      \n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\"\
      ,\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\"\
      ,\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"browser\",\n  \"title\": \"\
      Nodes\",\n  \"version\": 2\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-nodes
    namespace: knative-monitoring
- apiVersion: v1
  data:
    kubernetes-pods-dashboard.json: "{\n  \"__inputs\": [\n    {\n      \"description\"\
      : \"\",\n      \"label\": \"prometheus\",\n      \"name\": \"prometheus\",\n\
      \      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\",\n\
      \      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\": {\n    \"list\"\
      : []\n  },\n  \"editable\": false,\n  \"graphTooltip\": 1,\n  \"hideControls\"\
      : false,\n  \"links\": [],\n  \"refresh\": false,\n  \"rows\": [\n    {\n  \
      \    \"collapse\": false,\n      \"editable\": false,\n      \"height\": \"\
      250px\",\n      \"panels\": [\n        {\n          \"aliasColors\": {},\n \
      \         \"bars\": false,\n          \"dashLength\": 10,\n          \"dashes\"\
      : false,\n          \"datasource\": \"prometheus\",\n          \"editable\"\
      : false,\n          \"error\": false,\n          \"fill\": 1,\n          \"\
      grid\": {\n            \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n\
      \            \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n\
      \          \"id\": 1,\n          \"isNew\": false,\n          \"legend\": {\n\
      \            \"alignAsTable\": true,\n            \"avg\": true,\n         \
      \   \"current\": true,\n            \"hideEmpty\": false,\n            \"hideZero\"\
      : false,\n            \"max\": false,\n            \"min\": false,\n       \
      \     \"rightSide\": true,\n            \"show\": true,\n            \"total\"\
      : false,\n            \"values\": true\n          },\n          \"lines\": true,\n\
      \          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\"\
      : \"connected\",\n          \"percentage\": false,\n          \"pointradius\"\
      : 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n    \
      \      \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"\
      span\": 12,\n          \"stack\": false,\n          \"steppedLine\": false,\n\
      \          \"targets\": [\n            {\n              \"expr\": \"sum by(container_name)\
      \ (container_memory_usage_bytes{pod_name=\\\"$pod\\\", container_name=~\\\"\
      $container\\\", container_name!=\\\"POD\\\"})\",\n              \"interval\"\
      : \"10s\",\n              \"intervalFactor\": 1,\n              \"legendFormat\"\
      : \"Current: {{ container_name }}\",\n              \"metric\": \"container_memory_usage_bytes\"\
      ,\n              \"refId\": \"A\",\n              \"step\": 15\n           \
      \ },\n            {\n              \"expr\": \"kube_pod_container_resource_requests_memory_bytes{pod=\\\
      \"$pod\\\", container=~\\\"$container\\\"}\",\n              \"interval\": \"\
      10s\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"Requested: {{ container }}\",\n              \"metric\": \"kube_pod_container_resource_requests_memory_bytes\"\
      ,\n              \"refId\": \"B\",\n              \"step\": 20\n           \
      \ },\n            {\n              \"expr\": \"kube_pod_container_resource_limits_memory_bytes{pod=\\\
      \"$pod\\\", container=~\\\"$container\\\"}\",\n              \"interval\": \"\
      10s\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"Limit: {{ container }}\",\n              \"metric\": \"kube_pod_container_resource_limits_memory_bytes\"\
      ,\n              \"refId\": \"C\",\n              \"step\": 20\n           \
      \ }\n          ],\n          \"title\": \"Memory Usage\",\n          \"tooltip\"\
      : {\n            \"msResolution\": true,\n            \"shared\": true,\n  \
      \          \"sort\": 0,\n            \"value_type\": \"cumulative\"\n      \
      \    },\n          \"type\": \"graph\",\n          \"xaxis\": {\n          \
      \  \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"bytes\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            },\n            {\n              \"format\": \"short\",\n\
      \              \"logBase\": 1,\n              \"show\": true\n            }\n\
      \          ]\n        }\n      ],\n      \"showTitle\": false,\n      \"title\"\
      : \"Row\",\n      \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\":\
      \ false,\n      \"editable\": false,\n      \"height\": \"250px\",\n      \"\
      panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\":\
      \ false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n    \
      \      \"datasource\": \"prometheus\",\n          \"editable\": false,\n   \
      \       \"error\": false,\n          \"fill\": 1,\n          \"grid\": {\n \
      \           \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n           \
      \ \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n       \
      \   \"id\": 2,\n          \"isNew\": false,\n          \"legend\": {\n     \
      \       \"alignAsTable\": true,\n            \"avg\": true,\n            \"\
      current\": true,\n            \"hideEmpty\": false,\n            \"hideZero\"\
      : false,\n            \"max\": false,\n            \"min\": false,\n       \
      \     \"rightSide\": true,\n            \"show\": true,\n            \"total\"\
      : false,\n            \"values\": true\n          },\n          \"lines\": true,\n\
      \          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\"\
      : \"connected\",\n          \"percentage\": false,\n          \"pointradius\"\
      : 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n    \
      \      \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"\
      span\": 12,\n          \"stack\": false,\n          \"steppedLine\": false,\n\
      \          \"targets\": [\n            {\n              \"expr\": \"sum by (container_name)(rate(container_cpu_usage_seconds_total{image!=\\\
      \"\\\",container_name!=\\\"POD\\\",pod_name=\\\"$pod\\\"}[1m]))\",\n       \
      \       \"intervalFactor\": 2,\n              \"legendFormat\": \"{{ container_name\
      \ }}\",\n              \"refId\": \"A\",\n              \"step\": 30\n     \
      \       },\n            {\n              \"expr\": \"kube_pod_container_resource_requests_cpu_cores{pod=\\\
      \"$pod\\\", container=~\\\"$container\\\"}\",\n              \"interval\": \"\
      10s\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"Requested: {{ container }}\",\n              \"metric\": \"kube_pod_container_resource_requests_cpu_cores\"\
      ,\n              \"refId\": \"B\",\n              \"step\": 20\n           \
      \ },\n            {\n              \"expr\": \"kube_pod_container_resource_limits_cpu_cores{pod=\\\
      \"$pod\\\", container=~\\\"$container\\\"}\",\n              \"interval\": \"\
      10s\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"Limit: {{ container }}\",\n              \"metric\": \"kube_pod_container_resource_limits_memory_bytes\"\
      ,\n              \"refId\": \"C\",\n              \"step\": 20\n           \
      \ }\n          ],\n          \"title\": \"CPU Usage\",\n          \"tooltip\"\
      : {\n            \"msResolution\": true,\n            \"shared\": true,\n  \
      \          \"sort\": 0,\n            \"value_type\": \"cumulative\"\n      \
      \    },\n          \"type\": \"graph\",\n          \"xaxis\": {\n          \
      \  \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"short\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            },\n            {\n              \"format\": \"short\",\n\
      \              \"logBase\": 1,\n              \"show\": true\n            }\n\
      \          ]\n        }\n      ],\n      \"showTitle\": false,\n      \"title\"\
      : \"Row\",\n      \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\":\
      \ false,\n      \"editable\": false,\n      \"height\": \"250px\",\n      \"\
      panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\":\
      \ false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n    \
      \      \"datasource\": \"prometheus\",\n          \"editable\": false,\n   \
      \       \"error\": false,\n          \"fill\": 1,\n          \"grid\": {\n \
      \           \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n           \
      \ \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n       \
      \   \"id\": 3,\n          \"isNew\": false,\n          \"legend\": {\n     \
      \       \"alignAsTable\": true,\n            \"avg\": true,\n            \"\
      current\": true,\n            \"hideEmpty\": false,\n            \"hideZero\"\
      : false,\n            \"max\": false,\n            \"min\": false,\n       \
      \     \"rightSide\": true,\n            \"show\": true,\n            \"total\"\
      : false,\n            \"values\": true\n          },\n          \"lines\": true,\n\
      \          \"linewidth\": 2,\n          \"links\": [],\n          \"nullPointMode\"\
      : \"connected\",\n          \"percentage\": false,\n          \"pointradius\"\
      : 5,\n          \"points\": false,\n          \"renderer\": \"flot\",\n    \
      \      \"seriesOverrides\": [],\n          \"spaceLength\": 10,\n          \"\
      span\": 12,\n          \"stack\": false,\n          \"steppedLine\": false,\n\
      \          \"targets\": [\n            {\n              \"expr\": \"sort_desc(sum\
      \ by (pod_name) (rate(container_network_receive_bytes_total{pod_name=\\\"$pod\\\
      \"}[1m])))\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"{{ pod_name }}\",\n              \"refId\": \"A\",\n              \"step\"\
      : 30\n            }\n          ],\n          \"title\": \"Network I/O\",\n \
      \         \"tooltip\": {\n            \"msResolution\": true,\n            \"\
      shared\": true,\n            \"sort\": 0,\n            \"value_type\": \"cumulative\"\
      \n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n   \
      \         \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"bytes\",\n              \"logBase\": 1,\n              \"show\"\
      : true\n            },\n            {\n              \"format\": \"short\",\n\
      \              \"logBase\": 1,\n              \"show\": true\n            }\n\
      \          ]\n        }\n      ],\n      \"showTitle\": false,\n      \"title\"\
      : \"New Row\",\n      \"titleSize\": \"h6\"\n    }\n  ],\n  \"schemaVersion\"\
      : 14,\n  \"sharedCrosshair\": false,\n  \"style\": \"dark\",\n  \"tags\": [],\n\
      \  \"templating\": {\n    \"list\": [\n      {\n        \"allValue\": \".*\"\
      ,\n        \"current\": {},\n        \"datasource\": \"prometheus\",\n     \
      \   \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Namespace\"\
      ,\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\"\
      : [],\n        \"query\": \"label_values(kube_pod_info, namespace)\",\n    \
      \    \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 0,\n     \
      \   \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\"\
      : \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n\
      \      {\n        \"allValue\": null,\n        \"current\": {},\n        \"\
      datasource\": \"prometheus\",\n        \"hide\": 0,\n        \"includeAll\"\
      : false,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"\
      name\": \"pod\",\n        \"options\": [],\n        \"query\": \"label_values(kube_pod_info{namespace=~\\\
      \"$namespace\\\"}, pod)\",\n        \"refresh\": 1,\n        \"regex\": \"\"\
      ,\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\"\
      : [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"\
      useTags\": false\n      },\n      {\n        \"allValue\": \".*\",\n       \
      \ \"current\": {},\n        \"datasource\": \"prometheus\",\n        \"hide\"\
      : 0,\n        \"includeAll\": true,\n        \"label\": \"Container\",\n   \
      \     \"multi\": false,\n        \"name\": \"container\",\n        \"options\"\
      : [],\n        \"query\": \"label_values(kube_pod_container_info{namespace=\\\
      \"$namespace\\\", pod=\\\"$pod\\\"}, container)\",\n        \"refresh\": 1,\n\
      \        \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\"\
      : \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\"\
      : \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\":\
      \ {\n    \"from\": \"now-6h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\"\
      : {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\"\
      ,\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\"\
      ,\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\"\
      ,\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\"\
      ,\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\"\
      : \"browser\",\n  \"title\": \"Pods\",\n  \"version\": 1\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-pods
    namespace: knative-monitoring
- apiVersion: v1
  data:
    kubernetes-statefulset-dashboard.json: "{\n  \"__inputs\": [\n    {\n      \"\
      description\": \"\",\n      \"label\": \"prometheus\",\n      \"name\": \"prometheus\"\
      ,\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\
      ,\n      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\": {\n    \"\
      list\": []\n  },\n  \"editable\": false,\n  \"graphTooltip\": 1,\n  \"hideControls\"\
      : false,\n  \"links\": [],\n  \"rows\": [\n    {\n      \"collapse\": false,\n\
      \      \"editable\": false,\n      \"height\": \"200px\",\n      \"panels\"\
      : [\n        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : false,\n          \"colors\": [\n            \"rgba(245, 54, 54, 0.9)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(50, 172, 45,\
      \ 0.97)\"\n          ],\n          \"datasource\": \"prometheus\",\n       \
      \   \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": true\n          },\n          \"id\": 8,\n         \
      \ \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfix\": \"cores\",\n          \"postfixFontSize\": \"50%\"\
      ,\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\",\n   \
      \       \"rangeMaps\": [\n            {\n              \"from\": \"null\",\n\
      \              \"text\": \"N/A\",\n              \"to\": \"null\"\n        \
      \    }\n          ],\n          \"span\": 4,\n          \"sparkline\": {\n \
      \           \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": true\n          },\n          \"targets\": [\n            {\n      \
      \        \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=\\\
      \"$statefulset_namespace\\\",pod_name=~\\\"$statefulset_name.*\\\"}[3m]))\"\
      ,\n              \"intervalFactor\": 2,\n              \"refId\": \"A\",\n \
      \             \"step\": 600\n            }\n          ],\n          \"title\"\
      : \"CPU\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"110%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"avg\"\n        },\n\
      \        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : false,\n          \"colors\": [\n            \"rgba(245, 54, 54, 0.9)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(50, 172, 45,\
      \ 0.97)\"\n          ],\n          \"datasource\": \"prometheus\",\n       \
      \   \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": true\n          },\n          \"id\": 9,\n         \
      \ \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfix\": \"GB\",\n          \"postfixFontSize\": \"50%\",\n\
      \          \"prefix\": \"\",\n          \"prefixFontSize\": \"80%\",\n     \
      \     \"rangeMaps\": [\n            {\n              \"from\": \"null\",\n \
      \             \"text\": \"N/A\",\n              \"to\": \"null\"\n         \
      \   }\n          ],\n          \"span\": 4,\n          \"sparkline\": {\n  \
      \          \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": true\n          },\n          \"targets\": [\n            {\n      \
      \        \"expr\": \"sum(container_memory_usage_bytes{namespace=\\\"$statefulset_namespace\\\
      \",pod_name=~\\\"$statefulset_name.*\\\"}) / 1024^3\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 600\n       \
      \     }\n          ],\n          \"title\": \"Memory\",\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"110%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"avg\"\n        },\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": false,\n          \"colors\": [\n      \
      \      \"rgba(245, 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      Bps\",\n          \"gauge\": {\n            \"maxValue\": 100,\n           \
      \ \"minValue\": 0,\n            \"show\": false,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": false\n          },\n          \"\
      id\": 7,\n          \"links\": [],\n          \"mappingType\": 1,\n        \
      \  \"mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfix\": \"\",\n          \"postfixFontSize\"\
      : \"50%\",\n          \"prefix\": \"\",\n          \"prefixFontSize\": \"50%\"\
      ,\n          \"rangeMaps\": [\n            {\n              \"from\": \"null\"\
      ,\n              \"text\": \"N/A\",\n              \"to\": \"null\"\n      \
      \      }\n          ],\n          \"span\": 4,\n          \"sparkline\": {\n\
      \            \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n            \"full\"\
      : false,\n            \"lineColor\": \"rgb(31, 120, 193)\",\n            \"\
      show\": true\n          },\n          \"targets\": [\n            {\n      \
      \        \"expr\": \"sum(rate(container_network_transmit_bytes_total{namespace=\\\
      \"$statefulset_namespace\\\",pod_name=~\\\"$statefulset_name.*\\\"}[3m])) +\
      \ sum(rate(container_network_receive_bytes_total{namespace=\\\"$statefulset_namespace\\\
      \",pod_name=~\\\"$statefulset_name.*\\\"}[3m]))\",\n              \"intervalFactor\"\
      : 2,\n              \"refId\": \"A\",\n              \"step\": 600\n       \
      \     }\n          ],\n          \"title\": \"Network\",\n          \"type\"\
      : \"singlestat\",\n          \"valueFontSize\": \"80%\",\n          \"valueMaps\"\
      : [\n            {\n              \"op\": \"=\",\n              \"text\": \"\
      N/A\",\n              \"value\": \"null\"\n            }\n          ],\n   \
      \       \"valueName\": \"avg\"\n        }\n      ],\n      \"showTitle\": false,\n\
      \      \"title\": \"Dashboard Row\",\n      \"titleSize\": \"h6\"\n    },\n\
      \    {\n      \"collapse\": false,\n      \"editable\": false,\n      \"height\"\
      : \"100px\",\n      \"panels\": [\n        {\n          \"colorBackground\"\
      : false,\n          \"colorValue\": false,\n          \"colors\": [\n      \
      \      \"rgba(245, 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\"\
      ,\n            \"rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\"\
      : \"prometheus\",\n          \"editable\": false,\n          \"format\": \"\
      none\",\n          \"gauge\": {\n            \"maxValue\": 100,\n          \
      \  \"minValue\": 0,\n            \"show\": false,\n            \"thresholdLabels\"\
      : false,\n            \"thresholdMarkers\": false\n          },\n          \"\
      id\": 5,\n          \"links\": [],\n          \"mappingType\": 1,\n        \
      \  \"mappingTypes\": [\n            {\n              \"name\": \"value to text\"\
      ,\n              \"value\": 1\n            },\n            {\n             \
      \ \"name\": \"range to text\",\n              \"value\": 2\n            }\n\
      \          ],\n          \"maxDataPoints\": 100,\n          \"nullPointMode\"\
      : \"connected\",\n          \"postfixFontSize\": \"50%\",\n          \"prefix\"\
      : \"\",\n          \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n\
      \            {\n              \"from\": \"null\",\n              \"text\": \"\
      N/A\",\n              \"to\": \"null\"\n            }\n          ],\n      \
      \    \"span\": 3,\n          \"sparkline\": {\n            \"fillColor\": \"\
      rgba(31, 118, 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n            \"show\": false\n          },\n      \
      \    \"targets\": [\n            {\n              \"expr\": \"max(kube_statefulset_replicas{statefulset=\\\
      \"$statefulset_name\\\",namespace=\\\"$statefulset_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"metric\": \"\
      kube_statefulset_replicas\",\n              \"refId\": \"A\",\n            \
      \  \"step\": 600\n            }\n          ],\n          \"title\": \"Desired\
      \ Replicas\",\n          \"type\": \"singlestat\",\n          \"valueFontSize\"\
      : \"80%\",\n          \"valueMaps\": [\n            {\n              \"op\"\
      : \"=\",\n              \"text\": \"N/A\",\n              \"value\": \"null\"\
      \n            }\n          ],\n          \"valueName\": \"avg\"\n        },\n\
      \        {\n          \"colorBackground\": false,\n          \"colorValue\"\
      : false,\n          \"colors\": [\n            \"rgba(245, 54, 54, 0.9)\",\n\
      \            \"rgba(237, 129, 40, 0.89)\",\n            \"rgba(50, 172, 45,\
      \ 0.97)\"\n          ],\n          \"datasource\": \"prometheus\",\n       \
      \   \"editable\": false,\n          \"format\": \"none\",\n          \"gauge\"\
      : {\n            \"maxValue\": 100,\n            \"minValue\": 0,\n        \
      \    \"show\": false,\n            \"thresholdLabels\": false,\n           \
      \ \"thresholdMarkers\": true\n          },\n          \"id\": 6,\n         \
      \ \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"min(kube_statefulset_status_replicas{statefulset=\\\
      \"$statefulset_name\\\",namespace=\\\"$statefulset_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"refId\": \"\
      A\",\n              \"step\": 600\n            }\n          ],\n          \"\
      title\": \"Available Replicas\",\n          \"type\": \"singlestat\",\n    \
      \      \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n           \
      \ {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n      \
      \        \"value\": \"null\"\n            }\n          ],\n          \"valueName\"\
      : \"avg\"\n        },\n        {\n          \"colorBackground\": false,\n  \
      \        \"colorValue\": false,\n          \"colors\": [\n            \"rgba(245,\
      \ 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"\
      rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"none\",\n       \
      \   \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\":\
      \ 0,\n            \"show\": false,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"id\": 3,\n\
      \          \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"max(kube_statefulset_status_observed_generation{statefulset=\\\
      \"$statefulset_name\\\",namespace=\\\"$statefulset_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"refId\": \"\
      A\",\n              \"step\": 600\n            }\n          ],\n          \"\
      title\": \"Observed Generation\",\n          \"type\": \"singlestat\",\n   \
      \       \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n          \
      \  {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n     \
      \         \"value\": \"null\"\n            }\n          ],\n          \"valueName\"\
      : \"avg\"\n        },\n        {\n          \"colorBackground\": false,\n  \
      \        \"colorValue\": false,\n          \"colors\": [\n            \"rgba(245,\
      \ 54, 54, 0.9)\",\n            \"rgba(237, 129, 40, 0.89)\",\n            \"\
      rgba(50, 172, 45, 0.97)\"\n          ],\n          \"datasource\": \"prometheus\"\
      ,\n          \"editable\": false,\n          \"format\": \"none\",\n       \
      \   \"gauge\": {\n            \"maxValue\": 100,\n            \"minValue\":\
      \ 0,\n            \"show\": false,\n            \"thresholdLabels\": false,\n\
      \            \"thresholdMarkers\": true\n          },\n          \"id\": 2,\n\
      \          \"links\": [],\n          \"mappingType\": 1,\n          \"mappingTypes\"\
      : [\n            {\n              \"name\": \"value to text\",\n           \
      \   \"value\": 1\n            },\n            {\n              \"name\": \"\
      range to text\",\n              \"value\": 2\n            }\n          ],\n\
      \          \"maxDataPoints\": 100,\n          \"nullPointMode\": \"connected\"\
      ,\n          \"postfixFontSize\": \"50%\",\n          \"prefix\": \"\",\n  \
      \        \"prefixFontSize\": \"50%\",\n          \"rangeMaps\": [\n        \
      \    {\n              \"from\": \"null\",\n              \"text\": \"N/A\",\n\
      \              \"to\": \"null\"\n            }\n          ],\n          \"span\"\
      : 3,\n          \"sparkline\": {\n            \"fillColor\": \"rgba(31, 118,\
      \ 189, 0.18)\",\n            \"full\": false,\n            \"lineColor\": \"\
      rgb(31, 120, 193)\",\n            \"show\": false\n          },\n          \"\
      targets\": [\n            {\n              \"expr\": \"max(kube_statefulset_metadata_generation{statefulset=\\\
      \"$statefulset_name\\\",namespace=\\\"$statefulset_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"refId\": \"\
      A\",\n              \"step\": 600\n            }\n          ],\n          \"\
      title\": \"Metadata Generation\",\n          \"type\": \"singlestat\",\n   \
      \       \"valueFontSize\": \"80%\",\n          \"valueMaps\": [\n          \
      \  {\n              \"op\": \"=\",\n              \"text\": \"N/A\",\n     \
      \         \"value\": \"null\"\n            }\n          ],\n          \"valueName\"\
      : \"avg\"\n        }\n      ],\n      \"showTitle\": false,\n      \"title\"\
      : \"Dashboard Row\",\n      \"titleSize\": \"h6\"\n    },\n    {\n      \"collapse\"\
      : false,\n      \"editable\": false,\n      \"height\": \"350px\",\n      \"\
      panels\": [\n        {\n          \"aliasColors\": {},\n          \"bars\":\
      \ false,\n          \"dashLength\": 10,\n          \"dashes\": false,\n    \
      \      \"datasource\": \"prometheus\",\n          \"editable\": false,\n   \
      \       \"error\": false,\n          \"fill\": 1,\n          \"grid\": {\n \
      \           \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n           \
      \ \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n          },\n       \
      \   \"id\": 1,\n          \"isNew\": true,\n          \"legend\": {\n      \
      \      \"alignAsTable\": false,\n            \"avg\": false,\n            \"\
      current\": false,\n            \"hideEmpty\": false,\n            \"hideZero\"\
      : false,\n            \"max\": false,\n            \"min\": false,\n       \
      \     \"rightSide\": false,\n            \"show\": true,\n            \"total\"\
      : false\n          },\n          \"lines\": true,\n          \"linewidth\":\
      \ 2,\n          \"links\": [],\n          \"nullPointMode\": \"connected\",\n\
      \          \"percentage\": false,\n          \"pointradius\": 5,\n         \
      \ \"points\": false,\n          \"renderer\": \"flot\",\n          \"seriesOverrides\"\
      : [],\n          \"spaceLength\": 10,\n          \"span\": 12,\n          \"\
      stack\": false,\n          \"steppedLine\": false,\n          \"targets\": [\n\
      \            {\n              \"expr\": \"min(kube_statefulset_status_replicas{statefulset=\\\
      \"$statefulset_name\\\",namespace=\\\"$statefulset_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"available\",\n              \"refId\": \"B\",\n              \"step\": 30\n\
      \            },\n            {\n              \"expr\": \"max(kube_statefulset_replicas{statefulset=\\\
      \"$statefulset_name\\\",namespace=\\\"$statefulset_namespace\\\"}) without (instance,\
      \ pod)\",\n              \"intervalFactor\": 2,\n              \"legendFormat\"\
      : \"desired\",\n              \"refId\": \"E\",\n              \"step\": 30\n\
      \            }\n          ],\n          \"title\": \"Replicas\",\n         \
      \ \"tooltip\": {\n            \"msResolution\": true,\n            \"shared\"\
      : true,\n            \"sort\": 0,\n            \"value_type\": \"cumulative\"\
      \n          },\n          \"type\": \"graph\",\n          \"xaxis\": {\n   \
      \         \"mode\": \"time\",\n            \"show\": true,\n            \"values\"\
      : []\n          },\n          \"yaxes\": [\n            {\n              \"\
      format\": \"none\",\n              \"label\": \"\",\n              \"logBase\"\
      : 1,\n              \"show\": true\n            },\n            {\n        \
      \      \"format\": \"short\",\n              \"label\": \"\",\n            \
      \  \"logBase\": 1,\n              \"show\": false\n            }\n         \
      \ ]\n        }\n      ],\n      \"showTitle\": false,\n      \"title\": \"Dashboard\
      \ Row\",\n      \"titleSize\": \"h6\"\n    }\n  ],\n  \"schemaVersion\": 14,\n\
      \  \"sharedCrosshair\": false,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"\
      templating\": {\n    \"list\": [\n      {\n        \"allValue\": \".*\",\n \
      \       \"current\": {},\n        \"datasource\": \"prometheus\",\n        \"\
      hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\"\
      ,\n        \"multi\": false,\n        \"name\": \"statefulset_namespace\",\n\
      \        \"options\": [],\n        \"query\": \"label_values(kube_statefulset_metadata_generation,\
      \ namespace)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n       \
      \ \"sort\": 0,\n        \"tagValuesQuery\": null,\n        \"tags\": [],\n \
      \       \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\"\
      : false\n      },\n      {\n        \"allValue\": null,\n        \"current\"\
      : {},\n        \"datasource\": \"prometheus\",\n        \"hide\": 0,\n     \
      \   \"includeAll\": false,\n        \"label\": \"StatefulSet\",\n        \"\
      multi\": false,\n        \"name\": \"statefulset_name\",\n        \"options\"\
      : [],\n        \"query\": \"label_values(kube_statefulset_metadata_generation{namespace=\\\
      \"$statefulset_namespace\\\"}, statefulset)\",\n        \"refresh\": 1,\n  \
      \      \"regex\": \"\",\n        \"sort\": 0,\n        \"tagValuesQuery\": \"\
      \",\n        \"tags\": [],\n        \"tagsQuery\": \"statefulset\",\n      \
      \  \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n\
      \  \"time\": {\n    \"from\": \"now-6h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\"\
      : {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\"\
      ,\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\"\
      ,\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\"\
      ,\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\"\
      ,\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\"\
      : \"browser\",\n  \"title\": \"StatefulSet\",\n  \"version\": 1\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: grafana-dashboard-definition-kubernetes-statefulset
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: elasticsearch-logging
      kubernetes.io/cluster-service: 'true'
    name: elasticsearch-logging
  rules:
  - apiGroups:
    - ''
    resources:
    - services
    - namespaces
    - endpoints
    verbs:
    - get
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
    name: node-exporter
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
    name: node-exporter
    namespace: knative-monitoring
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
    name: node-exporter
    namespace: knative-monitoring
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: node-exporter
  subjects:
  - kind: ServiceAccount
    name: node-exporter
    namespace: knative-monitoring
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    labels:
    name: node-exporter
    namespace: knative-monitoring
  spec:
    template:
      metadata:
        labels:
          app: node-exporter
        name: node-exporter
        namespace: knative-monitoring
      spec:
        containers:
        - args:
          - --web.listen-address=127.0.0.1:9101
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
          image: quay.io/prometheus/node-exporter:v0.15.2
          name: node-exporter
          resources:
            limits:
              cpu: 200m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 30Mi
          volumeMounts:
          - mountPath: /host/proc
            name: proc
            readOnly: true
          - mountPath: /host/sys
            name: sys
            readOnly: true
        - args:
          - --secure-listen-address=:9100
          - --upstream=http://127.0.0.1:9101/
          image: quay.io/coreos/kube-rbac-proxy:v0.3.0
          name: kube-rbac-proxy
          ports:
          - containerPort: 9100
            hostPort: 9100
            name: https
          resources:
            limits:
              cpu: 20m
              memory: 40Mi
            requests:
              cpu: 10m
              memory: 20Mi
        hostNetwork: true
        hostPID: true
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccountName: node-exporter
        tolerations:
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /proc
          name: proc
        - hostPath:
            path: /sys
          name: sys
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: node-exporter
    name: node-exporter
    namespace: knative-monitoring
  spec:
    clusterIP: None
    ports:
    - name: https
      port: 9100
      protocol: TCP
    selector:
      app: node-exporter
    type: ClusterIP
- apiVersion: v1
  data:
    knative-control-plane-efficiency-dashboard.json: "{\n  \"__inputs\": [\n    {\n\
      \      \"description\": \"\",\n      \"label\": \"prometheus\",\n      \"name\"\
      : \"prometheus\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\"\
      : \"Prometheus\",\n      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\"\
      : {\n    \"list\": []\n  },\n  \"description\": \"Knative Serving - Control\
      \ Plane Efficiency\",\n  \"editable\": false,\n  \"gnetId\": null,\n  \"graphTooltip\"\
      : 0,\n  \"id\": null,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\"\
      : {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\":\
      \ false,\n      \"datasource\": \"prometheus\",\n      \"decimals\": 2,\n  \
      \    \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n\
      \        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"legend\"\
      : {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\"\
      : true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\"\
      : true,\n        \"show\": true,\n        \"total\": false,\n        \"values\"\
      : true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"\
      links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n\
      \      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"\
      flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"\
      stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n     \
      \   {\n          \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=\\\
      \"knative-serving\\\"}[1m]))\",\n          \"format\": \"time_series\",\n  \
      \        \"intervalFactor\": 1,\n          \"legendFormat\": \"knative-serving\"\
      ,\n          \"refId\": \"A\"\n        },\n        {\n          \"expr\": \"\
      sum(rate(container_cpu_usage_seconds_total{namespace=\\\"knative-build\\\"}[1m]))\"\
      ,\n          \"format\": \"time_series\",\n          \"instant\": false,\n \
      \         \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"\
      legendFormat\": \"knative-build\",\n          \"refId\": \"C\"\n        },\n\
      \        {\n          \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=\\\
      \"istio-system\\\"}[1m]))\",\n          \"format\": \"time_series\",\n     \
      \     \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\"\
      : 1,\n          \"legendFormat\": \"istio-system\",\n          \"refId\": \"\
      D\"\n        },\n        {\n          \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=\\\
      \"kube-system\\\"}[1m]))\",\n          \"format\": \"time_series\",\n      \
      \    \"instant\": false,\n          \"intervalFactor\": 1,\n          \"legendFormat\"\
      : \"kube-system\",\n          \"refId\": \"F\"\n        },\n        {\n    \
      \      \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=\\\"\
      kube-public\\\"}[1m]))\",\n          \"format\": \"time_series\",\n        \
      \  \"instant\": false,\n          \"intervalFactor\": 1,\n          \"legendFormat\"\
      : \"kube-public\",\n          \"refId\": \"E\"\n        },\n        {\n    \
      \      \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=\\\"\
      knative-monitoring\\\"}[1m]))\",\n          \"format\": \"time_series\",\n \
      \         \"instant\": false,\n          \"intervalFactor\": 1,\n          \"\
      legendFormat\": \"knative-monitoring\",\n          \"refId\": \"B\"\n      \
      \  }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n     \
      \ \"timeShift\": null,\n      \"title\": \"Namespace CPU Usage\",\n      \"\
      tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n        \"value_type\"\
      : \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n\
      \        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\":\
      \ null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"\
      yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\"\
      : null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\"\
      : null,\n          \"show\": true\n        },\n        {\n          \"format\"\
      : \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n      \
      \    \"max\": null,\n          \"min\": null,\n          \"show\": true\n  \
      \      }\n      ]\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\"\
      : false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\"\
      : \"prometheus\",\n      \"decimals\": null,\n      \"fill\": 1,\n      \"gridPos\"\
      : {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\"\
      : 0\n      },\n      \"id\": 3,\n      \"legend\": {\n        \"alignAsTable\"\
      : true,\n        \"avg\": true,\n        \"current\": true,\n        \"max\"\
      : false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"\
      show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n\
      \      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n   \
      \   \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\"\
      : 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\"\
      : [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\"\
      : false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(container_memory_usage_bytes{namespace=\\\
      \"knative-serving\\\"})\",\n          \"format\": \"time_series\",\n       \
      \   \"intervalFactor\": 1,\n          \"legendFormat\": \"knative-serving\"\
      ,\n          \"refId\": \"A\"\n        },\n        {\n          \"expr\": \"\
      sum(container_memory_usage_bytes{namespace=\\\"knative-build\\\"})\",\n    \
      \      \"format\": \"time_series\",\n          \"instant\": false,\n       \
      \   \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\"\
      : \"knative-build\",\n          \"refId\": \"C\"\n        },\n        {\n  \
      \        \"expr\": \"sum(container_memory_usage_bytes{namespace=\\\"istio-system\\\
      \"})\",\n          \"format\": \"time_series\",\n          \"instant\": false,\n\
      \          \"interval\": \"\",\n          \"intervalFactor\": 1,\n         \
      \ \"legendFormat\": \"istio-system\",\n          \"refId\": \"D\"\n        },\n\
      \        {\n          \"expr\": \"sum(container_memory_usage_bytes{namespace=\\\
      \"kube-system\\\"})\",\n          \"format\": \"time_series\",\n          \"\
      instant\": false,\n          \"intervalFactor\": 1,\n          \"legendFormat\"\
      : \"kube-system\",\n          \"refId\": \"F\"\n        },\n        {\n    \
      \      \"expr\": \"sum(container_memory_usage_bytes{namespace=\\\"kube-public\\\
      \"})\",\n          \"format\": \"time_series\",\n          \"instant\": false,\n\
      \          \"intervalFactor\": 1,\n          \"legendFormat\": \"kube-public\"\
      ,\n          \"refId\": \"E\"\n        },\n        {\n          \"expr\": \"\
      sum(container_memory_usage_bytes{namespace=\\\"knative-monitoring\\\"})\",\n\
      \          \"format\": \"time_series\",\n          \"instant\": false,\n   \
      \       \"intervalFactor\": 1,\n          \"legendFormat\": \"knative-monitoring\"\
      ,\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n\
      \      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"\
      Namespace Memory Usage\",\n      \"tooltip\": {\n        \"shared\": true,\n\
      \        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n  \
      \    \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n\
      \        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n\
      \        \"values\": []\n      },\n      \"yaxes\": [\n        {\n         \
      \ \"format\": \"decbytes\",\n          \"label\": null,\n          \"logBase\"\
      : 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\"\
      : true\n        },\n        {\n          \"format\": \"short\",\n          \"\
      label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n      \
      \    \"min\": null,\n          \"show\": false\n        }\n      ]\n    },\n\
      \    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\"\
      : 10,\n      \"dashes\": false,\n      \"datasource\": \"prometheus\",\n   \
      \   \"decimals\": 2,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\"\
      : 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 9\n      },\n  \
      \    \"id\": 4,\n      \"legend\": {\n        \"alignAsTable\": true,\n    \
      \    \"avg\": true,\n        \"current\": true,\n        \"max\": false,\n \
      \       \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n\
      \        \"total\": false,\n        \"values\": true\n      },\n      \"lines\"\
      : true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\"\
      : \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n     \
      \ \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\"\
      : [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\"\
      : false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace!~\\\
      \"knative-serving|knative-monitoring|knative-build|istio-system|kube-system|kube-public|^$\\\
      \"}[1m]))\",\n          \"format\": \"time_series\",\n          \"interval\"\
      : \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Data\
      \ plane\",\n          \"refId\": \"A\"\n        },\n        {\n          \"\
      expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=~\\\"knative-serving|knative-monitoring|knative-build|istio-system|kube-system|kube-public\\\
      \"}[1m]))\",\n          \"format\": \"time_series\",\n          \"intervalFactor\"\
      : 1,\n          \"legendFormat\": \"Control plane\",\n          \"refId\": \"\
      B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n\
      \      \"timeShift\": null,\n      \"title\": \"Control Plane vs Data Plane\
      \ CPU Usage\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"\
      sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\"\
      : \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\"\
      : \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\"\
      : []\n      },\n      \"yaxes\": [\n        {\n          \"decimals\": null,\n\
      \          \"format\": \"short\",\n          \"label\": null,\n          \"\
      logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n        \
      \  \"show\": true\n        },\n        {\n          \"format\": \"short\",\n\
      \          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n\
      \          \"min\": null,\n          \"show\": false\n        }\n      ]\n \
      \   },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"\
      dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"prometheus\"\
      ,\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\"\
      : 12,\n        \"x\": 12,\n        \"y\": 9\n      },\n      \"id\": 5,\n  \
      \    \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n\
      \        \"current\": true,\n        \"max\": false,\n        \"min\": false,\n\
      \        \"rightSide\": true,\n        \"show\": true,\n        \"total\": false,\n\
      \        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\"\
      : 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\"\
      : false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\"\
      : \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n  \
      \    \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n\
      \        {\n          \"expr\": \"sum(container_memory_usage_bytes{namespace!~\\\
      \"knative-serving|knative-monitoring|knative-build|istio-system|kube-system|kube-public|^$\\\
      \"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"\"\
      ,\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Data plane\"\
      ,\n          \"refId\": \"A\"\n        },\n        {\n          \"expr\": \"\
      sum(container_memory_usage_bytes{namespace=~\\\"knative-serving|knative-monitoring|knative-build|istio-system|kube-system|kube-public\\\
      \"})\",\n          \"format\": \"time_series\",\n          \"intervalFactor\"\
      : 1,\n          \"legendFormat\": \"Control plane\",\n          \"refId\": \"\
      B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n\
      \      \"timeShift\": null,\n      \"title\": \"Control Plane vs Data Plane\
      \ Memory Usage\",\n      \"tooltip\": {\n        \"shared\": true,\n       \
      \ \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\"\
      : \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\"\
      : \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\"\
      : []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"decbytes\"\
      ,\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\"\
      : null,\n          \"min\": null,\n          \"show\": true\n        },\n  \
      \      {\n          \"format\": \"short\",\n          \"label\": null,\n   \
      \       \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n\
      \          \"show\": true\n        }\n      ]\n    }\n  ],\n  \"refresh\": \"\
      5s\",\n  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n \
      \ \"templating\": {\n    \"list\": []\n  },\n  \"time\": {\n    \"from\": \"\
      now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\"\
      : [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"\
      5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"\
      1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n     \
      \ \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n  \
      \    \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\"\
      : \"Knative Serving - Control Plane Efficiency\",\n  \"uid\": \"1oI1URnik\"\
      ,\n  \"version\": 2\n}\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: grafana-dashboard-definition-knative-efficiency
    namespace: knative-monitoring
- apiVersion: v1
  data:
    knative-reconciler-dashboard.json: "{\n  \"__inputs\": [\n    {\n      \"description\"\
      : \"\",\n      \"label\": \"prometheus\",\n      \"name\": \"prometheus\",\n\
      \      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\",\n\
      \      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\": {\n    \"list\"\
      : []\n  },\n  \"description\": \"Knative Serving - Reconciler\",\n  \"editable\"\
      : false,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"\
      links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"\
      gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n   \
      \     \"y\": 0\n      },\n      \"id\": 7,\n      \"panels\": [],\n      \"\
      title\": \"Aggregate\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\"\
      : {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\":\
      \ false,\n      \"datasource\": \"prometheus\",\n      \"fill\": 1,\n      \"\
      gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 0,\n   \
      \     \"y\": 1\n      },\n      \"id\": 10,\n      \"legend\": {\n        \"\
      alignAsTable\": false,\n        \"avg\": false,\n        \"current\": false,\n\
      \        \"hideEmpty\": true,\n        \"hideZero\": false,\n        \"max\"\
      : false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"\
      show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n\
      \      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n   \
      \   \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\"\
      : 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\"\
      : [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\"\
      : true,\n      \"targets\": [\n        {\n          \"expr\": \"sum by (reconciler)(60\
      \ * rate(controller_reconcile_count[1m]))\",\n          \"format\": \"time_series\"\
      ,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"\
      intervalFactor\": 1,\n          \"legendFormat\": \"{{reconciler}}\",\n    \
      \      \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n  \
      \    \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Reconcile\
      \ Count (per min)\",\n      \"tooltip\": {\n        \"shared\": true,\n    \
      \    \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"\
      type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n       \
      \ \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n  \
      \      \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"\
      format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n\
      \          \"max\": null,\n          \"min\": null,\n          \"show\": true\n\
      \        },\n        {\n          \"format\": \"short\",\n          \"label\"\
      : null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\"\
      : null,\n          \"show\": true\n        }\n      ]\n    },\n    {\n     \
      \ \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"\
      w\": 24,\n        \"x\": 0,\n        \"y\": 10\n      },\n      \"id\": 5,\n\
      \      \"panels\": [],\n      \"title\": \"Per Reconciler\",\n      \"type\"\
      : \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n\
      \      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\":\
      \ \"prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\":\
      \ 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 11\n      },\n \
      \     \"id\": 2,\n      \"legend\": {\n        \"alignAsTable\": false,\n  \
      \      \"avg\": false,\n        \"current\": false,\n        \"hideEmpty\":\
      \ true,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\"\
      : false,\n        \"rightSide\": false,\n        \"show\": false,\n        \"\
      total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n\
      \      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"\
      null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\"\
      : false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n  \
      \    \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n\
      \      \"targets\": [\n        {\n          \"expr\": \"sum(60 * rate(controller_reconcile_count{reconciler=\\\
      \"$reconciler\\\"}[1m]))\",\n          \"format\": \"time_series\",\n      \
      \    \"instant\": false,\n          \"interval\": \"\",\n          \"intervalFactor\"\
      : 1,\n          \"legendFormat\": \"{{reconciler}}\",\n          \"refId\":\
      \ \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\"\
      : null,\n      \"timeShift\": null,\n      \"title\": \"$reconciler Reconcile\
      \ Count (per min)\",\n      \"tooltip\": {\n        \"shared\": true,\n    \
      \    \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"\
      type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n       \
      \ \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n  \
      \      \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"\
      format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n\
      \          \"max\": null,\n          \"min\": null,\n          \"show\": true\n\
      \        },\n        {\n          \"format\": \"short\",\n          \"label\"\
      : null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\"\
      : null,\n          \"show\": true\n        }\n      ]\n    },\n    {\n     \
      \ \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n\
      \      \"dashes\": false,\n      \"datasource\": \"prometheus\",\n      \"fill\"\
      : 1,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"\
      x\": 12,\n        \"y\": 11\n      },\n      \"id\": 11,\n      \"legend\":\
      \ {\n        \"alignAsTable\": false,\n        \"avg\": false,\n        \"current\"\
      : false,\n        \"hideEmpty\": true,\n        \"hideZero\": false,\n     \
      \   \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n\
      \        \"show\": true,\n        \"total\": false,\n        \"values\": false\n\
      \      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\"\
      : [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n  \
      \    \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\"\
      ,\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\"\
      : false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n  \
      \        \"expr\": \"histogram_quantile(0.99, sum(rate(controller_reconcile_latency_bucket{reconciler=\\\
      \"$reconciler\\\"}[1m])) by (le))\",\n          \"format\": \"time_series\"\
      ,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"\
      intervalFactor\": 1,\n          \"legendFormat\": \"99th\",\n          \"refId\"\
      : \"A\"\n        },\n        {\n          \"expr\": \"histogram_quantile(0.90,\
      \ sum(rate(controller_reconcile_latency_bucket{reconciler=\\\"$reconciler\\\"\
      }[1m])) by (le))\",\n          \"format\": \"time_series\",\n          \"intervalFactor\"\
      : 1,\n          \"legendFormat\": \"90th\",\n          \"refId\": \"B\"\n  \
      \      },\n        {\n          \"expr\": \"histogram_quantile(0.50, sum(rate(controller_reconcile_latency_bucket{reconciler=\\\
      \"$reconciler\\\"}[1m])) by (le))\",\n          \"format\": \"time_series\"\
      ,\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"50th\",\n\
      \          \"refId\": \"C\"\n        }\n      ],\n      \"thresholds\": [],\n\
      \      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"\
      $reconciler Reconcile Latency Percentiles\",\n      \"tooltip\": {\n       \
      \ \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\
      \n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\"\
      : null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\"\
      : true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n \
      \         \"format\": \"short\",\n          \"label\": null,\n          \"logBase\"\
      : 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\"\
      : true\n        },\n        {\n          \"format\": \"short\",\n          \"\
      label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n      \
      \    \"min\": null,\n          \"show\": true\n        }\n      ]\n    },\n\
      \    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n\
      \        \"w\": 24,\n        \"x\": 0,\n        \"y\": 20\n      },\n      \"\
      id\": 9,\n      \"panels\": [],\n      \"title\": \"Per Reconciler & Key\",\n\
      \      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"\
      bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"\
      datasource\": \"prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n  \
      \      \"h\": 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 21\n\
      \      },\n      \"id\": 12,\n      \"legend\": {\n        \"alignAsTable\"\
      : false,\n        \"avg\": false,\n        \"current\": false,\n        \"hideEmpty\"\
      : true,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\"\
      : false,\n        \"rightSide\": false,\n        \"show\": false,\n        \"\
      total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n\
      \      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"\
      null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\"\
      : false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n  \
      \    \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": true,\n\
      \      \"targets\": [\n        {\n          \"expr\": \"sum(60 * rate(controller_reconcile_count{reconciler=\\\
      \"$reconciler\\\", key=\\\"$key\\\"}[1m]))\",\n          \"format\": \"time_series\"\
      ,\n          \"instant\": false,\n          \"interval\": \"\",\n          \"\
      intervalFactor\": 1,\n          \"legendFormat\": \"{{reconciler}}\",\n    \
      \      \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n  \
      \    \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"$reconciler/$key\
      \ Reconcile Count (per min)\",\n      \"tooltip\": {\n        \"shared\": true,\n\
      \        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n  \
      \    \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n\
      \        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n\
      \        \"values\": []\n      },\n      \"yaxes\": [\n        {\n         \
      \ \"format\": \"short\",\n          \"label\": null,\n          \"logBase\"\
      : 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\"\
      : true\n        },\n        {\n          \"format\": \"short\",\n          \"\
      label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n      \
      \    \"min\": null,\n          \"show\": true\n        }\n      ]\n    },\n\
      \    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\"\
      : 10,\n      \"dashes\": false,\n      \"datasource\": \"prometheus\",\n   \
      \   \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n\
      \        \"x\": 12,\n        \"y\": 21\n      },\n      \"id\": 13,\n      \"\
      legend\": {\n        \"alignAsTable\": false,\n        \"avg\": false,\n   \
      \     \"current\": false,\n        \"hideEmpty\": true,\n        \"hideZero\"\
      : false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\"\
      : false,\n        \"show\": true,\n        \"total\": false,\n        \"values\"\
      : false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"\
      links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\": false,\n\
      \      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"\
      flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"\
      stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n      \
      \  {\n          \"expr\": \"histogram_quantile(0.99, sum(rate(controller_reconcile_latency_bucket{reconciler=\\\
      \"$reconciler\\\", key=\\\"$key\\\"}[1m])) by (le))\",\n          \"format\"\
      : \"time_series\",\n          \"instant\": false,\n          \"interval\": \"\
      \",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"99th\"\
      ,\n          \"refId\": \"A\"\n        },\n        {\n          \"expr\": \"\
      histogram_quantile(0.90, sum(rate(controller_reconcile_latency_bucket{reconciler=\\\
      \"$reconciler\\\", key=\\\"$key\\\"}[1m])) by (le))\",\n          \"format\"\
      : \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\"\
      : \"90th\",\n          \"refId\": \"B\"\n        },\n        {\n          \"\
      expr\": \"histogram_quantile(0.50, sum(rate(controller_reconcile_latency_bucket{reconciler=\\\
      \"$reconciler\\\", key=\\\"$key\\\"}[1m])) by (le))\",\n          \"format\"\
      : \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\"\
      : \"50th\",\n          \"refId\": \"C\"\n        }\n      ],\n      \"thresholds\"\
      : [],\n      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\"\
      : \"$reconciler/$key Reconcile Latency Percentiles\",\n      \"tooltip\": {\n\
      \        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"\
      individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n   \
      \     \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n\
      \        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\"\
      : [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n\
      \          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n\
      \          \"show\": true\n        },\n        {\n          \"format\": \"short\"\
      ,\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\"\
      : null,\n          \"min\": null,\n          \"show\": true\n        }\n   \
      \   ]\n    }\n  ],\n  \"refresh\": \"5s\",\n  \"schemaVersion\": 16,\n  \"style\"\
      : \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n\
      \        \"allValue\": null,\n        \"current\": {},\n        \"datasource\"\
      : \"prometheus\",\n        \"hide\": 0,\n        \"includeAll\": false,\n  \
      \      \"label\": \"Reconciler\",\n        \"multi\": false,\n        \"name\"\
      : \"reconciler\",\n        \"options\": [],\n        \"query\": \"label_values(controller_reconcile_count,\
      \ reconciler)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n      \
      \  \"sort\": 0,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n\
      \        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\"\
      : false\n      },\n      {\n        \"allValue\": null,\n        \"current\"\
      : {},\n        \"datasource\": \"prometheus\",\n        \"hide\": 0,\n     \
      \   \"includeAll\": false,\n        \"label\": \"Key\",\n        \"multi\":\
      \ false,\n        \"name\": \"key\",\n        \"options\": [],\n        \"query\"\
      : \"label_values(controller_reconcile_count{reconciler=\\\"$reconciler\\\"},\
      \ key)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\"\
      : 1,\n        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\"\
      : \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n\
      \    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\
      \n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n \
      \     \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\"\
      ,\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"\
      time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\"\
      ,\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\
      \n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Knative Serving - Reconciler\"\
      ,\n  \"uid\": \"j0oFdEYiz\",\n  \"version\": 10\n}\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: grafana-dashboard-definition-knative-reconciler
    namespace: knative-monitoring
- apiVersion: v1
  data:
    scaling-dashboard.json: "{  \n   \"__inputs\":[  \n      {  \n         \"name\"\
      :\"prometheus\",\n         \"label\":\"prometheus\",\n         \"description\"\
      :\"\",\n         \"type\":\"datasource\",\n         \"pluginId\":\"prometheus\"\
      ,\n         \"pluginName\":\"Prometheus\"\n      }\n   ],\n   \"__requires\"\
      :[  \n      {  \n         \"type\":\"grafana\",\n         \"id\":\"grafana\"\
      ,\n         \"name\":\"Grafana\",\n         \"version\":\"5.0.3\"\n      },\n\
      \      {  \n         \"id\":\"graph\",\n         \"name\":\"Graph\",\n     \
      \    \"type\":\"panel\",\n         \"version\":\"5.0.0\"\n      },\n      {\
      \  \n         \"type\":\"datasource\",\n         \"id\":\"prometheus\",\n  \
      \       \"name\":\"Prometheus\",\n         \"version\":\"5.0.0\"\n      }\n\
      \   ],\n   \"annotations\":{  \n      \"list\":[  \n         {  \n         \
      \   \"builtIn\":1,\n            \"datasource\":\"-- Grafana --\",\n        \
      \    \"enable\":true,\n            \"hide\":true,\n            \"iconColor\"\
      :\"rgba(0, 211, 255, 1)\",\n            \"name\":\"Annotations & Alerts\",\n\
      \            \"type\":\"dashboard\"\n         }\n      ]\n   },\n   \"description\"\
      :\"Knative Serving - Scaling Debugging\",\n   \"editable\":false,\n   \"gnetId\"\
      :null,\n   \"graphTooltip\":0,\n   \"id\":null,\n   \"iteration\":1527886043818,\n\
      \   \"links\":[  \n\n   ],\n   \"panels\":[  \n      {  \n\n         \"collapsed\"\
      :true,\n         \"gridPos\":{  \n            \"h\":1,\n            \"w\":24,\n\
      \            \"x\":0,\n            \"y\":0\n         },\n         \"id\":14,\n\
      \         \"panels\":[  \n            {  \n               \"aliasColors\":{\
      \  \n\n               },\n               \"bars\":false,\n               \"\
      dashLength\":10,\n               \"dashes\":false,\n               \"datasource\"\
      :\"prometheus\",\n               \"fill\":1,\n               \"gridPos\":{ \
      \ \n                  \"h\":11,\n                  \"w\":24,\n             \
      \     \"x\":0,\n                  \"y\":1\n               },\n             \
      \  \"id\":2,\n               \"legend\":{  \n                  \"avg\":false,\n\
      \                  \"current\":false,\n                  \"max\":false,\n  \
      \                \"min\":false,\n                  \"show\":true,\n        \
      \          \"total\":false,\n                  \"values\":false\n          \
      \     },\n               \"lines\":true,\n               \"linewidth\":1,\n\
      \               \"links\":[  \n\n               ],\n               \"nullPointMode\"\
      :\"null\",\n               \"percentage\":false,\n               \"pointradius\"\
      :5,\n               \"points\":false,\n               \"renderer\":\"flot\"\
      ,\n               \"seriesOverrides\":[  \n\n               ],\n           \
      \    \"spaceLength\":10,\n               \"stack\":false,\n               \"\
      steppedLine\":true,\n               \"targets\":[  \n                  {  \n\
      \                     \"expr\":\"sum(autoscaler_actual_pods{namespace_name=\\\
      \"$namespace\\\", configuration_name=\\\"$configuration\\\", revision_name=\\\
      \"$revision\\\"})\",\n                     \"format\":\"time_series\",\n   \
      \                  \"interval\":\"1s\",\n                     \"intervalFactor\"\
      :1,\n                     \"legendFormat\":\"Actual Pods\",\n              \
      \       \"refId\":\"A\"\n                  },\n                  {  \n     \
      \                \"expr\":\"sum(autoscaler_requested_pods{namespace_name=\\\"\
      $namespace\\\", configuration_name=\\\"$configuration\\\", revision_name=\\\"\
      $revision\\\"})\",\n                     \"format\":\"time_series\",\n     \
      \                \"interval\":\"1s\",\n                     \"intervalFactor\"\
      :1,\n                     \"legendFormat\":\"Requested Pods\",\n           \
      \          \"refId\":\"C\"\n                  }\n               ],\n       \
      \        \"thresholds\":[  \n\n               ],\n               \"timeFrom\"\
      :null,\n               \"timeShift\":null,\n               \"title\":\"Revision\
      \ Pod Counts\",\n               \"tooltip\":{  \n                  \"shared\"\
      :true,\n                  \"sort\":0,\n                  \"value_type\":\"individual\"\
      \n               },\n               \"type\":\"graph\",\n               \"xaxis\"\
      :{  \n                  \"buckets\":null,\n                  \"mode\":\"time\"\
      ,\n                  \"name\":null,\n                  \"show\":true,\n    \
      \              \"values\":[  \n\n                  ]\n               },\n  \
      \             \"yaxes\":[  \n                  {  \n                     \"\
      format\":\"short\",\n                     \"label\":null,\n                \
      \     \"logBase\":1,\n                     \"max\":null,\n                 \
      \    \"min\":null,\n                     \"show\":true\n                  },\n\
      \                  {  \n                     \"decimals\":null,\n          \
      \           \"format\":\"short\",\n                     \"label\":\"Concurrency\"\
      ,\n                     \"logBase\":1,\n                     \"max\":\"1\",\n\
      \                     \"min\":null,\n                     \"show\":false\n \
      \                 }\n               ]\n            }\n         ],\n        \
      \ \"title\":\"Revision Pod Counts\",\n         \"type\":\"row\"\n      },\n\
      \      {  \n         \"collapsed\":true,\n         \"gridPos\":{  \n       \
      \     \"h\":1,\n            \"w\":24,\n            \"x\":0,\n            \"\
      y\":1\n         },\n         \"id\":18,\n         \"panels\":[  \n         \
      \   {  \n               \"aliasColors\":{  \n\n               },\n         \
      \      \"bars\":false,\n               \"dashLength\":10,\n               \"\
      dashes\":false,\n               \"datasource\":\"prometheus\",\n           \
      \    \"fill\":1,\n               \"gridPos\":{  \n                  \"h\":9,\n\
      \                  \"w\":12,\n                  \"x\":0,\n                 \
      \ \"y\":13\n               },\n               \"id\":4,\n               \"legend\"\
      :{  \n                  \"avg\":false,\n                  \"current\":false,\n\
      \                  \"max\":false,\n                  \"min\":false,\n      \
      \            \"show\":true,\n                  \"total\":false,\n          \
      \        \"values\":false\n               },\n               \"lines\":true,\n\
      \               \"linewidth\":1,\n               \"links\":[  \n\n         \
      \      ],\n               \"nullPointMode\":\"null\",\n               \"percentage\"\
      :false,\n               \"pointradius\":5,\n               \"points\":false,\n\
      \               \"renderer\":\"flot\",\n               \"seriesOverrides\":[\
      \  \n\n               ],\n               \"spaceLength\":10,\n             \
      \  \"stack\":false,\n               \"steppedLine\":false,\n               \"\
      targets\":[  \n                  {  \n                     \"expr\":\"sum(kube_pod_container_resource_requests_cpu_cores{namespace=\\\
      \"$namespace\\\", pod=~\\\"$revision-deployment-.*\\\"})\",\n              \
      \       \"format\":\"time_series\",\n                     \"interval\":\"\"\
      ,\n                     \"intervalFactor\":1,\n                     \"legendFormat\"\
      :\"Cores requested\",\n                     \"refId\":\"A\"\n              \
      \    },\n                  {  \n                     \"expr\":\"sum(rate(container_cpu_usage_seconds_total{namespace=\\\
      \"$namespace\\\", pod_name=~\\\"$revision-deployment-.*\\\"}[1m]))\",\n    \
      \                 \"format\":\"time_series\",\n                     \"intervalFactor\"\
      :1,\n                     \"legendFormat\":\"Cores used\",\n               \
      \      \"refId\":\"B\"\n                  },\n                  {  \n      \
      \               \"expr\":\"sum(kube_pod_container_resource_limits_cpu_cores{namespace=\\\
      \"$namespace\\\", pod=~\\\"$revision-deployment-.*\\\"})\",\n              \
      \       \"format\":\"time_series\",\n                     \"intervalFactor\"\
      :1,\n                     \"legendFormat\":\"Core limit\",\n               \
      \      \"refId\":\"C\"\n                  }\n               ],\n           \
      \    \"thresholds\":[  \n\n               ],\n               \"timeFrom\":null,\n\
      \               \"timeShift\":null,\n               \"title\":\"Revision CPU\
      \ Usage\",\n               \"tooltip\":{  \n                  \"shared\":true,\n\
      \                  \"sort\":2,\n                  \"value_type\":\"individual\"\
      \n               },\n               \"type\":\"graph\",\n               \"xaxis\"\
      :{  \n                  \"buckets\":null,\n                  \"mode\":\"time\"\
      ,\n                  \"name\":null,\n                  \"show\":true,\n    \
      \              \"values\":[  \n\n                  ]\n               },\n  \
      \             \"yaxes\":[  \n                  {  \n                     \"\
      decimals\":null,\n                     \"format\":\"short\",\n             \
      \        \"label\":null,\n                     \"logBase\":1,\n            \
      \         \"max\":null,\n                     \"min\":null,\n              \
      \       \"show\":true\n                  },\n                  {  \n       \
      \              \"format\":\"short\",\n                     \"label\":null,\n\
      \                     \"logBase\":1,\n                     \"max\":null,\n \
      \                    \"min\":null,\n                     \"show\":false\n  \
      \                }\n               ]\n            },\n            {  \n    \
      \           \"aliasColors\":{  \n\n               },\n               \"bars\"\
      :false,\n               \"dashLength\":10,\n               \"dashes\":false,\n\
      \               \"datasource\":\"prometheus\",\n               \"fill\":1,\n\
      \               \"gridPos\":{  \n                  \"h\":9,\n              \
      \    \"w\":12,\n                  \"x\":12,\n                  \"y\":13\n  \
      \             },\n               \"id\":6,\n               \"legend\":{  \n\
      \                  \"avg\":false,\n                  \"current\":false,\n  \
      \                \"max\":false,\n                  \"min\":false,\n        \
      \          \"show\":true,\n                  \"total\":false,\n            \
      \      \"values\":false\n               },\n               \"lines\":true,\n\
      \               \"linewidth\":1,\n               \"links\":[  \n\n         \
      \      ],\n               \"nullPointMode\":\"null\",\n               \"percentage\"\
      :false,\n               \"pointradius\":5,\n               \"points\":false,\n\
      \               \"renderer\":\"flot\",\n               \"seriesOverrides\":[\
      \  \n\n               ],\n               \"spaceLength\":10,\n             \
      \  \"stack\":false,\n               \"steppedLine\":false,\n               \"\
      targets\":[  \n                  {  \n                     \"expr\":\"sum(kube_pod_container_resource_requests_memory_bytes{namespace=\\\
      \"$namespace\\\", pod=~\\\"$revision-deployment-.*\\\"})\",\n              \
      \       \"format\":\"time_series\",\n                     \"interval\":\"\"\
      ,\n                     \"intervalFactor\":1,\n                     \"legendFormat\"\
      :\"Memory requested\",\n                     \"refId\":\"A\"\n             \
      \     },\n                  {  \n                     \"expr\":\"sum(container_memory_usage_bytes{namespace=\\\
      \"$namespace\\\", pod_name=~\\\"$revision-deployment-.*\\\"})\",\n         \
      \            \"format\":\"time_series\",\n                     \"hide\":false,\n\
      \                     \"intervalFactor\":1,\n                     \"legendFormat\"\
      :\"Memory used\",\n                     \"refId\":\"B\"\n                  },\n\
      \                  {  \n                     \"expr\":\"sum(kube_pod_container_resource_limits_memory_bytes{namespace=\\\
      \"$namespace\\\", pod=~\\\"$revision-deployment-.*\\\"})\",\n              \
      \       \"format\":\"time_series\",\n                     \"intervalFactor\"\
      :1,\n                     \"refId\":\"C\"\n                  }\n           \
      \    ],\n               \"thresholds\":[  \n\n               ],\n          \
      \     \"timeFrom\":null,\n               \"timeShift\":null,\n             \
      \  \"title\":\"Pod Memory Usage\",\n               \"tooltip\":{  \n       \
      \           \"shared\":true,\n                  \"sort\":2,\n              \
      \    \"value_type\":\"individual\"\n               },\n               \"type\"\
      :\"graph\",\n               \"xaxis\":{  \n                  \"buckets\":null,\n\
      \                  \"mode\":\"time\",\n                  \"name\":null,\n  \
      \                \"show\":true,\n                  \"values\":[  \n\n      \
      \            ]\n               },\n               \"yaxes\":[  \n          \
      \        {  \n                     \"format\":\"decbytes\",\n              \
      \       \"label\":null,\n                     \"logBase\":1,\n             \
      \        \"max\":null,\n                     \"min\":null,\n               \
      \      \"show\":true\n                  },\n                  {  \n        \
      \             \"format\":\"short\",\n                     \"label\":null,\n\
      \                     \"logBase\":1,\n                     \"max\":null,\n \
      \                    \"min\":null,\n                     \"show\":false\n  \
      \                }\n               ]\n            }\n         ],\n         \"\
      title\":\"Resource Usages\",\n         \"type\":\"row\"\n      },\n      { \
      \ \n         \"collapsed\":true,\n         \"gridPos\":{  \n            \"h\"\
      :1,\n            \"w\":24,\n            \"x\":0,\n            \"y\":2\n    \
      \     },\n         \"id\":16,\n         \"panels\":[  \n            {  \n  \
      \             \"aliasColors\":{  \n\n               },\n               \"bars\"\
      :false,\n               \"dashLength\":10,\n               \"dashes\":false,\n\
      \               \"datasource\":\"prometheus\",\n               \"fill\":1,\n\
      \               \"gridPos\":{  \n                  \"h\":10,\n             \
      \     \"w\":24,\n                  \"x\":0,\n                  \"y\":3\n   \
      \            },\n               \"id\":10,\n               \"legend\":{  \n\
      \                  \"avg\":false,\n                  \"current\":false,\n  \
      \                \"max\":false,\n                  \"min\":false,\n        \
      \          \"show\":true,\n                  \"total\":false,\n            \
      \      \"values\":false\n               },\n               \"lines\":true,\n\
      \               \"linewidth\":1,\n               \"links\":[  \n\n         \
      \      ],\n               \"nullPointMode\":\"null\",\n               \"percentage\"\
      :false,\n               \"pointradius\":5,\n               \"points\":false,\n\
      \               \"renderer\":\"flot\",\n               \"seriesOverrides\":[\
      \  \n\n               ],\n               \"spaceLength\":10,\n             \
      \  \"stack\":false,\n               \"steppedLine\":true,\n               \"\
      targets\":[  \n                  {  \n                     \"expr\":\"sum(autoscaler_desired_pods{namespace_name=\\\
      \"$namespace\\\", configuration_name=\\\"$configuration\\\", revision_name=\\\
      \"$revision\\\"}) \",\n                     \"format\":\"time_series\",\n  \
      \                   \"intervalFactor\":1,\n                     \"legendFormat\"\
      :\"Desired Pods\",\n                     \"refId\":\"A\"\n                 \
      \ },\n                  {  \n                     \"expr\":\"sum(autoscaler_observed_pods{namespace_name=\\\
      \"$namespace\\\", configuration_name=\\\"$configuration\\\", revision_name=\\\
      \"$revision\\\"})\",\n                     \"format\":\"time_series\",\n   \
      \                  \"intervalFactor\":1,\n                     \"legendFormat\"\
      :\"Observed Pods\",\n                     \"refId\":\"B\"\n                \
      \  }\n               ],\n               \"thresholds\":[  \n\n             \
      \  ],\n               \"timeFrom\":null,\n               \"timeShift\":null,\n\
      \               \"title\":\"Pod Counts\",\n               \"tooltip\":{  \n\
      \                  \"shared\":true,\n                  \"sort\":0,\n       \
      \           \"value_type\":\"individual\"\n               },\n             \
      \  \"type\":\"graph\",\n               \"xaxis\":{  \n                  \"buckets\"\
      :null,\n                  \"mode\":\"time\",\n                  \"name\":null,\n\
      \                  \"show\":true,\n                  \"values\":[  \n\n    \
      \              ]\n               },\n               \"yaxes\":[  \n        \
      \          {  \n                     \"format\":\"short\",\n               \
      \      \"label\":null,\n                     \"logBase\":1,\n              \
      \       \"max\":null,\n                     \"min\":null,\n                \
      \     \"show\":true\n                  },\n                  {  \n         \
      \            \"format\":\"short\",\n                     \"label\":null,\n \
      \                    \"logBase\":1,\n                     \"max\":null,\n  \
      \                   \"min\":null,\n                     \"show\":true\n    \
      \              }\n               ]\n            },\n            {  \n      \
      \         \"aliasColors\":{  \n\n               },\n               \"bars\"\
      :false,\n               \"dashLength\":10,\n               \"dashes\":false,\n\
      \               \"datasource\":\"prometheus\",\n               \"fill\":1,\n\
      \               \"gridPos\":{  \n                  \"h\":9,\n              \
      \    \"w\":24,\n                  \"x\":0,\n                  \"y\":13\n   \
      \            },\n               \"id\":8,\n               \"legend\":{  \n \
      \                 \"avg\":false,\n                  \"current\":false,\n   \
      \               \"max\":false,\n                  \"min\":false,\n         \
      \         \"show\":true,\n                  \"total\":false,\n             \
      \     \"values\":false\n               },\n               \"lines\":true,\n\
      \               \"linewidth\":1,\n               \"links\":[  \n\n         \
      \      ],\n               \"nullPointMode\":\"null\",\n               \"percentage\"\
      :false,\n               \"pointradius\":5,\n               \"points\":false,\n\
      \               \"renderer\":\"flot\",\n               \"seriesOverrides\":[\
      \  \n                  {  \n                     \"alias\":\"Panic Mode\",\n\
      \                     \"color\":\"#ea6460\",\n                     \"dashes\"\
      :true,\n                     \"fill\":2,\n                     \"linewidth\"\
      :2,\n                     \"steppedLine\":true,\n                     \"yaxis\"\
      :2\n                  },\n                  {  \n                     \"alias\"\
      :\"Target Concurrency Per Pod\",\n                     \"color\":\"#0a50a1\"\
      ,\n                     \"dashes\":true,\n                     \"steppedLine\"\
      :false\n                  }\n               ],\n               \"spaceLength\"\
      :10,\n               \"stack\":false,\n               \"steppedLine\":true,\n\
      \               \"targets\":[  \n                  {  \n                   \
      \  \"expr\":\"sum(autoscaler_stable_request_concurrency{namespace_name=\\\"\
      $namespace\\\", configuration_name=\\\"$configuration\\\", revision_name=\\\"\
      $revision\\\"})\",\n                     \"format\":\"time_series\",\n     \
      \                \"interval\":\"1s\",\n                     \"intervalFactor\"\
      :1,\n                     \"legendFormat\":\"60 Second Average Concurrency\"\
      ,\n                     \"refId\":\"A\"\n                  },\n            \
      \      {  \n                     \"expr\":\"sum(autoscaler_panic_request_concurrency{namespace_name=\\\
      \"$namespace\\\", configuration_name=\\\"$configuration\\\", revision_name=\\\
      \"$revision\\\"})\",\n                     \"format\":\"time_series\",\n   \
      \                  \"interval\":\"1s\",\n                     \"intervalFactor\"\
      :1,\n                     \"legendFormat\":\"6 Second Average Panic Concurrency\"\
      ,\n                     \"refId\":\"B\"\n                  },\n            \
      \      {  \n                     \"expr\":\"sum(autoscaler_target_concurrency_per_pod{namespace_name=\\\
      \"$namespace\\\", configuration_name=\\\"$configuration\\\", revision_name=\\\
      \"$revision\\\"})\",\n                     \"format\":\"time_series\",\n   \
      \                  \"intervalFactor\":1,\n                     \"legendFormat\"\
      :\"60 Second Target Concurrency\",\n                     \"refId\":\"C\"\n \
      \                 }\n               ],\n               \"thresholds\":[  \n\n\
      \               ],\n               \"timeFrom\":null,\n               \"timeShift\"\
      :null,\n               \"title\":\"Observed Concurrency\",\n               \"\
      tooltip\":{  \n                  \"shared\":true,\n                  \"sort\"\
      :0,\n                  \"value_type\":\"individual\"\n               },\n  \
      \             \"type\":\"graph\",\n               \"xaxis\":{  \n          \
      \        \"buckets\":null,\n                  \"mode\":\"time\",\n         \
      \         \"name\":null,\n                  \"show\":true,\n               \
      \   \"values\":[  \n\n                  ]\n               },\n             \
      \  \"yaxes\":[  \n                  {  \n                     \"format\":\"\
      short\",\n                     \"label\":\"\",\n                     \"logBase\"\
      :1,\n                     \"max\":null,\n                     \"min\":null,\n\
      \                     \"show\":true\n                  },\n                \
      \  {  \n                     \"format\":\"short\",\n                     \"\
      label\":\"\",\n                     \"logBase\":1,\n                     \"\
      max\":null,\n                     \"min\":null,\n                     \"show\"\
      :false\n                  }\n               ]\n            },\n            {\
      \  \n               \"aliasColors\":{  \n\n               },\n             \
      \  \"bars\":false,\n               \"dashLength\":10,\n               \"dashes\"\
      :false,\n               \"datasource\":\"prometheus\",\n               \"decimals\"\
      :null,\n               \"fill\":1,\n               \"gridPos\":{  \n       \
      \           \"h\":9,\n                  \"w\":24,\n                  \"x\":0,\n\
      \                  \"y\":22\n               },\n               \"id\":12,\n\
      \               \"legend\":{  \n                  \"avg\":false,\n         \
      \         \"current\":false,\n                  \"hideZero\":false,\n      \
      \            \"max\":false,\n                  \"min\":false,\n            \
      \      \"show\":false,\n                  \"total\":false,\n               \
      \   \"values\":false\n               },\n               \"lines\":true,\n  \
      \             \"linewidth\":1,\n               \"links\":[  \n\n           \
      \    ],\n               \"nullPointMode\":\"null\",\n               \"percentage\"\
      :false,\n               \"pointradius\":5,\n               \"points\":false,\n\
      \               \"renderer\":\"flot\",\n               \"seriesOverrides\":[\
      \  \n                  {  \n                     \"alias\":\"Panic Mode\",\n\
      \                     \"color\":\"#e24d42\",\n                     \"linewidth\"\
      :2,\n                     \"yaxis\":2\n                  }\n               ],\n\
      \               \"spaceLength\":10,\n               \"stack\":false,\n     \
      \          \"steppedLine\":true,\n               \"targets\":[  \n         \
      \         {  \n                     \"expr\":\"sum(autoscaler_panic_mode{namespace_name=\\\
      \"$namespace\\\", configuration_name=\\\"$configuration\\\", revision_name=\\\
      \"$revision\\\"} )\",\n                     \"format\":\"time_series\",\n  \
      \                   \"intervalFactor\":1,\n                     \"legendFormat\"\
      :\"Panic Mode\",\n                     \"refId\":\"A\"\n                  }\n\
      \               ],\n               \"thresholds\":[  \n\n               ],\n\
      \               \"timeFrom\":null,\n               \"timeShift\":null,\n   \
      \            \"title\":\"Panic Mode\",\n               \"tooltip\":{  \n   \
      \               \"shared\":true,\n                  \"sort\":0,\n          \
      \        \"value_type\":\"individual\"\n               },\n               \"\
      type\":\"graph\",\n               \"xaxis\":{  \n                  \"buckets\"\
      :null,\n                  \"mode\":\"time\",\n                  \"name\":null,\n\
      \                  \"show\":true,\n                  \"values\":[  \n\n    \
      \              ]\n               },\n               \"yaxes\":[  \n        \
      \          {  \n                     \"format\":\"short\",\n               \
      \      \"label\":null,\n                     \"logBase\":1,\n              \
      \       \"max\":\"1.0\",\n                     \"min\":\"0\",\n            \
      \         \"show\":true\n                  },\n                  {  \n     \
      \                \"format\":\"short\",\n                     \"label\":null,\n\
      \                     \"logBase\":1,\n                     \"max\":null,\n \
      \                    \"min\":null,\n                     \"show\":false\n  \
      \                }\n               ]\n            }\n         ],\n         \"\
      title\":\"Autoscaler Metrics\",\n         \"type\":\"row\"\n      },\n     \
      \ {  \n         \"collapsed\":true,\n         \"gridPos\":{  \n            \"\
      h\":1,\n            \"w\":24,\n            \"x\":0,\n            \"y\":3\n \
      \        },\n         \"id\":20,\n         \"panels\":[  \n                \
      \     {  \n                        \"aliasColors\":{  \n\n                 \
      \       },\n                        \"bars\":false,\n                      \
      \  \"dashLength\":10,\n                        \"dashes\":false,\n         \
      \               \"datasource\":\"prometheus\",\n                        \"fill\"\
      :1,\n                        \"gridPos\":{  \n                           \"\
      h\":10,\n                           \"w\":24,\n                           \"\
      x\":0,\n                           \"y\":12\n                        },\n  \
      \                      \"id\":24,\n                        \"legend\":{  \n\
      \                           \"avg\":false,\n                           \"current\"\
      :false,\n                           \"max\":false,\n                       \
      \    \"min\":false,\n                           \"show\":true,\n           \
      \                \"total\":false,\n                           \"values\":false\n\
      \                        },\n                        \"lines\":true,\n     \
      \                   \"linewidth\":1,\n                        \"links\":[  \n\
      \n                        ],\n                        \"nullPointMode\":\"null\"\
      ,\n                        \"percentage\":false,\n                        \"\
      pointradius\":5,\n                        \"points\":false,\n              \
      \          \"renderer\":\"flot\",\n                        \"seriesOverrides\"\
      :[  \n\n                        ],\n                        \"spaceLength\"\
      :10,\n                        \"stack\":false,\n                        \"steppedLine\"\
      :false,\n                        \"targets\":[  \n                         \
      \  {  \n                              \"expr\":\"round(sum(increase(activator_request_count{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\"}[1m])) by (response_code))\",\n                            \
      \  \"format\":\"time_series\",\n                              \"intervalFactor\"\
      :1,\n                              \"legendFormat\":\"{{ response_code }}\"\
      ,\n                              \"refId\":\"A\"\n                         \
      \  }\n                        ],\n                        \"thresholds\":[ \
      \ \n\n                        ],\n                        \"timeFrom\":null,\n\
      \                        \"timeShift\":null,\n                        \"title\"\
      :\"Request Count in last minute by Response Code\",\n                      \
      \  \"tooltip\":{  \n                           \"shared\":true,\n          \
      \                 \"sort\":0,\n                           \"value_type\":\"\
      individual\"\n                        },\n                        \"type\":\"\
      graph\",\n                        \"xaxis\":{  \n                          \
      \ \"buckets\":null,\n                           \"mode\":\"time\",\n       \
      \                    \"name\":null,\n                           \"show\":true,\n\
      \                           \"values\":[  \n\n                           ]\n\
      \                        },\n                        \"yaxes\":[  \n       \
      \                    {  \n                              \"format\":\"none\"\
      ,\n                              \"label\":null,\n                         \
      \     \"logBase\":1,\n                              \"max\":null,\n        \
      \                      \"min\":\"0\",\n                              \"show\"\
      :true\n                           },\n                           {  \n     \
      \                         \"format\":\"short\",\n                          \
      \    \"label\":null,\n                              \"logBase\":1,\n       \
      \                       \"max\":null,\n                              \"min\"\
      :null,\n                              \"show\":true\n                      \
      \     }\n                        ]\n                     },\n              \
      \       {  \n                        \"aliasColors\":{  \n\n               \
      \         },\n                        \"bars\":false,\n                    \
      \    \"dashLength\":10,\n                        \"dashes\":false,\n       \
      \                 \"datasource\":\"prometheus\",\n                        \"\
      fill\":1,\n                        \"gridPos\":{  \n                       \
      \    \"h\":10,\n                           \"w\":24,\n                     \
      \      \"x\":0,\n                           \"y\":32\n                     \
      \   },\n                        \"id\":28,\n                        \"legend\"\
      :{  \n                           \"avg\":true,\n                           \"\
      current\":false,\n                           \"max\":false,\n              \
      \             \"min\":false,\n                           \"show\":true,\n  \
      \                         \"total\":false,\n                           \"values\"\
      :true\n                        },\n                        \"lines\":true,\n\
      \                        \"linewidth\":1,\n                        \"links\"\
      :[  \n\n                        ],\n                        \"nullPointMode\"\
      :\"null\",\n                        \"percentage\":false,\n                \
      \        \"pointradius\":5,\n                        \"points\":false,\n   \
      \                     \"renderer\":\"flot\",\n                        \"seriesOverrides\"\
      :[  \n\n                        ],\n                        \"spaceLength\"\
      :10,\n                        \"stack\":false,\n                        \"steppedLine\"\
      :false,\n                        \"targets\":[  \n                         \
      \  {  \n                              \"expr\":\"label_replace(histogram_quantile(0.50,\
      \ sum(rate(activator_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \"}[1m])) by (revision_name, le)), \\\"revision_name\\\", \\\"$2\\\", \\\"revision_name\\\
      \", \\\"$configuration(-+)(.*)\\\")\",\n                              \"format\"\
      :\"time_series\",\n                              \"intervalFactor\":1,\n   \
      \                           \"legendFormat\":\"{{ revision_name }} (p50)\",\n\
      \                              \"refId\":\"A\"\n                           },\n\
      \                           {  \n                              \"expr\":\"label_replace(histogram_quantile(0.90,\
      \ sum(rate(activator_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \"}[1m])) by (revision_name, le)), \\\"revision_name\\\", \\\"$2\\\", \\\"revision_name\\\
      \", \\\"$configuration(-+)(.*)\\\")\",\n                              \"format\"\
      :\"time_series\",\n                              \"intervalFactor\":1,\n   \
      \                           \"legendFormat\":\"{{ revision_name }} (p90)\",\n\
      \                              \"refId\":\"B\"\n                           },\n\
      \                           {  \n                              \"expr\":\"label_replace(histogram_quantile(0.95,\
      \ sum(rate(activator_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \"}[1m])) by (revision_name, le)), \\\"revision_name\\\", \\\"$2\\\", \\\"revision_name\\\
      \", \\\"$configuration(-+)(.*)\\\")\",\n                              \"format\"\
      :\"time_series\",\n                              \"intervalFactor\":1,\n   \
      \                           \"legendFormat\":\"{{ revision_name }} (p95)\",\n\
      \                              \"refId\":\"C\"\n                           },\n\
      \                           {  \n                              \"expr\":\"label_replace(histogram_quantile(0.99,\
      \ sum(rate(activator_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \"}[1m])) by (revision_name, le)), \\\"revision_name\\\", \\\"$2\\\", \\\"revision_name\\\
      \", \\\"$configuration(-+)(.*)\\\")\",\n                              \"format\"\
      :\"time_series\",\n                              \"intervalFactor\":1,\n   \
      \                           \"legendFormat\":\"{{ revision_name }} (p99)\",\n\
      \                              \"refId\":\"D\"\n                           }\n\
      \                        ],\n                        \"thresholds\":[  \n\n\
      \                        ],\n                        \"timeFrom\":null,\n  \
      \                      \"timeShift\":null,\n                        \"title\"\
      :\"Response Time in last minute\",\n                        \"tooltip\":{  \n\
      \                           \"shared\":true,\n                           \"\
      sort\":0,\n                           \"value_type\":\"individual\"\n      \
      \                  },\n                        \"type\":\"graph\",\n       \
      \                 \"xaxis\":{  \n                           \"buckets\":null,\n\
      \                           \"mode\":\"time\",\n                           \"\
      name\":null,\n                           \"show\":true,\n                  \
      \         \"values\":[  \n\n                           ]\n                 \
      \       },\n                        \"yaxes\":[  \n                        \
      \   {  \n                              \"format\":\"ms\",\n                \
      \              \"label\":null,\n                              \"logBase\":1,\n\
      \                              \"max\":null,\n                             \
      \ \"min\":null,\n                              \"show\":true\n             \
      \              },\n                           {  \n                        \
      \      \"format\":\"short\",\n                              \"label\":null,\n\
      \                              \"logBase\":1,\n                            \
      \  \"max\":null,\n                              \"min\":null,\n            \
      \                  \"show\":true\n                           }\n           \
      \              ]\n                       }     \n         ],\n         \"title\"\
      :\"Activator Metrics\",\n         \"type\":\"row\"\n      }\n   ],\n   \"refresh\"\
      :false,\n   \"schemaVersion\":16,\n   \"style\":\"dark\",\n   \"tags\":[  \n\
      \n   ],\n   \"templating\":{  \n      \"list\":[  \n         {  \n         \
      \   \"allValue\":null,\n            \"current\":{  \n\n            },\n    \
      \        \"datasource\":\"prometheus\",\n            \"hide\":0,\n         \
      \   \"includeAll\":false,\n            \"label\":\"Namespace\",\n          \
      \  \"multi\":false,\n            \"name\":\"namespace\",\n            \"options\"\
      :[  \n\n            ],\n            \"query\":\"label_values(autoscaler_desired_pods,\
      \ namespace_name)\",\n            \"refresh\":1,\n            \"regex\":\"\"\
      ,\n            \"sort\":1,\n            \"tagValuesQuery\":\"\",\n         \
      \   \"tags\":[  \n\n            ],\n            \"tagsQuery\":\"\",\n      \
      \      \"type\":\"query\",\n            \"useTags\":false\n         },\n   \
      \      {  \n            \"allValue\":null,\n            \"current\":{  \n\n\
      \            },\n            \"datasource\":\"prometheus\",\n            \"\
      hide\":0,\n            \"includeAll\":false,\n            \"label\":\"Configuration\"\
      ,\n            \"multi\":false,\n            \"name\":\"configuration\",\n \
      \           \"options\":[  \n\n            ],\n            \"query\":\"label_values(autoscaler_desired_pods{namespace_name=\\\
      \"$namespace\\\"}, configuration_name)\",\n            \"refresh\":1,\n    \
      \        \"regex\":\"\",\n            \"sort\":1,\n            \"tagValuesQuery\"\
      :\"\",\n            \"tags\":[  \n\n            ],\n            \"tagsQuery\"\
      :\"\",\n            \"type\":\"query\",\n            \"useTags\":false\n   \
      \      },\n         {  \n            \"allValue\":null,\n            \"current\"\
      :{  \n\n            },\n            \"datasource\":\"prometheus\",\n       \
      \     \"hide\":0,\n            \"includeAll\":false,\n            \"label\"\
      :\"Revision\",\n            \"multi\":false,\n            \"name\":\"revision\"\
      ,\n            \"options\":[  \n\n            ],\n            \"query\":\"label_values(autoscaler_desired_pods{namespace_name=\\\
      \"$namespace\\\", configuration_name=\\\"$configuration\\\"}, revision_name)\"\
      ,\n            \"refresh\":1,\n            \"regex\":\"\",\n            \"sort\"\
      :2,\n            \"tagValuesQuery\":\"\",\n            \"tags\":[  \n\n    \
      \        ],\n            \"tagsQuery\":\"\",\n            \"type\":\"query\"\
      ,\n            \"useTags\":false\n         }\n      ]\n   },\n   \"time\":{\
      \  \n      \"from\":\"now-15m\",\n      \"to\":\"now\"\n   },\n   \"timepicker\"\
      :{  \n      \"refresh_intervals\":[  \n         \"5s\",\n         \"10s\",\n\
      \         \"30s\",\n         \"1m\",\n         \"5m\",\n         \"15m\",\n\
      \         \"30m\",\n         \"1h\",\n         \"2h\",\n         \"1d\"\n  \
      \    ],\n      \"time_options\":[  \n         \"5m\",\n         \"15m\",\n \
      \        \"1h\",\n         \"6h\",\n         \"12h\",\n         \"24h\",\n \
      \        \"2d\",\n         \"7d\",\n         \"30d\"\n      ]\n   },\n   \"\
      timezone\":\"\",\n   \"title\":\"Knative Serving - Scaling Debugging\",\n  \
      \ \"uid\":\"u_-9SIMiz\",\n   \"version\":2\n}\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: scaling-config
    namespace: knative-monitoring
- apiVersion: v1
  data:
    resource-dashboard.json: "{\n  \"__inputs\": [\n    {\n      \"description\":\
      \ \"\",\n      \"label\": \"prometheus\",\n      \"name\": \"prometheus\",\n\
      \      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\",\n\
      \      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\": {\n    \"list\"\
      : []\n  },\n  \"description\": \"Knative Serving - Revision CPU and Memory Usage\"\
      ,\n  \"editable\": false,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"\
      links\": [],\n  \"panels\": [\n    {\n      \"aliasColors\": {},\n      \"bars\"\
      : false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\"\
      : \"prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\":\
      \ 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 0\n      },\n  \
      \    \"id\": 2,\n      \"legend\": {\n        \"avg\": false,\n        \"current\"\
      : false,\n        \"max\": false,\n        \"min\": false,\n        \"show\"\
      : true,\n        \"total\": false,\n        \"values\": false\n      },\n  \
      \    \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n     \
      \ \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\"\
      : 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\"\
      : [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\"\
      : false,\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace=\\\
      \"$namespace\\\", pod_name=~\\\"$revision.*\\\", container_name != \\\"POD\\\
      \"}[1m])) by (container_name)\",\n          \"format\": \"time_series\",\n \
      \         \"intervalFactor\": 1,\n          \"legendFormat\": \"{{container_name}}\"\
      ,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n\
      \      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"\
      Total CPU Usage\",\n      \"tooltip\": {\n        \"shared\": true,\n      \
      \  \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"\
      type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n       \
      \ \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n  \
      \      \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"\
      format\": \"s\",\n          \"label\": null,\n          \"logBase\": 1,\n  \
      \        \"max\": null,\n          \"min\": null,\n          \"show\": true\n\
      \        },\n        {\n          \"format\": \"short\",\n          \"label\"\
      : null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\"\
      : null,\n          \"show\": false\n        }\n      ]\n    },\n    {\n    \
      \  \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n\
      \      \"dashes\": false,\n      \"datasource\": \"prometheus\",\n      \"fill\"\
      : 1,\n      \"gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"\
      x\": 12,\n        \"y\": 0\n      },\n      \"id\": 3,\n      \"legend\": {\n\
      \        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n\
      \        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n\
      \        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\"\
      : 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"percentage\"\
      : false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\"\
      : \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n  \
      \    \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n\
      \        {\n          \"expr\": \"sum(container_memory_usage_bytes{namespace=\\\
      \"$namespace\\\", pod_name=~\\\"$revision.*\\\", container_name != \\\"POD\\\
      \"}) by (container_name)\",\n          \"format\": \"time_series\",\n      \
      \    \"intervalFactor\": 1,\n          \"legendFormat\": \"{{container_name}}\"\
      ,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n\
      \      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"\
      Total Memory Usage\",\n      \"tooltip\": {\n        \"shared\": true,\n   \
      \     \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n     \
      \ \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n   \
      \     \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n\
      \        \"values\": []\n      },\n      \"yaxes\": [\n        {\n         \
      \ \"format\": \"decbytes\",\n          \"label\": null,\n          \"logBase\"\
      : 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\"\
      : true\n        },\n        {\n          \"format\": \"short\",\n          \"\
      label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n      \
      \    \"min\": null,\n          \"show\": false\n        }\n      ]\n    }\n\
      \  ],\n  \"refresh\": \"5s\",\n  \"schemaVersion\": 16,\n  \"style\": \"dark\"\
      ,\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n        \"\
      allValue\": null,\n        \"current\": {},\n        \"datasource\": \"prometheus\"\
      ,\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\":\
      \ \"Namespace\",\n        \"multi\": false,\n        \"name\": \"namespace\"\
      ,\n        \"options\": [],\n        \"query\": \"label_values(kube_pod_labels{label_serving_knative_dev_configuration=~\\\
      \".+\\\"}, namespace)\",\n        \"refresh\": 2,\n        \"regex\": \"\",\n\
      \        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tags\":\
      \ [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"\
      useTags\": false\n      },\n      {\n        \"allValue\": null,\n        \"\
      current\": {},\n        \"datasource\": \"prometheus\",\n        \"hide\": 0,\n\
      \        \"includeAll\": false,\n        \"label\": \"Configuration\",\n   \
      \     \"multi\": false,\n        \"name\": \"configuration\",\n        \"options\"\
      : [],\n        \"query\": \"label_values(kube_pod_labels{label_serving_knative_dev_configuration=~\\\
      \".+\\\", namespace=\\\"$namespace\\\"}, label_serving_knative_dev_configuration)\"\
      ,\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"sort\": 1,\n\
      \        \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\"\
      : \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n\
      \      {\n        \"allValue\": null,\n        \"current\": {},\n        \"\
      datasource\": \"prometheus\",\n        \"hide\": 0,\n        \"includeAll\"\
      : false,\n        \"label\": \"Revision\",\n        \"multi\": false,\n    \
      \    \"name\": \"revision\",\n        \"options\": [],\n        \"query\": \"\
      label_values(kube_pod_labels{label_serving_knative_dev_configuration=~\\\".+\\\
      \", namespace=\\\"$namespace\\\", label_serving_knative_dev_configuration=\\\
      \"$configuration\\\"}, label_serving_knative_dev_revision)\",\n        \"refresh\"\
      : 2,\n        \"regex\": \"\",\n        \"sort\": 2,\n        \"tagValuesQuery\"\
      : \"\",\n        \"tags\": [],\n        \"tagsQuery\": \"\",\n        \"type\"\
      : \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\":\
      \ {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\"\
      : {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\"\
      ,\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\"\
      ,\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\"\
      ,\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\"\
      ,\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\"\
      : \"\",\n  \"title\": \"Knative Serving - Revision CPU and Memory Usage\",\n\
      \  \"uid\": \"bKOoE9Wmk\",\n  \"version\": 4\n}\n"
    revision-dashboard.json: "{\n  \"__inputs\": [\n    {\n      \"description\":\
      \ \"\",\n      \"label\": \"prometheus\",\n      \"name\": \"prometheus\",\n\
      \      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\",\n\
      \      \"type\": \"datasource\"\n    }\n  ],\n  \"annotations\": {\n    \"list\"\
      : []\n  },\n  \"description\": \"Knative Serving - Revision HTTP Requests\"\
      ,\n  \"editable\": false,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"\
      links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"\
      gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n   \
      \     \"y\": 0\n      },\n      \"id\": 8,\n      \"panels\": [],\n      \"\
      title\": \"Overview (average over the selected time range)\",\n      \"type\"\
      : \"row\"\n    },\n    {\n      \"cacheTimeout\": null,\n      \"colorBackground\"\
      : false,\n      \"colorValue\": false,\n      \"colors\": [\n        \"#299c46\"\
      ,\n        \"rgba(237, 129, 40, 0.89)\",\n        \"#d44a3a\"\n      ],\n  \
      \    \"datasource\": \"prometheus\",\n      \"format\": \"ops\",\n      \"gauge\"\
      : {\n        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\"\
      : false,\n        \"thresholdLabels\": false,\n        \"thresholdMarkers\"\
      : true\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 6,\n\
      \        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 2,\n      \"interval\"\
      : null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\"\
      : [\n        {\n          \"name\": \"value to text\",\n          \"value\"\
      : 1\n        },\n        {\n          \"name\": \"range to text\",\n       \
      \   \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n     \
      \ \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\"\
      : \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n    \
      \  \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n       \
      \   \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"\
      null\"\n        }\n      ],\n      \"repeat\": null,\n      \"repeatDirection\"\
      : \"v\",\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189,\
      \ 0.18)\",\n        \"full\": true,\n        \"lineColor\": \"rgb(31, 120, 193)\"\
      ,\n        \"show\": true\n      },\n      \"tableColumn\": \"\",\n      \"\
      targets\": [\n        {\n          \"expr\": \"round(sum(rate(revision_request_count{namespace_name=\\\
      \"$namespace\\\", revision_name=~\\\"$revision\\\", configuration_name=~\\\"\
      $configuration\\\"}[1m])), 0.001)\",\n          \"format\": \"time_series\"\
      ,\n          \"hide\": false,\n          \"interval\": \"\",\n          \"intervalFactor\"\
      : 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\"\
      : \"\",\n      \"title\": \"Request Volume\",\n      \"type\": \"singlestat\"\
      ,\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n  \
      \        \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\":\
      \ \"null\"\n        }\n      ],\n      \"valueName\": \"avg\"\n    },\n    {\n\
      \      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"\
      colorValue\": false,\n      \"colors\": [\n        \"#d44a3a\",\n        \"\
      rgba(237, 129, 40, 0.89)\",\n        \"#299c46\"\n      ],\n      \"datasource\"\
      : \"prometheus\",\n      \"format\": \"percentunit\",\n      \"gauge\": {\n\
      \        \"maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n\
      \        \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n \
      \     },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 6,\n     \
      \   \"x\": 6,\n        \"y\": 1\n      },\n      \"id\": 4,\n      \"interval\"\
      : null,\n      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\"\
      : [\n        {\n          \"name\": \"value to text\",\n          \"value\"\
      : 1\n        },\n        {\n          \"name\": \"range to text\",\n       \
      \   \"value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n     \
      \ \"nullPointMode\": \"connected\",\n      \"nullText\": null,\n      \"postfix\"\
      : \"\",\n      \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n    \
      \  \"prefixFontSize\": \"50%\",\n      \"rangeMaps\": [\n        {\n       \
      \   \"from\": \"null\",\n          \"text\": \"N/A\",\n          \"to\": \"\
      null\"\n        }\n      ],\n      \"sparkline\": {\n        \"fillColor\":\
      \ \"rgba(31, 118, 189, 0.18)\",\n        \"full\": true,\n        \"lineColor\"\
      : \"rgb(31, 120, 193)\",\n        \"show\": true\n      },\n      \"tableColumn\"\
      : \"\",\n      \"targets\": [\n        {\n          \"expr\": \"sum(rate(revision_request_count{response_code_class!=\\\
      \"5xx\\\", namespace_name=\\\"$namespace\\\", revision_name=~\\\"$revision\\\
      \", configuration_name=~\\\"$configuration\\\"}[1m])) / sum(rate(revision_request_count{namespace_name=\\\
      \"$namespace\\\", revision_name=~\\\"$revision\\\", configuration_name=~\\\"\
      $configuration\\\"}[1m]))\",\n          \"format\": \"time_series\",\n     \
      \     \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"refId\"\
      : \"A\"\n        }\n      ],\n      \"thresholds\": \"95, 99, 99.5\",\n    \
      \  \"title\": \"Success Rate (non-5xx responses)\",\n      \"type\": \"singlestat\"\
      ,\n      \"valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n  \
      \        \"op\": \"=\",\n          \"text\": \"N/A\",\n          \"value\":\
      \ \"null\"\n        }\n      ],\n      \"valueName\": \"avg\"\n    },\n    {\n\
      \      \"cacheTimeout\": null,\n      \"colorBackground\": false,\n      \"\
      colorValue\": false,\n      \"colors\": [\n        \"#d44a3a\",\n        \"\
      rgba(237, 129, 40, 0.89)\",\n        \"#299c46\"\n      ],\n      \"datasource\"\
      : \"prometheus\",\n      \"format\": \"ops\",\n      \"gauge\": {\n        \"\
      maxValue\": 100,\n        \"minValue\": 0,\n        \"show\": false,\n     \
      \   \"thresholdLabels\": false,\n        \"thresholdMarkers\": true\n      },\n\
      \      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 6,\n        \"x\":\
      \ 12,\n        \"y\": 1\n      },\n      \"id\": 5,\n      \"interval\": null,\n\
      \      \"links\": [],\n      \"mappingType\": 1,\n      \"mappingTypes\": [\n\
      \        {\n          \"name\": \"value to text\",\n          \"value\": 1\n\
      \        },\n        {\n          \"name\": \"range to text\",\n          \"\
      value\": 2\n        }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\"\
      : \"connected\",\n      \"nullText\": null,\n      \"postfix\": \"\",\n    \
      \  \"postfixFontSize\": \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\"\
      : \"50%\",\n      \"rangeMaps\": [\n        {\n          \"from\": \"null\"\
      ,\n          \"text\": \"N/A\",\n          \"to\": \"null\"\n        }\n   \
      \   ],\n      \"sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189,\
      \ 0.18)\",\n        \"full\": true,\n        \"lineColor\": \"rgb(31, 120, 193)\"\
      ,\n        \"show\": true\n      },\n      \"tableColumn\": \"\",\n      \"\
      targets\": [\n        {\n          \"expr\": \"sum(rate(revision_request_count{response_code_class=\\\
      \"4xx\\\", namespace_name=\\\"$namespace\\\", revision_name=~\\\"$revision\\\
      \", configuration_name=~\\\"$configuration\\\"}[1m])) \",\n          \"format\"\
      : \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\"\
      : 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\"\
      : \"\",\n      \"title\": \"4xx\",\n      \"type\": \"singlestat\",\n      \"\
      valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\"\
      : \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n    \
      \    }\n      ],\n      \"valueName\": \"avg\"\n    },\n    {\n      \"cacheTimeout\"\
      : null,\n      \"colorBackground\": false,\n      \"colorValue\": false,\n \
      \     \"colors\": [\n        \"#d44a3a\",\n        \"rgba(237, 129, 40, 0.89)\"\
      ,\n        \"#299c46\"\n      ],\n      \"datasource\": \"prometheus\",\n  \
      \    \"format\": \"ops\",\n      \"gauge\": {\n        \"maxValue\": 100,\n\
      \        \"minValue\": 0,\n        \"show\": false,\n        \"thresholdLabels\"\
      : false,\n        \"thresholdMarkers\": true\n      },\n      \"gridPos\": {\n\
      \        \"h\": 4,\n        \"w\": 6,\n        \"x\": 18,\n        \"y\": 1\n\
      \      },\n      \"id\": 9,\n      \"interval\": null,\n      \"links\": [],\n\
      \      \"mappingType\": 1,\n      \"mappingTypes\": [\n        {\n         \
      \ \"name\": \"value to text\",\n          \"value\": 1\n        },\n       \
      \ {\n          \"name\": \"range to text\",\n          \"value\": 2\n      \
      \  }\n      ],\n      \"maxDataPoints\": 100,\n      \"nullPointMode\": \"connected\"\
      ,\n      \"nullText\": null,\n      \"postfix\": \"\",\n      \"postfixFontSize\"\
      : \"50%\",\n      \"prefix\": \"\",\n      \"prefixFontSize\": \"50%\",\n  \
      \    \"rangeMaps\": [\n        {\n          \"from\": \"null\",\n          \"\
      text\": \"N/A\",\n          \"to\": \"null\"\n        }\n      ],\n      \"\
      sparkline\": {\n        \"fillColor\": \"rgba(31, 118, 189, 0.18)\",\n     \
      \   \"full\": true,\n        \"lineColor\": \"rgb(31, 120, 193)\",\n       \
      \ \"show\": true\n      },\n      \"tableColumn\": \"\",\n      \"targets\"\
      : [\n        {\n          \"expr\": \"sum(rate(revision_request_count{response_code_class=\\\
      \"5xx\\\", namespace_name=\\\"$namespace\\\", revision_name=~\\\"$revision\\\
      \", configuration_name=~\\\"$configuration\\\"}[1m])) \",\n          \"format\"\
      : \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\"\
      : 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\"\
      : \"\",\n      \"title\": \"5xx\",\n      \"type\": \"singlestat\",\n      \"\
      valueFontSize\": \"80%\",\n      \"valueMaps\": [\n        {\n          \"op\"\
      : \"=\",\n          \"text\": \"N/A\",\n          \"value\": \"null\"\n    \
      \    }\n      ],\n      \"valueName\": \"avg\"\n    },\n    {\n      \"collapsed\"\
      : false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n    \
      \    \"x\": 0,\n        \"y\": 5\n      },\n      \"id\": 11,\n      \"panels\"\
      : [],\n      \"title\": \"Request Volume\",\n      \"type\": \"row\"\n    },\n\
      \    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\"\
      : 10,\n      \"dashes\": false,\n      \"datasource\": \"prometheus\",\n   \
      \   \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n\
      \        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 17,\n      \"\
      legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"\
      max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"\
      total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n\
      \      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"\
      null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\"\
      : false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n  \
      \    \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n\
      \      \"targets\": [\n        {\n          \"expr\": \"label_replace(round(sum(rate(revision_request_count{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\"}[1m])) by (revision_name), 0.001), \\\"revision_name\\\", \\\
      \"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n      \
      \    \"format\": \"time_series\",\n          \"interval\": \"\",\n         \
      \ \"intervalFactor\": 1,\n          \"legendFormat\": \"{{revision_name}}\"\
      ,\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n\
      \      \"timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"\
      Request Volume by Revision\",\n      \"tooltip\": {\n        \"shared\": true,\n\
      \        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n  \
      \    \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n\
      \        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n\
      \        \"values\": []\n      },\n      \"yaxes\": [\n        {\n         \
      \ \"format\": \"ops\",\n          \"label\": null,\n          \"logBase\": 1,\n\
      \          \"max\": null,\n          \"min\": null,\n          \"show\": true\n\
      \        },\n        {\n          \"format\": \"short\",\n          \"label\"\
      : null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\"\
      : null,\n          \"show\": true\n        }\n      ]\n    },\n    {\n     \
      \ \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n\
      \      \"dashes\": false,\n      \"datasource\": \"prometheus\",\n      \"fill\"\
      : 1,\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n       \
      \ \"x\": 12,\n        \"y\": 6\n      },\n      \"id\": 18,\n      \"legend\"\
      : {\n        \"avg\": false,\n        \"current\": false,\n        \"max\":\
      \ false,\n        \"min\": false,\n        \"show\": true,\n        \"total\"\
      : false,\n        \"values\": false\n      },\n      \"lines\": true,\n    \
      \  \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\"\
      ,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\"\
      : false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n  \
      \    \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n\
      \      \"targets\": [\n        {\n          \"expr\": \"round(sum(rate(revision_request_count{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\"}[1m])) by (response_code_class), 0.001)\",\n          \"format\"\
      : \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\"\
      : 1,\n          \"legendFormat\": \"{{ response_code_class }}\",\n         \
      \ \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"\
      timeFrom\": null,\n      \"timeShift\": null,\n      \"title\": \"Request Volume\
      \ by Response Code Class\",\n      \"tooltip\": {\n        \"shared\": true,\n\
      \        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n  \
      \    \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n\
      \        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n\
      \        \"values\": []\n      },\n      \"yaxes\": [\n        {\n         \
      \ \"format\": \"ops\",\n          \"label\": null,\n          \"logBase\": 1,\n\
      \          \"max\": null,\n          \"min\": null,\n          \"show\": true\n\
      \        },\n        {\n          \"format\": \"short\",\n          \"label\"\
      : null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\"\
      : null,\n          \"show\": true\n        }\n      ]\n    },\n    {\n     \
      \ \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"\
      w\": 24,\n        \"x\": 0,\n        \"y\": 16\n      },\n      \"id\": 15,\n\
      \      \"panels\": [],\n      \"title\": \"Response Time\",\n      \"type\"\
      : \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n\
      \      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\":\
      \ \"prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\":\
      \ 9,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 17\n      },\n \
      \     \"id\": 20,\n      \"legend\": {\n        \"alignAsTable\": false,\n \
      \       \"avg\": true,\n        \"current\": false,\n        \"hideEmpty\":\
      \ false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"\
      min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n    \
      \    \"total\": false,\n        \"values\": true\n      },\n      \"lines\"\
      : true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\"\
      : \"null\",\n      \"percentage\": false,\n      \"pointradius\": 5,\n     \
      \ \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\"\
      : [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\"\
      : false,\n      \"targets\": [\n        {\n          \"expr\": \"label_replace(histogram_quantile(0.50,\
      \ sum(rate(revision_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \"}[1m])) by (revision_name, le)), \\\"revision_name\\\", \\\"$2\\\", \\\"revision_name\\\
      \", \\\"$configuration(-+)(.*)\\\")\",\n          \"format\": \"time_series\"\
      ,\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{ revision_name\
      \ }} (p50)\",\n          \"refId\": \"A\"\n        },\n        {\n         \
      \ \"expr\": \"label_replace(histogram_quantile(0.90, sum(rate(revision_request_latencies_bucket{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\"}[1m])) by (revision_name, le)), \\\"revision_name\\\", \\\"\
      $2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n        \
      \  \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n        \
      \  \"legendFormat\": \"{{ revision_name }} (p90)\",\n          \"refId\": \"\
      B\"\n        },\n        {\n          \"expr\": \"label_replace(histogram_quantile(0.95,\
      \ sum(rate(revision_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \"}[1m])) by (revision_name, le)), \\\"revision_name\\\", \\\"$2\\\", \\\"revision_name\\\
      \", \\\"$configuration(-+)(.*)\\\")\",\n          \"format\": \"time_series\"\
      ,\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{ revision_name\
      \ }} (p95)\",\n          \"refId\": \"C\"\n        },\n        {\n         \
      \ \"expr\": \"label_replace(histogram_quantile(0.99, sum(rate(revision_request_latencies_bucket{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\"}[1m])) by (revision_name, le)), \\\"revision_name\\\", \\\"\
      $2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n        \
      \  \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n        \
      \  \"legendFormat\": \"{{ revision_name }} (p99)\",\n          \"refId\": \"\
      D\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n\
      \      \"timeShift\": null,\n      \"title\": \"Response Time by Revision\"\
      ,\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 2,\n \
      \       \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\"\
      ,\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\"\
      ,\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n\
      \      },\n      \"yaxes\": [\n        {\n          \"format\": \"s\",\n   \
      \       \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n\
      \          \"min\": null,\n          \"show\": true\n        },\n        {\n\
      \          \"format\": \"short\",\n          \"label\": null,\n          \"\
      logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n        \
      \  \"show\": false\n        }\n      ]\n    },\n    {\n      \"aliasColors\"\
      : {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\":\
      \ false,\n      \"datasource\": \"prometheus\",\n      \"fill\": 1,\n      \"\
      gridPos\": {\n        \"h\": 9,\n        \"w\": 12,\n        \"x\": 12,\n  \
      \      \"y\": 17\n      },\n      \"id\": 21,\n      \"legend\": {\n       \
      \ \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": false,\n\
      \        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\"\
      : false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"\
      show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n\
      \      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n   \
      \   \"nullPointMode\": \"null\",\n      \"percentage\": false,\n      \"pointradius\"\
      : 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\"\
      : [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\"\
      : false,\n      \"targets\": [\n        {\n          \"expr\": \"label_replace(histogram_quantile(0.50,\
      \ sum(rate(revision_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \",response_code_class=\\\"2xx\\\"}[1m])) by (le)), \\\"revision_name\\\", \\\
      \"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n      \
      \    \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n      \
      \    \"legendFormat\": \"2xx (p50)\",\n          \"refId\": \"C\"\n        },\n\
      \        {\n          \"expr\": \"label_replace(histogram_quantile(0.50, sum(rate(revision_request_latencies_bucket{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\",response_code_class=\\\"3xx\\\"}[1m])) by (le)), \\\"revision_name\\\
      \", \\\"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n\
      \          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n\
      \          \"legendFormat\": \"3xx (p50)\",\n          \"refId\": \"D\"\n  \
      \      },\n        {\n          \"expr\": \"label_replace(histogram_quantile(0.50,\
      \ sum(rate(revision_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \",response_code_class=\\\"4xx\\\"}[1m])) by (le)), \\\"revision_name\\\", \\\
      \"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n      \
      \    \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n      \
      \    \"legendFormat\": \"4xx (p50)\",\n          \"refId\": \"A\"\n        },\n\
      \        {\n          \"expr\": \"label_replace(histogram_quantile(0.50, sum(rate(revision_request_latencies_bucket{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\",response_code_class=\\\"5xx\\\"}[1m])) by (le)), \\\"revision_name\\\
      \", \\\"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n\
      \          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n\
      \          \"legendFormat\": \"5xx (p50)\",\n          \"refId\": \"B\"\n  \
      \      },\n        {\n          \"expr\": \"label_replace(histogram_quantile(0.95,\
      \ sum(rate(revision_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \",response_code_class=\\\"2xx\\\"}[1m])) by (le)), \\\"revision_name\\\", \\\
      \"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n      \
      \    \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n      \
      \    \"legendFormat\": \"2xx (p95)\",\n          \"refId\": \"E\"\n        },\n\
      \        {\n          \"expr\": \"label_replace(histogram_quantile(0.95, sum(rate(revision_request_latencies_bucket{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\",response_code_class=\\\"3xx\\\"}[1m])) by (le)), \\\"revision_name\\\
      \", \\\"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n\
      \          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n\
      \          \"legendFormat\": \"3xx (p95)\",\n          \"refId\": \"F\"\n  \
      \      },\n        {\n          \"expr\": \"label_replace(histogram_quantile(0.95,\
      \ sum(rate(revision_request_latencies_bucket{namespace_name=\\\"$namespace\\\
      \", configuration_name=~\\\"$configuration\\\",revision_name=~\\\"$revision\\\
      \",response_code_class=\\\"4xx\\\"}[1m])) by (le)), \\\"revision_name\\\", \\\
      \"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n      \
      \    \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n      \
      \    \"legendFormat\": \"4xx (p95)\",\n          \"refId\": \"G\"\n        },\n\
      \        {\n          \"expr\": \"label_replace(histogram_quantile(0.95, sum(rate(revision_request_latencies_bucket{namespace_name=\\\
      \"$namespace\\\", configuration_name=~\\\"$configuration\\\",revision_name=~\\\
      \"$revision\\\",response_code_class=\\\"5xx\\\"}[1m])) by (le)), \\\"revision_name\\\
      \", \\\"$2\\\", \\\"revision_name\\\", \\\"$configuration(-+)(.*)\\\")\",\n\
      \          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n\
      \          \"legendFormat\": \"5xx (p95)\",\n          \"refId\": \"H\"\n  \
      \      }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n \
      \     \"timeShift\": null,\n      \"title\": \"Response Time by Response Code\
      \ Class\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\"\
      : 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\"\
      ,\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\"\
      ,\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n\
      \      },\n      \"yaxes\": [\n        {\n          \"format\": \"s\",\n   \
      \       \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n\
      \          \"min\": null,\n          \"show\": true\n        },\n        {\n\
      \          \"format\": \"short\",\n          \"label\": null,\n          \"\
      logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n        \
      \  \"show\": false\n        }\n      ]\n    }\n  ],\n  \"refresh\": \"5s\",\n\
      \  \"schemaVersion\": 16,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\"\
      : {\n    \"list\": [\n      {\n        \"allValue\": null,\n        \"current\"\
      : {},\n        \"datasource\": \"prometheus\",\n        \"hide\": 0,\n     \
      \   \"includeAll\": false,\n        \"label\": \"Namespace\",\n        \"multi\"\
      : false,\n        \"name\": \"namespace\",\n        \"options\": [],\n     \
      \   \"query\": \"label_values(revision_request_count{namespace_name!=\\\"unknown\\\
      \"}, namespace_name)\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n\
      \        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tags\":\
      \ [],\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"\
      useTags\": false\n      },\n      {\n        \"allValue\": null,\n        \"\
      current\": {},\n        \"datasource\": \"prometheus\",\n        \"hide\": 0,\n\
      \        \"includeAll\": false,\n        \"label\": \"Configuration\",\n   \
      \     \"multi\": false,\n        \"name\": \"configuration\",\n        \"options\"\
      : [],\n        \"query\": \"label_values(revision_request_count{namespace_name=\\\
      \"$namespace\\\", configuration_name!=\\\"unknown\\\"}, configuration_name)\"\
      ,\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 1,\n\
      \        \"tagValuesQuery\": \"$tag\",\n        \"tags\": [],\n        \"tagsQuery\"\
      : \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n\
      \      {\n        \"allValue\": null,\n        \"current\": {},\n        \"\
      datasource\": \"prometheus\",\n        \"hide\": 0,\n        \"includeAll\"\
      : true,\n        \"label\": \"Revision\",\n        \"multi\": true,\n      \
      \  \"name\": \"revision\",\n        \"options\": [],\n        \"query\": \"\
      label_values(revision_request_count{namespace_name=\\\"$namespace\\\", configuration_name=~\\\
      \"$configuration\\\", revision_name!=\\\"unknown\\\"}, revision_name)\",\n \
      \       \"refresh\": 1,\n        \"regex\": \"\",\n        \"sort\": 2,\n  \
      \      \"tagValuesQuery\": \"\",\n        \"tags\": [],\n        \"tagsQuery\"\
      : \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n\
      \    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\
      \n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n \
      \     \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\"\
      ,\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"\
      time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\"\
      ,\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\
      \n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Knative Serving - Revision\
      \ HTTP Requests\",\n  \"uid\": \"im_gFbWik\",\n  \"version\": 2\n}\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: grafana-dashboard-definition-knative
    namespace: knative-monitoring
- apiVersion: v1
  data:
    prometheus.yaml: "datasources:\n - name: prometheus\n   type: prometheus\n   access:\
      \ proxy\n   org_id: 1\n   url: http://prometheus-system-np:8080\n   version:\
      \ 1\n   editable: false\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: grafana-datasources
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: elasticsearch-logging
      kubernetes.io/cluster-service: 'true'
    name: elasticsearch-logging
    namespace: knative-monitoring
  roleRef:
    apiGroup: ''
    kind: ClusterRole
    name: elasticsearch-logging
  subjects:
  - apiGroup: ''
    kind: ServiceAccount
    name: elasticsearch-logging
    namespace: knative-monitoring
- apiVersion: v1
  data:
    dashboards.yaml: "- name: 'knative'\n  org_id: 1\n  folder: ''\n  type: file\n\
      \  options:\n    folder: /grafana-dashboard-definition/knative\n- name: 'knative-efficiency'\n\
      \  org_id: 1\n  folder: ''\n  type: file\n  options:\n    folder: /grafana-dashboard-definition/knative-efficiency\n\
      - name: 'knative-reconciler'\n  org_id: 1\n  folder: ''\n  type: file\n  options:\n\
      \    folder: /grafana-dashboard-definition/knative-reconciler\n- name: 'istio'\n\
      \  org_id: 1\n  folder: ''\n  type: file\n  options:\n    folder: /grafana-dashboard-definition/istio\n\
      - name: 'mixer'\n  org_id: 1\n  folder: ''\n  type: file\n  options:\n    folder:\
      \ /grafana-dashboard-definition/mixer\n- name: 'pilot'\n  org_id: 1\n  folder:\
      \ ''\n  type: file\n  options:\n    folder: /grafana-dashboard-definition/pilot\n\
      - name: 'kubernetes-deployment'\n  org_id: 1\n  folder: ''\n  type: file\n \
      \ options:\n    folder: /grafana-dashboard-definition/kubernetes-deployment\n\
      - name: 'kubernetes-capacity-planning'\n  org_id: 1\n  folder: ''\n  type: file\n\
      \  options:\n    folder: /grafana-dashboard-definition/kubernetes-capacity-planning\n\
      - name: 'kubernetes-cluster-health'\n  org_id: 1\n  folder: ''\n  type: file\n\
      \  options:\n    folder: /grafana-dashboard-definition/kubernetes-cluster-health\n\
      - name: 'kubernetes-cluster-status'\n  org_id: 1\n  folder: ''\n  type: file\n\
      \  options:\n    folder: /grafana-dashboard-definition/kubernetes-cluster-status\n\
      - name: 'kubernetes-control-plane-status'\n  org_id: 1\n  folder: ''\n  type:\
      \ file\n  options:\n    folder: /grafana-dashboard-definition/kubernetes-control-plane-status\n\
      - name: 'kubernetes-resource-requests'\n  org_id: 1\n  folder: ''\n  type: file\n\
      \  options:\n    folder: /grafana-dashboard-definition/kubernetes-resource-requests\n\
      - name: 'kubernetes-nodes'\n  org_id: 1\n  folder: ''\n  type: file\n  options:\n\
      \    folder: /grafana-dashboard-definition/kubernetes-nodes\n- name: 'kubernetes-pods'\n\
      \  org_id: 1\n  folder: ''\n  type: file\n  options:\n    folder: /grafana-dashboard-definition/kubernetes-pods\n\
      - name: 'kubernetes-statefulset'\n  org_id: 1\n  folder: ''\n  type: file\n\
      \  options:\n    folder: /grafana-dashboard-definition/kubernetes-statefulset\n\
      - name: 'knative-serving-scaling'\n  org_id: 1\n  folder: ''\n  type: file\n\
      \  options:\n    folder: /grafana-dashboard-definition/scaling\n"
  kind: ConfigMap
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: grafana-dashboards
    namespace: knative-monitoring
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: grafana
      serving.knative.dev/release: v0.7.1
    name: grafana
    namespace: knative-monitoring
  spec:
    ports:
    - port: 30802
      protocol: TCP
      targetPort: 3000
    selector:
      app: grafana
    type: NodePort
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: grafana
    namespace: knative-monitoring
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: grafana
    template:
      metadata:
        labels:
          app: grafana
          serving.knative.dev/release: v0.7.1
      spec:
        containers:
        - image: quay.io/coreos/monitoring-grafana:5.0.3
          name: grafana
          ports:
          - containerPort: 3000
            name: web
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - mountPath: /data
            name: grafana-storage
          - mountPath: /grafana/conf/provisioning/datasources
            name: grafana-datasources
          - mountPath: /grafana/conf/provisioning/dashboards
            name: grafana-dashboards
          - mountPath: /grafana-dashboard-definition/knative
            name: grafana-dashboard-definition-knative
          - mountPath: /grafana-dashboard-definition/knative-efficiency
            name: grafana-dashboard-definition-knative-efficiency
          - mountPath: /grafana-dashboard-definition/knative-reconciler
            name: grafana-dashboard-definition-knative-reconciler
          - mountPath: /grafana-dashboard-definition/kubernetes-deployment
            name: grafana-dashboard-definition-kubernetes-deployment
          - mountPath: /grafana-dashboard-definition/kubernetes-capacity-planning
            name: grafana-dashboard-definition-kubernetes-capacity-planning
          - mountPath: /grafana-dashboard-definition/kubernetes-cluster-health
            name: grafana-dashboard-definition-kubernetes-cluster-health
          - mountPath: /grafana-dashboard-definition/kubernetes-cluster-status
            name: grafana-dashboard-definition-kubernetes-cluster-status
          - mountPath: /grafana-dashboard-definition/kubernetes-control-plane-status
            name: grafana-dashboard-definition-kubernetes-control-plane-status
          - mountPath: /grafana-dashboard-definition/kubernetes-resource-requests
            name: grafana-dashboard-definition-kubernetes-resource-requests
          - mountPath: /grafana-dashboard-definition/kubernetes-nodes
            name: grafana-dashboard-definition-kubernetes-nodes
          - mountPath: /grafana-dashboard-definition/kubernetes-pods
            name: grafana-dashboard-definition-kubernetes-pods
          - mountPath: /grafana-dashboard-definition/kubernetes-statefulset
            name: grafana-dashboard-definition-kubernetes-statefulset
          - mountPath: /grafana-dashboard-definition/scaling
            name: scaling-config
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
        volumes:
        - emptyDir: {}
          name: grafana-storage
        - configMap:
            name: grafana-datasources
          name: grafana-datasources
        - configMap:
            name: grafana-dashboards
          name: grafana-dashboards
        - configMap:
            name: grafana-dashboard-definition-knative
          name: grafana-dashboard-definition-knative
        - configMap:
            name: grafana-dashboard-definition-knative-efficiency
          name: grafana-dashboard-definition-knative-efficiency
        - configMap:
            name: grafana-dashboard-definition-knative-reconciler
          name: grafana-dashboard-definition-knative-reconciler
        - configMap:
            name: grafana-dashboard-definition-kubernetes-deployment
          name: grafana-dashboard-definition-kubernetes-deployment
        - configMap:
            name: grafana-dashboard-definition-kubernetes-capacity-planning
          name: grafana-dashboard-definition-kubernetes-capacity-planning
        - configMap:
            name: grafana-dashboard-definition-kubernetes-cluster-health
          name: grafana-dashboard-definition-kubernetes-cluster-health
        - configMap:
            name: grafana-dashboard-definition-kubernetes-cluster-status
          name: grafana-dashboard-definition-kubernetes-cluster-status
        - configMap:
            name: grafana-dashboard-definition-kubernetes-control-plane-status
          name: grafana-dashboard-definition-kubernetes-control-plane-status
        - configMap:
            name: grafana-dashboard-definition-kubernetes-resource-requests
          name: grafana-dashboard-definition-kubernetes-resource-requests
        - configMap:
            name: grafana-dashboard-definition-kubernetes-nodes
          name: grafana-dashboard-definition-kubernetes-nodes
        - configMap:
            name: grafana-dashboard-definition-kubernetes-pods
          name: grafana-dashboard-definition-kubernetes-pods
        - configMap:
            name: grafana-dashboard-definition-kubernetes-statefulset
          name: grafana-dashboard-definition-kubernetes-statefulset
        - configMap:
            name: scaling-config
          name: scaling-config
- apiVersion: v1
  data:
    prometheus.yml: "global:\n  scrape_interval: 30s\n  scrape_timeout: 10s\n  evaluation_interval:\
      \ 30s\nscrape_configs:\n# Controller endpoint\n- job_name: controller\n  scrape_interval:\
      \ 3s\n  scrape_timeout: 3s\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n\
      \  # Scrape only the the targets matching the following metadata\n  - source_labels:\
      \ [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]\n\
      \    action: keep\n    regex: knative-serving;controller;metrics\n  # Rename\
      \ metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Autoscaler endpoint\n- job_name: autoscaler\n\
      \  scrape_interval: 3s\n  scrape_timeout: 3s\n  kubernetes_sd_configs:\n  -\
      \ role: pod\n  relabel_configs:\n  # Scrape only the the targets matching the\
      \ following metadata\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app,\
      \ __meta_kubernetes_pod_container_port_name]\n    action: keep\n    regex: knative-serving;autoscaler;metrics\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Activator pods\n- job_name: activator\n  scrape_interval:\
      \ 3s\n  scrape_timeout: 3s\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n\
      \  # Scrape only the the targets matching the following metadata\n  - source_labels:\
      \ [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]\n\
      \    action: keep\n    regex: knative-serving;activator;metrics-port\n  # Rename\
      \ metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Queue proxy metrics\n- job_name: queue-proxy\n\
      \  scrape_interval: 3s\n  scrape_timeout: 3s\n  kubernetes_sd_configs:\n  -\
      \ role: pod\n  relabel_configs:\n  # Scrape only the the targets matching the\
      \ following metadata\n  - source_labels: [__meta_kubernetes_pod_label_serving_knative_dev_revision,\
      \ __meta_kubernetes_pod_container_port_name]\n    action: keep\n    regex: .+;user-metrics\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Fluentd daemonset\n- job_name: fluentd-ds\n  kubernetes_sd_configs:\n\
      \  - role: endpoints\n  relabel_configs:\n  # Scrape only the the targets matching\
      \ the following metadata\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_label_app,\
      \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: knative-monitoring;fluentd-ds;prometheus-metrics\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Istio mesh\n- job_name: istio-mesh\n  scrape_interval:\
      \ 5s\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  #\
      \ Scrape only the the targets matching the following metadata\n  - source_labels:\
      \ [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: istio-system;istio-telemetry;prometheus\n  # Rename\
      \ metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Istio Envoy\n# These are very noisy and not enabled\
      \ by default.\n# - job_name: istio-envoy\n#   scrape_interval: 5s\n#   kubernetes_sd_configs:\n\
      #   - role: endpoints\n#   relabel_configs:\n#   # Scrape only the the targets\
      \ matching the following metadata\n#   - source_labels: [__meta_kubernetes_namespace,\
      \ __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n# \
      \    action: keep\n#     regex: istio-system;istio-statsd-prom-bridge;statsd-prom\n\
      #   # Rename metadata labels to be reader friendly\n#   - source_labels: [__meta_kubernetes_namespace]\n\
      #     target_label: namespace\n#   - source_labels: [__meta_kubernetes_pod_name]\n\
      #     target_label: pod\n#   - source_labels: [__meta_kubernetes_service_name]\n\
      #     target_label: service\n# Istio policy\n- job_name: istio-policy\n  scrape_interval:\
      \ 5s\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  #\
      \ Scrape only the the targets matching the following metadata\n  - source_labels:\
      \ [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: istio-system;istio-policy;http-monitoring\n  #\
      \ Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Istio telemetry\n- job_name: istio-telemetry\n\
      \  scrape_interval: 5s\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n\
      \  # Scrape only the the targets matching the following metadata\n  - source_labels:\
      \ [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: istio-system;istio-telemetry;http-monitoring\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Istio pilot\n- job_name: istio-pilot\n  scrape_interval:\
      \ 5s\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  #\
      \ Scrape only the the targets matching the following metadata\n  - source_labels:\
      \ [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: istio-system;istio-pilot;http-monitoring\n  #\
      \ Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Kube API server\n- job_name: kube-apiserver\n\
      \  scheme: https\n  kubernetes_sd_configs:\n  - role: endpoints\n  bearer_token_file:\
      \ /var/run/secrets/kubernetes.io/serviceaccount/token\n  tls_config:\n    ca_file:\
      \ /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    server_name: kubernetes\n\
      \    insecure_skip_verify: false\n  relabel_configs:\n  # Scrape only the the\
      \ targets matching the following metadata\n  - source_labels: [__meta_kubernetes_namespace,\
      \ __meta_kubernetes_service_label_component, __meta_kubernetes_service_label_provider,\
      \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;apiserver;kubernetes;https\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Kube controller manager\n- job_name: kube-controller-manager\n\
      \  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  # Scrape\
      \ only the the targets matching the following metadata\n  - source_labels: [__meta_kubernetes_namespace,\
      \ __meta_kubernetes_service_label_app, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: knative-monitoring;kube-controller-manager;http-metrics\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Kube scheduler\n- job_name: kube-scheduler\n \
      \ kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  # Scrape\
      \ only the the targets matching the following metadata\n  - source_labels: [__meta_kubernetes_namespace,\
      \ __meta_kubernetes_service_label_k8s_app, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: kube-system;kube-scheduler;http-metrics\n  # Rename\
      \ metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Kube state metrics on https-main port\n- job_name:\
      \ kube-state-metrics-https-main\n  honor_labels: true\n  scheme: https\n  kubernetes_sd_configs:\n\
      \  - role: endpoints\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  tls_config:\n    insecure_skip_verify: true\n  relabel_configs:\n  # Scrape\
      \ only the the targets matching the following metadata\n  - source_labels: [__meta_kubernetes_namespace,\
      \ __meta_kubernetes_service_label_app, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: knative-monitoring;kube-state-metrics;https-main\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Kube state metrics on https-self port\n- job_name:\
      \ kube-state-metrics-https-self\n  scheme: https\n  kubernetes_sd_configs:\n\
      \  - role: endpoints\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  tls_config:\n    insecure_skip_verify: true\n  relabel_configs:\n  # Scrape\
      \ only the the targets matching the following metadata\n  - source_labels: [__meta_kubernetes_namespace,\
      \ __meta_kubernetes_service_label_app, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: knative-monitoring;kube-state-metrics;https-self\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Kubelet - nodes\n# Rather than connecting directly\
      \ to the node, the scrape is proxied though the\n# Kubernetes apiserver.  This\
      \ means it will work if Prometheus is running out of\n# cluster, or can't connect\
      \ to nodes for some other reason (e.g. because of\n# firewalling).\n- job_name:\
      \ kubernetes-nodes\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
      \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n\
      \    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n\
      \    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n\
      \    target_label: __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics\n\
      # Kubelet - cAdvisor\n#\n# This is required for Kubernetes 1.7.3 and later,\
      \ where cAdvisor metrics\n# (those whose names begin with 'container_') have\
      \ been removed from the\n# Kubelet metrics endpoint.  This job scrapes the cAdvisor\
      \ endpoint to\n# retrieve those metrics.\n#\n# In Kubernetes 1.7.0-1.7.2, these\
      \ metrics are only exposed on the cAdvisor\n# HTTP endpoint; use \"replacement:\
      \ /api/v1/nodes/${1}:4194/proxy/metrics\"\n# in that case (and ensure cAdvisor's\
      \ HTTP server hasn't been disabled with\n# the --cadvisor-port=0 Kubelet flag).\n\
      - job_name: kubernetes-cadvisor\n  scrape_interval: 15s\n  scheme: https\n \
      \ tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
      \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n\
      \    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n\
      \    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n\
      \    target_label: __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\n\
      # Node exporter\n- job_name: node-exporter\n  scheme: https\n  kubernetes_sd_configs:\n\
      \  - role: endpoints\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  tls_config:\n    insecure_skip_verify: true\n  relabel_configs:\n  # Scrape\
      \ only the the targets matching the following metadata\n  - source_labels: [__meta_kubernetes_namespace,\
      \ __meta_kubernetes_service_label_app, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: knative-monitoring;node-exporter;https\n  # Rename\
      \ metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service\n# Prometheus\n- job_name: prometheus\n  kubernetes_sd_configs:\n\
      \  - role: endpoints\n  relabel_configs:\n  # Scrape only the the targets matching\
      \ the following metadata\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_label_app,\
      \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: knative-monitoring;prometheus;web\n\
      \  # Rename metadata labels to be reader friendly\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    target_label: pod\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    target_label: service"
  kind: ConfigMap
  metadata:
    labels:
      name: prometheus-scrape-config
      serving.knative.dev/release: v0.7.1
    name: prometheus-scrape-config
    namespace: knative-monitoring
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kube-controller-manager
      serving.knative.dev/release: v0.7.1
    name: kube-controller-manager
    namespace: knative-monitoring
  spec:
    clusterIP: None
    ports:
    - name: http-metrics
      port: 10252
      protocol: TCP
      targetPort: 10252
    selector:
      k8s-app: kube-controller-manager
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: prometheus
      serving.knative.dev/release: v0.7.1
    name: prometheus-system-discovery
    namespace: knative-monitoring
  spec:
    clusterIP: None
    ports:
    - name: web
      port: 9090
      protocol: TCP
      targetPort: web
    selector:
      app: prometheus
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: default
  rules:
  - apiGroups:
    - ''
    resources:
    - nodes
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: knative-monitoring
  rules:
  - apiGroups:
    - ''
    resources:
    - nodes
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: kube-system
  rules:
  - apiGroups:
    - ''
    resources:
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: elasticsearch-logging
      kubernetes.io/cluster-service: 'true'
      version: v5.6.4
    name: elasticsearch-logging
    namespace: knative-monitoring
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: elasticsearch-logging
        version: v5.6.4
    serviceName: elasticsearch-logging
    template:
      metadata:
        labels:
          app: elasticsearch-logging
          kubernetes.io/cluster-service: 'true'
          version: v5.6.4
      spec:
        containers:
        - env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: k8s.gcr.io/elasticsearch:v5.6.4
          name: elasticsearch-logging
          ports:
          - containerPort: 9200
            name: db
            protocol: TCP
          - containerPort: 9300
            name: transport
            protocol: TCP
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
          volumeMounts:
          - mountPath: /data
            name: elasticsearch-logging
        initContainers:
        - command:
          - /sbin/sysctl
          - -w
          - vm.max_map_count=262144
          image: alpine:3.6
          name: elasticsearch-logging-init
          securityContext:
            privileged: true
        serviceAccountName: elasticsearch-logging
        volumes:
        - emptyDir: {}
          name: elasticsearch-logging
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - nodes/metrics
    - nodes
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: knative-monitoring
  rules:
  - apiGroups:
    - ''
    resources:
    - nodes/metrics
    - nodes
    - services
    - endpoints
    - pods
    - nodes/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
  - nonResourceURLs:
    - /metrics
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: default
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus-system
  subjects:
  - kind: ServiceAccount
    name: prometheus-system
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: knative-monitoring
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus-system
  subjects:
  - kind: ServiceAccount
    name: prometheus-system
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: kube-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus-system
  subjects:
  - kind: ServiceAccount
    name: prometheus-system
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: prometheus-system
  subjects:
  - kind: ServiceAccount
    name: prometheus-system
    namespace: knative-monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: prometheus-system
  subjects:
  - kind: ServiceAccount
    name: prometheus-system
    namespace: knative-monitoring
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system-np
    namespace: knative-monitoring
  spec:
    ports:
    - port: 8080
      targetPort: 9090
    selector:
      app: prometheus
    type: NodePort
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: prometheus-system
    namespace: knative-monitoring
  spec:
    podManagementPolicy: Parallel
    replicas: 2
    selector:
      matchLabels:
        app: prometheus
    serviceName: prometheus-system
    template:
      metadata:
        labels:
          app: prometheus
          serving.knative.dev/release: v0.7.1
      spec:
        containers:
        - args:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus
          - --storage.tsdb.retention=2d
          - --storage.tsdb.no-lockfile
          - --web.enable-lifecycle
          - --web.route-prefix=/
          image: prom/prometheus:v2.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
          name: prometheus
          ports:
          - containerPort: 9090
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            timeoutSeconds: 3
          resources:
            limits:
              memory: 1000Mi
            requests:
              memory: 400Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config-volume
          - mountPath: /prometheus
            name: prometheus-storage-volume
        serviceAccountName: prometheus-system
        terminationGracePeriodSeconds: 600
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-scrape-config
          name: prometheus-config-volume
        - emptyDir: {}
          name: prometheus-storage-volume
    updateStrategy:
      type: RollingUpdate
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: zipkin
    namespace: istio-system
  spec:
    ports:
    - name: http
      port: 9411
    selector:
      app: zipkin
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: kibana-logging
      kubernetes.io/cluster-service: 'true'
      kubernetes.io/name: Kibana
    name: kibana-logging
    namespace: knative-monitoring
  spec:
    ports:
    - port: 5601
      protocol: TCP
      targetPort: ui
    selector:
      app: kibana-logging
    type: NodePort
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      serving.knative.dev/release: v0.7.1
    name: zipkin
    namespace: istio-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: zipkin
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: zipkin
          serving.knative.dev/release: v0.7.1
      spec:
        containers:
        - env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: STORAGE_TYPE
            value: elasticsearch
          - name: ES_HOSTS
            value: elasticsearch-logging.knative-monitoring.svc.cluster.local:9200
          - name: ES_INDEX
            value: zipkin
          - name: ZIPKIN_UI_LOGS_URL
            value: http://localhost:8001/api/v1/namespaces/knative-monitoring/services/kibana-logging/proxy/app/kibana#/
          image: docker.io/openzipkin/zipkin:2.13.0
          imagePullPolicy: IfNotPresent
          name: zipkin
          ports:
          - containerPort: 9411
          resources:
            limits:
              memory: 1000Mi
            requests:
              memory: 256Mi
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: kibana-logging
      kubernetes.io/cluster-service: 'true'
    name: kibana-logging
    namespace: knative-monitoring
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kibana-logging
    template:
      metadata:
        labels:
          app: kibana-logging
      spec:
        containers:
        - env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch-logging:9200
          - name: SERVER_BASEPATH
            value: /api/v1/namespaces/knative-monitoring/services/kibana-logging/proxy
          - name: XPACK_MONITORING_ENABLED
            value: 'false'
          - name: XPACK_SECURITY_ENABLED
            value: 'false'
          image: docker.elastic.co/kibana/kibana:5.6.4
          name: kibana-logging
          ports:
          - containerPort: 5601
            name: ui
            protocol: TCP
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
- apiVersion: v1
  data:
    100.system.conf: "<system>\n  root_dir /tmp/fluentd-buffers/\n</system>"
    200.containers.input.conf: "# Capture logs from container's stdout/stderr -> Docker\
      \ -> .log in JSON format\n<source>\n  @id containers-stdout-stderr\n  @type\
      \ tail\n  path /var/log/containers/*user-container-*.log,/var/log/containers/*build-step-*.log,/var/log/containers/controller-*controller-*.log,/var/log/containers/webhook-*webhook-*.log,/var/log/containers/*autoscaler-*autoscaler-*.log,/var/log/containers/*queue-proxy-*.log,/var/log/containers/activator-*activator-*.log\n\
      \  pos_file /var/log/containers-stdout-stderr.pos\n  time_format %Y-%m-%dT%H:%M:%S.%NZ\n\
      \  tag raw.kubernetes.*\n  format json\n  read_from_head true\n</source>\n#\
      \ Capture logs from Knative containers' /var/log\n<source>\n  @id containers-var-log\n\
      \  @type tail\n  # **/*/**/* allows path expansion to go through one symlink\
      \ (the one created by the init container)\n  path /var/lib/kubelet/pods/*/volumes/kubernetes.io~empty-dir/knative-internal/**/*/**/*\n\
      \  path_key stream\n  pos_file /var/log/containers-var-log.pos\n  tag raw.kubernetes.*\n\
      \  message_key log\n  read_from_head true\n  <parse>\n    @type multi_format\n\
      \    <pattern>\n      format json\n      time_key fluentd-time # fluentd-time\
      \ is reserved for structured logs\n      time_format %Y-%m-%dT%H:%M:%S.%NZ\n\
      \    </pattern>\n    <pattern>\n      format none\n      message_key log\n \
      \   </pattern>\n  </parse>\n</source>\n# Combine multi line logs which form\
      \ an exception stack trace into a single log entry\n<match raw.kubernetes.**>\n\
      \  @id raw.kubernetes\n  @type detect_exceptions\n  remove_tag_prefix raw\n\
      \  message log\n  stream stream\n  multiline_flush_interval 5\n  max_bytes 500000\n\
      \  max_lines 1000\n</match>\n# Make stream path correct from the container's\
      \ point of view\n<filter kubernetes.var.lib.kubelet.pods.*.volumes.kubernetes.io~empty-dir.knative-internal.*.**>\n\
      \  @type record_transformer\n  enable_ruby true\n  <record>\n    stream /var/log/${record[\"\
      stream\"].scan(/\\/knative-internal\\/[^\\/]+\\/(.*)/).last.last}\n  </record>\n\
      </filter>\n# Add Kubernetes metadata to logs from /var/log/containers\n<filter\
      \ kubernetes.var.log.containers.**>\n  @type kubernetes_metadata\n</filter>\n\
      # Add Kubernetes metadata to logs from /var/lib/kubelet/pods/*/volumes/kubernetes.io~empty-dir/knative-internal/**/*/**/*\n\
      <filter kubernetes.var.lib.kubelet.pods.**>\n  @type kubernetes_metadata\n \
      \ tag_to_kubernetes_name_regexp (?<docker_id>[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12})\\\
      .volumes.kubernetes\\.io~empty-dir\\.knative-internal\\.(?<namespace>[^_]+)_(?<pod_name>[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\
      .[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<container_name>user-container)\\..*?$\n\
      </filter>"
    300.forward.input.conf: "# Takes the messages sent over TCP, e.g. request logs\
      \ from Istio\n<source>\n  @type forward\n  port 24224\n</source>"
    900.output.conf: "# Send to Elastic Search\n<match **>\n  @id elasticsearch\n\
      \  @type elasticsearch\n  @log_level info\n  host elasticsearch-logging\n  port\
      \ 9200\n  logstash_format true\n  <buffer>\n    @type file\n    path /var/log/fluentd-buffers/kubernetes.system.buffer\n\
      \    flush_mode interval\n    retry_type exponential_backoff\n    flush_thread_count\
      \ 2\n    flush_interval 5s\n    retry_forever\n    retry_max_interval 30\n \
      \   chunk_limit_size 2M\n    queue_limit_length 8\n    overflow_action block\n\
      \  </buffer>\n</match>"
  kind: ConfigMap
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      serving.knative.dev/release: v0.7.1
    name: fluentd-ds-config
    namespace: knative-monitoring
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: fluentd-ds
      kubernetes.io/cluster-service: 'true'
      serving.knative.dev/release: v0.7.1
    name: fluentd-ds
    namespace: knative-monitoring
- apiVersion: serving.knative.dev/v1alpha1
  kind: Service
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: express-app
    namespace: functions
  spec:
    template:
      metadata:
        annotations:
          autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
          autoscaling.knative.dev/maxScale: '100'
          autoscaling.knative.dev/metric: concurrency
          autoscaling.knative.dev/target: '5'
      spec:
        containers:
        - env:
          - name: TARGET
            value: Node.js Sample v1
          image: dev.local/express-app:dev-build
          imagePullPolicy: Never
          livenessProbe:
            httpGet:
              path: /healthz
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            requests:
              cpu: 100m
- apiVersion: v1
  data:
    dev.cluster: ''
  kind: ConfigMap
  metadata:
    labels:
      kubenix/project-name: kubenix
    name: config-domain
    namespace: knative-serving
kind: List
labels:
