apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
    name: tekton-pipelines
- apiVersion: policy/v1beta1
  kind: PodSecurityPolicy
  metadata:
    labels:
    name: tekton-pipelines
  spec:
    allowPrivilegeEscalation: false
    fsGroup:
      ranges:
      - max: 65535
        min: 1
      rule: MustRunAs
    hostIPC: false
    hostNetwork: false
    hostPID: false
    privileged: false
    runAsUser:
      rule: RunAsAny
    seLinux:
      rule: RunAsAny
    supplementalGroups:
      ranges:
      - max: 65535
        min: 1
      rule: MustRunAs
    volumes:
    - emptyDir
    - configMap
    - secret
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
    name: pipelineresources.tekton.dev
  spec:
    group: tekton.dev
    names:
      categories:
      - all
      - tekton-pipelines
      kind: PipelineResource
      plural: pipelineresources
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
    name: tasks.tekton.dev
  spec:
    group: tekton.dev
    names:
      categories:
      - all
      - tekton-pipelines
      kind: Task
      plural: tasks
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
    name: taskruns.tekton.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - JSONPath: .status.startTime
      name: StartTime
      type: date
    - JSONPath: .status.completionTime
      name: CompletionTime
      type: date
    group: tekton.dev
    names:
      categories:
      - all
      - tekton-pipelines
      kind: TaskRun
      plural: taskruns
      shortNames:
      - tr
      - trs
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tekton-pipelines-controller
    name: tekton-pipelines-controller
    namespace: tekton-pipelines
  spec:
    ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: tekton-pipelines-controller
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tekton-pipelines-webhook
    name: tekton-pipelines-webhook
    namespace: tekton-pipelines
  spec:
    ports:
    - port: 443
      targetPort: 8443
    selector:
      app: tekton-pipelines-webhook
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      rbac.authorization.k8s.io/aggregate-to-admin: 'true'
      rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    name: tekton-aggregate-edit
  rules:
  - apiGroups:
    - tekton.dev
    resources:
    - tasks
    - taskruns
    - pipelines
    - pipelineruns
    - pipelineresources
    - conditions
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: 'true'
    name: tekton-aggregate-view
  rules:
  - apiGroups:
    - tekton.dev
    resources:
    - tasks
    - taskruns
    - pipelines
    - pipelineruns
    - pipelineresources
    - conditions
    verbs:
    - get
    - list
    - watch
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
    name: config-artifact-bucket
    namespace: tekton-pipelines
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
    name: config-artifact-pvc
    namespace: tekton-pipelines
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.


      # default-timeout-minutes contains the default number of

      # minutes to use for TaskRun and PipelineRun, if none is specified.

      default-timeout-minutes: "60"  # 60 minutes

      '
  kind: ConfigMap
  metadata:
    labels:
    name: config-defaults
    namespace: tekton-pipelines
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
    name: tekton-pipelines-admin
  rules:
  - apiGroups:
    - ''
    resources:
    - pods
    - pods/log
    - namespaces
    - secrets
    - events
    - serviceaccounts
    - configmaps
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments/finalizers
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - tasks
    - clustertasks
    - taskruns
    - pipelines
    - pipelineruns
    - pipelineresources
    - conditions
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - taskruns/finalizers
    - pipelineruns/finalizers
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - tasks/status
    - clustertasks/status
    - taskruns/status
    - pipelines/status
    - pipelineruns/status
    - pipelineresources/status
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - policy
    resourceNames:
    - tekton-pipelines
    resources:
    - podsecuritypolicies
    verbs:
    - use
- apiVersion: v1
  data:
    loglevel.controller: info
    loglevel.webhook: info
    zap-logger-config: "{\n  \"level\": \"info\",\n  \"development\": false,\n  \"\
      sampling\": {\n    \"initial\": 100,\n    \"thereafter\": 100\n  },\n  \"outputPaths\"\
      : [\"stdout\"],\n  \"errorOutputPaths\": [\"stderr\"],\n  \"encoding\": \"json\"\
      ,\n  \"encoderConfig\": {\n    \"timeKey\": \"\",\n    \"levelKey\": \"level\"\
      ,\n    \"nameKey\": \"logger\",\n    \"callerKey\": \"caller\",\n    \"messageKey\"\
      : \"msg\",\n    \"stacktraceKey\": \"stacktrace\",\n    \"lineEnding\": \"\"\
      ,\n    \"levelEncoder\": \"\",\n    \"timeEncoder\": \"\",\n    \"durationEncoder\"\
      : \"\",\n    \"callerEncoder\": \"\"\n  }\n}\n"
  kind: ConfigMap
  metadata:
    labels:
    name: config-logging
    namespace: tekton-pipelines
- apiVersion: v1
  data:
    _example: '################################

      #                              #

      #    EXAMPLE CONFIGURATION     #

      #                              #

      ################################


      # This block is not actually functional configuration,

      # but serves to illustrate the available configuration

      # options and document them in a way that is accessible

      # to users that `kubectl edit` this config map.

      #

      # These sample configuration options may be copied out of

      # this example block and unindented to be in the data block

      # to actually change the configuration.


      # metrics.backend-destination field specifies the system metrics destination.

      # It supports either prometheus (the default) or stackdriver.

      # Note: Using Stackdriver will incur additional charges.

      metrics.backend-destination: prometheus


      # metrics.stackdriver-project-id field specifies the Stackdriver project ID.
      This

      # field is optional. When running on GCE, application default credentials will
      be

      # used and metrics will be sent to the cluster''s project if this field is

      # not provided.

      metrics.stackdriver-project-id: "<your stackdriver project id>"


      # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed

      # to send metrics to Stackdriver using "global" resource type and custom

      # metric type. Setting this flag to "true" could cause extra Stackdriver

      # charge.  If metrics.backend-destination is not Stackdriver, this is

      # ignored.

      metrics.allow-stackdriver-custom-metrics: "false"

      '
  kind: ConfigMap
  metadata:
    labels:
    name: config-observability
    namespace: tekton-pipelines
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: tekton-pipelines
    name: tekton-pipelines-controller
    namespace: tekton-pipelines
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: tekton-pipelines-controller
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
        labels:
          app: tekton-pipelines-controller
          app.kubernetes.io/component: controller
          app.kubernetes.io/name: tekton-pipelines
      spec:
        containers:
        - args:
          - -logtostderr
          - -stderrthreshold
          - INFO
          - -kubeconfig-writer-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter@sha256:8f8aee782bb47d7436c40e5b10a19966b21d00e1d35d2f3cd8713e206ce24841
          - -creds-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/creds-init@sha256:beff30d239273c4986b2e8f9d26a23cc84cc4ffda074e4e83f1cc50905c2d3da
          - -git-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init@sha256:b0e6fb4f8fdd6728c6ff5bd63be30e04f88f103b9a1e972e204125aeb6a04d33
          - -nop-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop@sha256:b372d0cb991cb960854880957c93c460d35e75339016ca6472b5ea2955f08dcb
          - -bash-noop-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/bash@sha256:d101b69175e60cf43956ba850ec62c2db8eead17d3aa9cfb40ad7f7f3f6a3f53
          - -gsutil-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/gsutil@sha256:c404edde7ec5ccf550784f2d71ea4b184ec1378329bdad316e26bce81d5f466c
          - -entrypoint-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint@sha256:ac46866bd14ac38960c6aa100ee7468e707a955324ea4c88ce8d39b8cdfee11e
          - -imagedigest-exporter-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter@sha256:04e1eda72b3db4e4b12cc4caa2c01f33384ba80702a4dd8c41a1a940e0d69296
          - -pr-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init@sha256:c7e2a8178bc3e87405303212290836de9f781409fd60cee25cac1383aaa76f1b
          - -build-gcs-fetcher-image
          - gcr.io/tekton-releases/github.com/tektoncd/pipeline/vendor/github.com/googlecloudplatform/cloud-builders/gcs-fetcher/cmd/gcs-fetcher@sha256:7741f416742ac14744e8c8d0c1a628ce93d801dadfdb1ff9da8a4b9df4d6573c
          env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: tekton.dev/pipeline
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller@sha256:ebc6f768038aa3e31f3d7acda4bc26bf1380b5f2a132f0618181cacc30e295fa
          name: tekton-pipelines-controller
          volumeMounts:
          - mountPath: /etc/config-logging
            name: config-logging
        serviceAccountName: tekton-pipelines-controller
        volumes:
        - configMap:
            name: config-logging
          name: config-logging
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/component: webhook-controller
      app.kubernetes.io/name: tekton-pipelines
    name: tekton-pipelines-webhook
    namespace: tekton-pipelines
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: tekton-pipelines-webhook
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
        labels:
          app: tekton-pipelines-webhook
          app.kubernetes.io/component: webhook-controller
          app.kubernetes.io/name: tekton-pipelines
      spec:
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook@sha256:7215a25a58c074bbe30a50db93e6a47d2eb5672f9af7570a4e4ab75e50329131
          name: webhook
          volumeMounts:
          - mountPath: /etc/config-logging
            name: config-logging
        serviceAccountName: tekton-pipelines-controller
        volumes:
        - configMap:
            name: config-logging
          name: config-logging
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
    name: tekton-pipelines-controller
    namespace: tekton-pipelines
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
    name: tekton-pipelines-controller-admin
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: tekton-pipelines-admin
  subjects:
  - kind: ServiceAccount
    name: tekton-pipelines-controller
    namespace: tekton-pipelines
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
    name: clustertasks.tekton.dev
  spec:
    group: tekton.dev
    names:
      categories:
      - all
      - tekton-pipelines
      kind: ClusterTask
      plural: clustertasks
    scope: Cluster
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
    name: conditions.tekton.dev
  spec:
    group: tekton.dev
    names:
      categories:
      - all
      - tekton-pipelines
      kind: Condition
      plural: conditions
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
      knative.dev/crd-install: 'true'
    name: images.caching.internal.knative.dev
  spec:
    group: caching.internal.knative.dev
    names:
      categories:
      - knative-internal
      - caching
      kind: Image
      plural: images
      shortNames:
      - img
      singular: image
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
    name: pipelines.tekton.dev
  spec:
    group: tekton.dev
    names:
      categories:
      - all
      - tekton-pipelines
      kind: Pipeline
      plural: pipelines
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
    name: pipelineruns.tekton.dev
  spec:
    additionalPrinterColumns:
    - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
      name: Succeeded
      type: string
    - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
      name: Reason
      type: string
    - JSONPath: .status.startTime
      name: StartTime
      type: date
    - JSONPath: .status.completionTime
      name: CompletionTime
      type: date
    group: tekton.dev
    names:
      categories:
      - all
      - tekton-pipelines
      kind: PipelineRun
      plural: pipelineruns
      shortNames:
      - pr
      - prs
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: tekton-dashboard
    name: tekton-dashboard
    namespace: tekton-pipelines
- apiVersion: apiextensions.k8s.io/v1beta1
  kind: CustomResourceDefinition
  metadata:
    labels:
    name: extensions.dashboard.tekton.dev
  spec:
    group: dashboard.tekton.dev
    names:
      categories:
      - all
      - tekton-pipelines
      kind: Extension
      plural: extensions
    scope: Namespaced
    subresources:
      status: {}
    version: v1alpha1
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
    name: tekton-dashboard-minimal
    namespace: tekton-pipelines
  rules:
  - apiGroups:
    - security.openshift.io
    resources:
    - securitycontextconstraints
    verbs:
    - use
  - apiGroups:
    - route.openshift.io
    resources:
    - routes
    verbs:
    - get
    - list
  - apiGroups:
    - extensions
    - apps
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - serviceaccounts
    verbs:
    - get
    - list
    - update
    - patch
  - apiGroups:
    - ''
    resources:
    - pods
    - services
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - ''
    resources:
    - pods/log
    - namespaces
    - events
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - secrets
    - configmaps
    verbs:
    - get
    - list
    - create
    - update
    - watch
    - delete
  - apiGroups:
    - extensions
    - apps
    resources:
    - deployments
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - tasks
    - clustertasks
    - taskruns
    - pipelines
    - pipelineruns
    - pipelineresources
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - taskruns/finalizers
    - pipelineruns/finalizers
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - tekton.dev
    resources:
    - tasks/status
    - clustertasks/status
    - taskruns/status
    - pipelines/status
    - pipelineruns/status
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
  - apiGroups:
    - dashboard.tekton.dev
    resources:
    - extensions
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - patch
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
    name: tekton-dashboard-minimal
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: tekton-dashboard-minimal
  subjects:
  - kind: ServiceAccount
    name: tekton-dashboard
    namespace: tekton-pipelines
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: tekton-dashboard
    name: tekton-dashboard
    namespace: tekton-pipelines
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: tekton-dashboard
    template:
      metadata:
        labels:
          app: tekton-dashboard
        name: tekton-dashboard
      spec:
        containers:
        - env:
          - name: PORT
            value: '9097'
          - name: WEB_RESOURCES_DIR
            value: /var/run/ko/web
          - name: PIPELINE_RUN_SERVICE_ACCOUNT
            value: ''
          - name: INSTALLED_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard@sha256:1bae097b49afa77fcbf9415a2e3484a6636818abf04d05dc817dc2f176510827
          livenessProbe:
            httpGet:
              path: /health
              port: 9097
          name: tekton-dashboard
          ports:
          - containerPort: 9097
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9097
        serviceAccountName: tekton-dashboard
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tekton-dashboard
    name: tekton-dashboard
    namespace: tekton-pipelines
  spec:
    ports:
    - name: http
      port: 9097
      protocol: TCP
      targetPort: 9097
    selector:
      app: tekton-dashboard
- apiVersion: tekton.dev/v1alpha1
  kind: Task
  metadata:
    labels:
    name: pipeline0-task
    namespace: tekton-pipelines
  spec:
    inputs:
      params:
      - default: /workspace/git-source
        description: The path to the resource files to apply
        name: pathToResourceFiles
      - default: .
        description: The directory from which resources are to be applied
        name: apply-directory
      - default: tekton-pipelines
        description: The namespace in which to create the resources being imported
        name: target-namespace
      resources:
      - name: git-source
        type: git
    steps:
    - args:
      - apply
      - -f
      - ${inputs.params.pathToResourceFiles}/${inputs.params.apply-directory}
      - -n
      - ${inputs.params.target-namespace}
      command:
      - kubectl
      image: lachlanevenson/k8s-kubectl@sha256:739109fa0236fc503d66f91063585a972727a30d750509fed5b53cf8120216e3
      name: kubectl-apply
- apiVersion: tekton.dev/v1alpha1
  kind: Pipeline
  metadata:
    labels:
    name: pipeline0
    namespace: tekton-pipelines
  spec:
    params:
    - default: /workspace/git-source
      description: The path to the resource files to apply
      name: pathToResourceFiles
    - default: .
      description: The directory from which resources are to be applied
      name: apply-directory
    - default: tekton-pipelines
      description: The namespace in which to create the resources being imported
      name: target-namespace
    resources:
    - name: git-source
      type: git
    tasks:
    - name: pipeline0-task
      params:
      - name: pathToResourceFiles
        value: ${params.pathToResourceFiles}
      - name: apply-directory
        value: ${params.apply-directory}
      - name: target-namespace
        value: ${params.target-namespace}
      resources:
        inputs:
        - name: git-source
          resource: git-source
      taskRef:
        name: pipeline0-task
kind: List
labels:
