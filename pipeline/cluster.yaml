apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade
    namespace: default
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      istio-injection: enabled
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: functions
    namespace: default
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: istio-system
    namespace: default
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: local-infra
    namespace: default
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: destination-rule-grafana
    namespace: default
  spec:
    host: grafana.knative-monitoring.svc.cluster.local
    trafficPolicy:
      tls:
        mode: DISABLE
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-policy
    namespace: istio-system
  spec:
    host: istio-policy.istio-system.svc.cluster.local
    trafficPolicy:
      connectionPool:
        http:
          http2MaxRequests: 10000
          maxRequestsPerConnection: 10000
- apiVersion: networking.istio.io/v1alpha3
  kind: DestinationRule
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-telemetry
    namespace: istio-system
  spec:
    host: istio-telemetry.istio-system.svc.cluster.local
    trafficPolicy:
      connectionPool:
        http:
          http2MaxRequests: 10000
          maxRequestsPerConnection: 10000
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: grafana-gateway
    namespace: default
  spec:
    selector:
      istio: monitoring-ingressgateway
    servers:
    - hosts:
      - '*'
      port:
        name: http2-weavescope
        number: 15301
        protocol: HTTP2
    - hosts:
      - '*'
      port:
        name: http2-grafana
        number: 15300
        protocol: HTTP2
    - hosts:
      - '*'
      port:
        name: http2-zipkin
        number: 15302
        protocol: HTTP2
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: virtualservice-grafana
    namespace: default
  spec:
    gateways:
    - grafana-gateway
    hosts:
    - '*'
    http:
    - match:
      - port: 15301
      route:
      - destination:
          host: weave-scope-app.istio-system.svc.cluster.local
          port:
            number: 80
    - match:
      - port: 15302
      route:
      - destination:
          host: zipkin.istio-system.svc.cluster.local
          port:
            number: 9411
    - match:
      - port: 15300
      route:
      - destination:
          host: grafana.knative-monitoring.svc.cluster.local
          port:
            number: 30802
- apiVersion: config.istio.io/v1alpha2
  kind: attributemanifest
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istioproxy
    namespace: istio-system
  spec:
    attributes:
      api.operation:
        valueType: STRING
      api.protocol:
        valueType: STRING
      api.service:
        valueType: STRING
      api.version:
        valueType: STRING
      check.cache_hit:
        valueType: BOOL
      check.error_code:
        valueType: INT64
      check.error_message:
        valueType: STRING
      connection.duration:
        valueType: DURATION
      connection.event:
        valueType: STRING
      connection.id:
        valueType: STRING
      connection.mtls:
        valueType: BOOL
      connection.received.bytes:
        valueType: INT64
      connection.received.bytes_total:
        valueType: INT64
      connection.requested_server_name:
        valueType: STRING
      connection.sent.bytes:
        valueType: INT64
      connection.sent.bytes_total:
        valueType: INT64
      context.protocol:
        valueType: STRING
      context.proxy_error_code:
        valueType: STRING
      context.reporter.kind:
        valueType: STRING
      context.reporter.local:
        valueType: BOOL
      context.reporter.uid:
        valueType: STRING
      context.time:
        valueType: TIMESTAMP
      context.timestamp:
        valueType: TIMESTAMP
      destination.port:
        valueType: INT64
      destination.principal:
        valueType: STRING
      destination.uid:
        valueType: STRING
      origin.ip:
        valueType: IP_ADDRESS
      origin.uid:
        valueType: STRING
      origin.user:
        valueType: STRING
      quota.cache_hit:
        valueType: BOOL
      rbac.permissive.effective_policy_id:
        valueType: STRING
      rbac.permissive.response_code:
        valueType: STRING
      request.api_key:
        valueType: STRING
      request.auth.audiences:
        valueType: STRING
      request.auth.claims:
        valueType: STRING_MAP
      request.auth.presenter:
        valueType: STRING
      request.auth.principal:
        valueType: STRING
      request.auth.raw_claims:
        valueType: STRING
      request.headers:
        valueType: STRING_MAP
      request.host:
        valueType: STRING
      request.id:
        valueType: STRING
      request.method:
        valueType: STRING
      request.path:
        valueType: STRING
      request.query_params:
        valueType: STRING_MAP
      request.reason:
        valueType: STRING
      request.referer:
        valueType: STRING
      request.scheme:
        valueType: STRING
      request.size:
        valueType: INT64
      request.time:
        valueType: TIMESTAMP
      request.total_size:
        valueType: INT64
      request.url_path:
        valueType: STRING
      request.useragent:
        valueType: STRING
      response.code:
        valueType: INT64
      response.duration:
        valueType: DURATION
      response.grpc_message:
        valueType: STRING
      response.grpc_status:
        valueType: STRING
      response.headers:
        valueType: STRING_MAP
      response.size:
        valueType: INT64
      response.time:
        valueType: TIMESTAMP
      response.total_size:
        valueType: INT64
      source.principal:
        valueType: STRING
      source.uid:
        valueType: STRING
      source.user:
        valueType: STRING
- apiVersion: config.istio.io/v1alpha2
  kind: attributemanifest
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: kubernetes
    namespace: istio-system
  spec:
    attributes:
      destination.container.name:
        valueType: STRING
      destination.ip:
        valueType: IP_ADDRESS
      destination.labels:
        valueType: STRING_MAP
      destination.metadata:
        valueType: STRING_MAP
      destination.name:
        valueType: STRING
      destination.namespace:
        valueType: STRING
      destination.owner:
        valueType: STRING
      destination.service.host:
        valueType: STRING
      destination.service.name:
        valueType: STRING
      destination.service.namespace:
        valueType: STRING
      destination.service.uid:
        valueType: STRING
      destination.serviceAccount:
        valueType: STRING
      destination.workload.name:
        valueType: STRING
      destination.workload.namespace:
        valueType: STRING
      destination.workload.uid:
        valueType: STRING
      source.ip:
        valueType: IP_ADDRESS
      source.labels:
        valueType: STRING_MAP
      source.metadata:
        valueType: STRING_MAP
      source.name:
        valueType: STRING
      source.namespace:
        valueType: STRING
      source.owner:
        valueType: STRING
      source.serviceAccount:
        valueType: STRING
      source.services:
        valueType: STRING
      source.workload.name:
        valueType: STRING
      source.workload.namespace:
        valueType: STRING
      source.workload.uid:
        valueType: STRING
- apiVersion: config.istio.io/v1alpha2
  kind: kubernetes
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: attributes
    namespace: istio-system
  spec:
    attribute_bindings:
      destination.container.name: $out.destination_container_name | "unknown"
      destination.ip: $out.destination_pod_ip | ip("0.0.0.0")
      destination.labels: $out.destination_labels | emptyStringMap()
      destination.name: $out.destination_pod_name | "unknown"
      destination.namespace: $out.destination_namespace | "default"
      destination.owner: $out.destination_owner | "unknown"
      destination.serviceAccount: $out.destination_service_account_name | "unknown"
      destination.uid: $out.destination_pod_uid | "unknown"
      destination.workload.name: $out.destination_workload_name | "unknown"
      destination.workload.namespace: $out.destination_workload_namespace | "unknown"
      destination.workload.uid: $out.destination_workload_uid | "unknown"
      source.ip: $out.source_pod_ip | ip("0.0.0.0")
      source.labels: $out.source_labels | emptyStringMap()
      source.name: $out.source_pod_name | "unknown"
      source.namespace: $out.source_namespace | "default"
      source.owner: $out.source_owner | "unknown"
      source.serviceAccount: $out.source_service_account_name | "unknown"
      source.uid: $out.source_pod_uid | "unknown"
      source.workload.name: $out.source_workload_name | "unknown"
      source.workload.namespace: $out.source_workload_namespace | "unknown"
      source.workload.uid: $out.source_workload_uid | "unknown"
    destination_port: destination.port | 0
    destination_uid: destination.uid | ""
    source_ip: source.ip | ip("0.0.0.0")
    source_uid: source.uid | ""
- apiVersion: config.istio.io/v1alpha2
  kind: rule
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: kubeattrgenrulerule
    namespace: istio-system
  spec:
    actions:
    - handler: kubernetesenv
      instances:
      - attributes.kubernetes
- apiVersion: config.istio.io/v1alpha2
  kind: rule
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: tcpkubeattrgenrulerule
    namespace: istio-system
  spec:
    actions:
    - handler: kubernetesenv
      instances:
      - attributes.kubernetes
    match: context.protocol == "tcp"
- apiVersion: config.istio.io/v1alpha2
  kind: handler
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: kubernetesenv
    namespace: istio-system
  spec:
    compiledAdapter: kubernetesenv
- apiVersion: admissionregistration.k8s.io/v1beta1
  kind: MutatingWebhookConfiguration
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
  webhooks:
  - clientConfig:
      caBundle: ''
      service:
        name: istio-sidecar-injector
        namespace: istio-system
        path: /inject
    failurePolicy: Fail
    name: sidecar-injector.istio.io
    namespaceSelector:
      matchLabels:
        istio-injection: enabled
    rules:
    - apiGroups:
      - ''
      apiVersions:
      - v1
      operations:
      - CREATE
      resources:
      - pods
- apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    annotations:
      cloud.weave.works/launcher-info: "{\n  \"server-version\": \"master-4fe8efe\"\
        ,\n  \"original-request\": {\n    \"url\": \"/k8s/v1.7/scope.yaml\"\n  },\n\
        \  \"email-address\": \"support@weave.works\",\n  \"source-app\": \"weave-scope\"\
        ,\n  \"weave-cloud-component\": \"scope\"\n}"
    labels:
      app: weave-scope
      chart: weave-scope-frontend-1.1.2
      component: frontend
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: weave-scope
    name: weave-scope-frontend-weave-scope
    namespace: istio-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: weave-scope
        component: frontend
        release: weave-scope
    template:
      metadata:
        labels:
          app: weave-scope
          chart: weave-scope-frontend-1.1.2
          component: frontend
          heritage: Tiller
          release: weave-scope
      spec:
        containers:
        - args:
          - --no-probe
          image: weaveworks/scope:1.11.2
          imagePullPolicy: IfNotPresent
          name: weave-scope-frontend
          ports:
          - containerPort: 4040
            name: http
            protocol: TCP
- apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: ingressgateway
      chart: gateways
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway
    namespace: istio-system
  spec:
    maxReplicas: 1
    metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1beta1
      kind: Deployment
      name: istio-ingressgateway
- apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot
    namespace: istio-system
  spec:
    maxReplicas: 5
    metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
    minReplicas: 2
    scaleTargetRef:
      apiVersion: apps/v1beta1
      kind: Deployment
      name: istio-pilot
- apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-policy
    namespace: istio-system
  spec:
    maxReplicas: 5
    metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1beta1
      kind: Deployment
      name: istio-policy
- apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-telemetry
    namespace: istio-system
  spec:
    maxReplicas: 5
    metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1beta1
      kind: Deployment
      name: istio-telemetry
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      helm.sh/hook: post-delete
      helm.sh/hook-delete-policy: hook-succeeded
      helm.sh/hook-weight: '3'
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-cleanup-secrets-1.1.9
    namespace: istio-system
  spec:
    template:
      metadata:
        labels:
          app: security
          chart: security
          heritage: Tiller
          release: istio
        name: istio-cleanup-secrets
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - command:
          - /bin/bash
          - -c
          - "kubectl get secret --all-namespaces | grep \"istio.io/key-and-cert\"\
            \ |  while read -r entry; do\n  ns=$(echo $entry | awk '{print $1}');\n\
            \  name=$(echo $entry | awk '{print $2}');\n  kubectl delete secret $name\
            \ -n $ns;\ndone\n"
          image: docker.io/istio/kubectl:1.1.9
          imagePullPolicy: IfNotPresent
          name: kubectl
        restartPolicy: OnFailure
        serviceAccountName: istio-cleanup-secrets-service-account
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      helm.sh/hook: post-install
      helm.sh/hook-delete-policy: hook-succeeded
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-post-install-1.1.9
    namespace: istio-system
  spec:
    template:
      metadata:
        labels:
          app: security
          chart: security
          heritage: Tiller
          release: istio
        name: istio-security-post-install
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - command:
          - /bin/bash
          - /tmp/security/run.sh
          - /tmp/security/custom-resources.yaml
          image: docker.io/istio/kubectl:1.1.9
          imagePullPolicy: IfNotPresent
          name: kubectl
          volumeMounts:
          - mountPath: /tmp/security
            name: tmp-configmap-security
        restartPolicy: OnFailure
        serviceAccountName: istio-security-post-install-account
        volumes:
        - configMap:
            name: istio-security-custom-resources
          name: tmp-configmap-security
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      role: vacuum
    name: brigade-brigade-vacuum
    namespace: brigade
  spec:
    failedJobsHistoryLimit: 10
    jobTemplate:
      spec:
        template:
          metadata:
            labels:
              app.kubernetes.io/name: brigade-brigade
              role: vacuum
          spec:
            containers:
            - env:
              - name: BRIGADE_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: VACUUM_AGE
                value: 720h
              - name: VACUUM_MAX_BUILDS
                value: '-1'
              - name: VACUUM_SKIP_RUNNING_BUILDS
                value: 'false'
              image: brigadecore/brigade-vacuum:v1.0.0
              imagePullPolicy: IfNotPresent
              name: brigade-vacuum
            restartPolicy: OnFailure
            serviceAccountName: brigade-vacuum
    schedule: '@hourly'
    successfulJobsHistoryLimit: 10
- apiVersion: v1
  data:
    settings.js: 'var brigadeApiURL = ''//'' + location.host; ''http://brigade-brigade-api:7745'';

      // End'
  kind: ConfigMap
  metadata:
    labels:
      chart: kashti-0.1.1
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade
    name: brigade-kashti-js
    namespace: brigade
- apiVersion: v1
  data:
    default.conf: "server {\n    listen       80;\n    server_name  localhost;\n\n\
      \    # Proxy to API server\n    location /v1/ {\n        proxy_pass http://brigade-brigade-api:7745/v1/;\n\
      \    }\n\n    location / {\n        root   /usr/share/nginx/html;\n        index\
      \  index.html index.htm;\n        try_files $uri $uri/ /index.html;\n    }\n\
      \    \n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html\
      \ {\n        root   /usr/share/nginx/html;\n    }\n}"
  kind: ConfigMap
  metadata:
    labels:
      chart: kashti-0.1.1
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade
    name: brigade-kashti-nginx
    namespace: brigade
- apiVersion: v1
  data:
    config.yml: "health:\n  storagedriver:\n    enabled: true\n    interval: 10s\n\
      \    threshold: 3\nhttp:\n  addr: :5000\n  headers:\n    X-Content-Type-Options:\n\
      \    - nosniff\nlog:\n  fields:\n    service: registry\nstorage:\n  cache:\n\
      \    blobdescriptor: inmemory\nversion: 0.1"
  kind: ConfigMap
  metadata:
    labels:
      app: docker-registry
      chart: docker-registry-1.8.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: docker-registry
    name: docker-registry-config
    namespace: local-infra
- apiVersion: v1
  data:
    mesh: "# Set the following variable to true to disable policy checks by the Mixer.\n\
      # Note that metrics will still be reported to the Mixer.\ndisablePolicyChecks:\
      \ true\n\n# Set enableTracing to false to disable request tracing.\nenableTracing:\
      \ true\n\n# Set accessLogFile to empty string to disable access log.\naccessLogFile:\
      \ \"\"\n\n# If accessLogEncoding is TEXT, value will be used directly as the\
      \ log format\n# example: \"[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\
      \ %PROTOCOL%\\n\"\n# If AccessLogEncoding is JSON, value will be parsed as map[string]string\n\
      # example: '{\"start_time\": \"%START_TIME%\", \"req_method\": \"%REQ(:METHOD)%\"\
      }'\n# Leave empty to use default log format\naccessLogFormat: \"\"\n\n# Set\
      \ accessLogEncoding to JSON or TEXT to configure sidecar access log\naccessLogEncoding:\
      \ 'TEXT'\nmixerCheckServer: istio-policy.istio-system.svc.cluster.local:9091\n\
      mixerReportServer: istio-telemetry.istio-system.svc.cluster.local:9091\n# policyCheckFailOpen\
      \ allows traffic in cases when the mixer policy service cannot be reached.\n\
      # Default is false which means the traffic is denied when the client is unable\
      \ to connect to Mixer.\npolicyCheckFailOpen: false\n# Let Pilot give ingresses\
      \ the public IP of the Istio ingressgateway\ningressService: istio-ingressgateway\n\
      \n# Default connect timeout for dynamic clusters generated by Pilot and returned\
      \ via XDS\nconnectTimeout: 10s\n\n# DNS refresh rate for Envoy clusters of type\
      \ STRICT_DNS\ndnsRefreshRate: 5s\n\n# Unix Domain Socket through which envoy\
      \ communicates with NodeAgent SDS to get\n# key/cert for mTLS. Use secret-mount\
      \ files instead of SDS if set to empty. \nsdsUdsPath: \n\n# This flag is used\
      \ by secret discovery service(SDS). \n# If set to true(prerequisite: https://kubernetes.io/docs/concepts/storage/volumes/#projected),\
      \ Istio will inject volumes mount \n# for k8s service account JWT, so that K8s\
      \ API server mounts k8s service account JWT to envoy container, which \n# will\
      \ be used to generate key/cert eventually. This isn't supported for non-k8s\
      \ case.\nenableSdsTokenMount: false\n\n# This flag is used by secret discovery\
      \ service(SDS). \n# If set to true, envoy will fetch normal k8s service account\
      \ JWT from '/var/run/secrets/kubernetes.io/serviceaccount/token' \n# (https://kubernetes.io/docs/tasks/access-application-cluster/access-cluster/#accessing-the-api-from-a-pod)\
      \ \n# and pass to sds server, which will be used to request key/cert eventually.\
      \ \n# this flag is ignored if enableSdsTokenMount is set.\n# This isn't supported\
      \ for non-k8s case.\nsdsUseK8sSaJwt: false\n\n# The trust domain corresponds\
      \ to the trust root of a system.\n# Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain\n\
      trustDomain: \n\n# Set the default behavior of the sidecar for handling outbound\
      \ traffic from the application:\n# ALLOW_ANY - outbound traffic to unknown destinations\
      \ will be allowed, in case there are no\n#   services or ServiceEntries for\
      \ the destination port\n# REGISTRY_ONLY - restrict outbound traffic to services\
      \ defined in the service registry as well\n#   as those defined through ServiceEntries\
      \  \noutboundTrafficPolicy:\n  mode: ALLOW_ANY\n\nlocalityLbSetting:\n  {}\n\
      \  \n\n# The namespace to treat as the administrative root namespace for istio\n\
      # configuration.    \nrootNamespace: istio-system\nconfigSources:\n- address:\
      \ istio-galley.istio-system.svc:9901\n\ndefaultConfig:\n  #\n  # TCP connection\
      \ timeout between Envoy & the application, and between Envoys.  Used for static\
      \ clusters\n  # defined in Envoy's configuration file\n  connectTimeout: 10s\n\
      \  #\n  ### ADVANCED SETTINGS #############\n  # Where should envoy's configuration\
      \ be stored in the istio-proxy container\n  configPath: \"/etc/istio/proxy\"\
      \n  binaryPath: \"/usr/local/bin/envoy\"\n  # The pseudo service name used for\
      \ Envoy.\n  serviceCluster: istio-proxy\n  # These settings that determine how\
      \ long an old Envoy\n  # process should be kept alive after an occasional reload.\n\
      \  drainDuration: 45s\n  parentShutdownDuration: 1m0s\n  #\n  # The mode used\
      \ to redirect inbound connections to Envoy. This setting\n  # has no effect\
      \ on outbound traffic: iptables REDIRECT is always used for\n  # outbound connections.\n\
      \  # If \"REDIRECT\", use iptables REDIRECT to NAT and redirect to Envoy.\n\
      \  # The \"REDIRECT\" mode loses source addresses during redirection.\n  # If\
      \ \"TPROXY\", use iptables TPROXY to redirect to Envoy.\n  # The \"TPROXY\"\
      \ mode preserves both the source and destination IP\n  # addresses and ports,\
      \ so that they can be used for advanced filtering\n  # and manipulation.\n \
      \ # The \"TPROXY\" mode also configures the sidecar to run with the\n  # CAP_NET_ADMIN\
      \ capability, which is required to use TPROXY.\n  #interceptionMode: REDIRECT\n\
      \  #\n  # Port where Envoy listens (on local host) for admin commands\n  # You\
      \ can exec into the istio-proxy container in a pod and\n  # curl the admin port\
      \ (curl http://localhost:15000/) to obtain\n  # diagnostic information from\
      \ Envoy. See\n  # https://lyft.github.io/envoy/docs/operations/admin.html\n\
      \  # for more details\n  proxyAdminPort: 15000\n  #\n  # Set concurrency to\
      \ a specific number to control the number of Proxy worker threads.\n  # If set\
      \ to 0 (default), then start worker thread for each CPU thread/core.\n  concurrency:\
      \ 2\n  #\n  tracing:\n    zipkin:\n      # Address of the Zipkin collector\n\
      \      address: zipkin.istio-system:9411\n  #\n  # Mutual TLS authentication\
      \ between sidecars and istio control plane.\n  controlPlaneAuthPolicy: NONE\n\
      \  #\n  # Address where istio Pilot service is running\n  discoveryAddress:\
      \ istio-pilot.istio-system:15010"
    meshNetworks: 'networks: {}'
  kind: ConfigMap
  metadata:
    labels:
      app: istio
      chart: istio
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio
    namespace: istio-system
- apiVersion: v1
  data:
    validatingwebhookconfiguration.yaml: "apiVersion: admissionregistration.k8s.io/v1beta1\n\
      kind: ValidatingWebhookConfiguration\nmetadata:\n  name: istio-galley\n  namespace:\
      \ istio-system\n  labels:\n    app: galley\n    chart: galley\n    heritage:\
      \ Tiller\n    release: istio\n    istio: galley\nwebhooks:\n  - name: pilot.validation.istio.io\n\
      \    clientConfig:\n      service:\n        name: istio-galley\n        namespace:\
      \ istio-system\n        path: \"/admitpilot\"\n      caBundle: \"\"\n    rules:\n\
      \      - operations:\n        - CREATE\n        - UPDATE\n        apiGroups:\n\
      \        - config.istio.io\n        apiVersions:\n        - v1alpha2\n     \
      \   resources:\n        - httpapispecs\n        - httpapispecbindings\n    \
      \    - quotaspecs\n        - quotaspecbindings\n      - operations:\n      \
      \  - CREATE\n        - UPDATE\n        apiGroups:\n        - rbac.istio.io\n\
      \        apiVersions:\n        - \"*\"\n        resources:\n        - \"*\"\n\
      \      - operations:\n        - CREATE\n        - UPDATE\n        apiGroups:\n\
      \        - authentication.istio.io\n        apiVersions:\n        - \"*\"\n\
      \        resources:\n        - \"*\"\n      - operations:\n        - CREATE\n\
      \        - UPDATE\n        apiGroups:\n        - networking.istio.io\n     \
      \   apiVersions:\n        - \"*\"\n        resources:\n        - destinationrules\n\
      \        - envoyfilters\n        - gateways\n        - serviceentries\n    \
      \    - sidecars\n        - virtualservices\n    failurePolicy: Fail\n  - name:\
      \ mixer.validation.istio.io\n    clientConfig:\n      service:\n        name:\
      \ istio-galley\n        namespace: istio-system\n        path: \"/admitmixer\"\
      \n      caBundle: \"\"\n    rules:\n      - operations:\n        - CREATE\n\
      \        - UPDATE\n        apiGroups:\n        - config.istio.io\n        apiVersions:\n\
      \        - v1alpha2\n        resources:\n        - rules\n        - attributemanifests\n\
      \        - circonuses\n        - deniers\n        - fluentds\n        - kubernetesenvs\n\
      \        - listcheckers\n        - memquotas\n        - noops\n        - opas\n\
      \        - prometheuses\n        - rbacs\n        - solarwindses\n        -\
      \ stackdrivers\n        - cloudwatches\n        - dogstatsds\n        - statsds\n\
      \        - stdios\n        - apikeys\n        - authorizations\n        - checknothings\n\
      \        # - kuberneteses\n        - listentries\n        - logentries\n   \
      \     - metrics\n        - quotas\n        - reportnothings\n        - tracespans\n\
      \    failurePolicy: Fail"
  kind: ConfigMap
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      istio: galley
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley-configuration
    namespace: istio-system
- apiVersion: v1
  data:
    custom-resources.yaml: "# Authentication policy to enable permissive mode for\
      \ all services (that have sidecar) in the mesh.\napiVersion: \"authentication.istio.io/v1alpha1\"\
      \nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\n  labels:\n    app:\
      \ security\n    chart: security\n    heritage: Tiller\n    release: istio\n\
      spec:\n  peers:\n  - mtls:\n      mode: PERMISSIVE"
    run.sh: "#!/bin/sh\n\nset -x\n\nif [ \"$#\" -ne \"1\" ]; then\n    echo \"first\
      \ argument should be path to custom resource yaml\"\n    exit 1\nfi\n\npathToResourceYAML=${1}\n\
      \nkubectl get validatingwebhookconfiguration istio-galley 2>/dev/null\nif [\
      \ \"$?\" -eq 0 ]; then\n    echo \"istio-galley validatingwebhookconfiguration\
      \ found - waiting for istio-galley deployment to be ready\"\n    while true;\
      \ do\n        kubectl -n istio-system get deployment istio-galley 2>/dev/null\n\
      \        if [ \"$?\" -eq 0 ]; then\n            break\n        fi\n        sleep\
      \ 1\n    done\n    kubectl -n istio-system rollout status deployment istio-galley\n\
      \    if [ \"$?\" -ne 0 ]; then\n        echo \"istio-galley deployment rollout\
      \ status check failed\"\n        exit 1\n    fi\n    echo \"istio-galley deployment\
      \ ready for configuration validation\"\nfi\nsleep 5\nkubectl apply -f ${pathToResourceYAML}"
  kind: ConfigMap
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      istio: citadel
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-custom-resources
    namespace: istio-system
- apiVersion: v1
  data:
    config: "policy: disabled\ntemplate: |-\n  rewriteAppHTTPProbe: false\n  containers:\n\
      \  - name: istio-proxy\n    image: [[ annotation .ObjectMeta `sidecar.istio.io/proxyImage`\
      \  \"docker.io/istio/proxyv2:1.1.9\"  ]]\n    ports:\n    - containerPort: 15090\n\
      \      protocol: TCP\n      name: http-envoy-prom\n    args:\n    - proxy\n\
      \    - sidecar\n    - --domain\n    - $(POD_NAMESPACE).svc.cluster.local\n \
      \   - --configPath\n    - [[ .ProxyConfig.ConfigPath ]]\n    - --binaryPath\n\
      \    - [[ .ProxyConfig.BinaryPath ]]\n    - --serviceCluster\n    [[ if ne \"\
      \" (index .ObjectMeta.Labels \"app\") -]]\n    - [[ index .ObjectMeta.Labels\
      \ \"app\" ]].$(POD_NAMESPACE)\n    [[ else -]]\n    - [[ valueOrDefault .DeploymentMeta.Name\
      \ \"istio-proxy\" ]].[[ valueOrDefault .DeploymentMeta.Namespace \"default\"\
      \ ]]\n    [[ end -]]\n    - --drainDuration\n    - [[ formatDuration .ProxyConfig.DrainDuration\
      \ ]]\n    - --parentShutdownDuration\n    - [[ formatDuration .ProxyConfig.ParentShutdownDuration\
      \ ]]\n    - --discoveryAddress\n    - [[ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress`\
      \ .ProxyConfig.DiscoveryAddress ]]\n    - --zipkinAddress\n    - [[ .ProxyConfig.GetTracing.GetZipkin.GetAddress\
      \ ]]\n    - --connectTimeout\n    - [[ formatDuration .ProxyConfig.ConnectTimeout\
      \ ]]\n    - --proxyAdminPort\n    - [[ .ProxyConfig.ProxyAdminPort ]]\n    [[\
      \ if gt .ProxyConfig.Concurrency 0 -]]\n    - --concurrency\n    - [[ .ProxyConfig.Concurrency\
      \ ]]\n    [[ end -]]\n    - --controlPlaneAuthPolicy\n    - [[ annotation .ObjectMeta\
      \ `sidecar.istio.io/controlPlaneAuthPolicy` .ProxyConfig.ControlPlaneAuthPolicy\
      \ ]]\n  [[- if (ne (annotation .ObjectMeta `status.sidecar.istio.io/port`  15020\
      \ ) \"0\") ]]\n    - --statusPort\n    - [[ annotation .ObjectMeta `status.sidecar.istio.io/port`\
      \  15020  ]]\n    - --applicationPorts\n    - \"[[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/applicationPorts`\
      \ (applicationPorts .Spec.Containers) ]]\"\n  [[- end ]]\n    env:\n    - name:\
      \ POD_NAME\n      valueFrom:\n        fieldRef:\n          fieldPath: metadata.name\n\
      \    - name: POD_NAMESPACE\n      valueFrom:\n        fieldRef:\n          fieldPath:\
      \ metadata.namespace\n    - name: INSTANCE_IP\n      valueFrom:\n        fieldRef:\n\
      \          fieldPath: status.podIP\n    \n    - name: ISTIO_META_POD_NAME\n\
      \      valueFrom:\n        fieldRef:\n          fieldPath: metadata.name\n \
      \   - name: ISTIO_META_CONFIG_NAMESPACE\n      valueFrom:\n        fieldRef:\n\
      \          fieldPath: metadata.namespace\n    - name: ISTIO_META_INTERCEPTION_MODE\n\
      \      value: [[ or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\"\
      ) .ProxyConfig.InterceptionMode.String ]]\n    [[ if .ObjectMeta.Annotations\
      \ ]]\n    - name: ISTIO_METAJSON_ANNOTATIONS\n      value: |\n             [[\
      \ toJSON .ObjectMeta.Annotations ]]\n    [[ end ]]\n    [[ if .ObjectMeta.Labels\
      \ ]]\n    - name: ISTIO_METAJSON_LABELS\n      value: |\n             [[ toJSON\
      \ .ObjectMeta.Labels ]]\n    [[ end ]]\n    [[- if (isset .ObjectMeta.Annotations\
      \ `sidecar.istio.io/bootstrapOverride`) ]]\n    - name: ISTIO_BOOTSTRAP_OVERRIDE\n\
      \      value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\n    [[-\
      \ end ]]\n    imagePullPolicy: IfNotPresent\n    [[ if (ne (annotation .ObjectMeta\
      \ `status.sidecar.istio.io/port`  15020 ) \"0\") ]]\n    readinessProbe:\n \
      \     httpGet:\n        path: /healthz/ready\n        port: [[ annotation .ObjectMeta\
      \ `status.sidecar.istio.io/port`  15020  ]]\n      initialDelaySeconds: [[ annotation\
      \ .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds`  1  ]]\n\
      \      periodSeconds: [[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds`\
      \  2  ]]\n      failureThreshold: [[ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold`\
      \  30  ]]\n    [[ end -]]securityContext:\n      readOnlyRootFilesystem: true\n\
      \      [[ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode`\
      \ .ProxyConfig.InterceptionMode) \"TPROXY\" -]]\n      capabilities:\n     \
      \   add:\n        - NET_ADMIN\n      runAsGroup: 1337\n      [[ else -]]\n \
      \     \n      runAsUser: 1337\n      [[- end ]]\n    resources:\n      [[ if\
      \ or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations\
      \ `sidecar.istio.io/proxyMemory`) -]]\n      requests:\n        [[ if (isset\
      \ .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -]]\n        cpu: \"\
      [[ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` ]]\"\n        [[\
      \ end ]]\n        [[ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`)\
      \ -]]\n        memory: \"[[ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`\
      \ ]]\"\n        [[ end ]]\n    [[ else -]]\n      limits:\n        cpu: 2000m\n\
      \        memory: 1024Mi\n      requests:\n        cpu: 100m\n        memory:\
      \ 128Mi\n      \n    [[ end -]]\n    volumeMounts:\n    [[- if (isset .ObjectMeta.Annotations\
      \ `sidecar.istio.io/bootstrapOverride`) ]]\n    - mountPath: /etc/istio/custom-bootstrap\n\
      \      name: custom-bootstrap-volume\n    [[- end ]]\n    - mountPath: /etc/istio/proxy\n\
      \      name: istio-envoy\n    - mountPath: /etc/certs/\n      name: istio-certs\n\
      \      readOnly: true\n      [[- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`\
      \ ]]\n      [[ range $index, $value := fromJSON (index .ObjectMeta.Annotations\
      \ `sidecar.istio.io/userVolumeMount`) ]]\n    - name: \"[[ $index ]]\"\n   \
      \   [[ toYaml $value | indent 4 ]]\n      [[ end ]]\n      [[- end ]]\n  volumes:\n\
      \  [[- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`)\
      \ ]]\n  - name: custom-bootstrap-volume\n    configMap:\n      name: [[ annotation\
      \ .ObjectMeta `sidecar.istio.io/bootstrapOverride` `` ]]\n  [[- end ]]\n  -\
      \ emptyDir:\n      medium: Memory\n    name: istio-envoy\n  - name: istio-certs\n\
      \    secret:\n      optional: true\n      [[ if eq .Spec.ServiceAccountName\
      \ \"\" -]]\n      secretName: istio.default\n      [[ else -]]\n      secretName:\
      \ [[ printf \"istio.%s\" .Spec.ServiceAccountName ]]\n      [[ end -]]\n   \
      \ [[- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` ]]\n  \
      \  [[ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`)\
      \ ]]\n  - name: \"[[ $index ]]\"\n    [[ toYaml $value | indent 2 ]]\n    [[\
      \ end ]]\n    [[ end ]]"
  kind: ConfigMap
  metadata:
    labels:
      app: istio
      chart: istio
      heritage: Tiller
      istio: sidecar-injector
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
- apiVersion: v1
  data:
    prometheus.yml: "global:\n  scrape_interval: 15s\nscrape_configs:\n\n- job_name:\
      \ 'istio-mesh'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n\
      \      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n \
      \   action: keep\n    regex: istio-telemetry;prometheus\n\n# Scrape config for\
      \ envoy stats\n- job_name: 'envoy-stats'\n  metrics_path: /stats/prometheus\n\
      \  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_pod_container_port_name]\n    action: keep\n    regex:\
      \ '.*-envoy-prom'\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
      \    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement:\
      \ $1:15090\n    target_label: __address__\n  - action: labelmap\n    regex:\
      \ __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n\
      \    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    action: replace\n    target_label: pod_name\n\n  metric_relabel_configs:\n\
      \  # Exclude some of the envoy metrics that have massive cardinality\n  # This\
      \ list may need to be pruned further moving forward, as informed\n  # by performance\
      \ and scalability testing.\n  - source_labels: [ cluster_name ]\n    regex:\
      \ '(outbound|inbound|prometheus_stats).*'\n    action: drop\n  - source_labels:\
      \ [ tcp_prefix ]\n    regex: '(outbound|inbound|prometheus_stats).*'\n    action:\
      \ drop\n  - source_labels: [ listener_address ]\n    regex: '(.+)'\n    action:\
      \ drop\n  - source_labels: [ http_conn_manager_listener_prefix ]\n    regex:\
      \ '(.+)'\n    action: drop\n  - source_labels: [ http_conn_manager_prefix ]\n\
      \    regex: '(.+)'\n    action: drop\n  - source_labels: [ __name__ ]\n    regex:\
      \ 'envoy_tls.*'\n    action: drop\n  - source_labels: [ __name__ ]\n    regex:\
      \ 'envoy_tcp_downstream.*'\n    action: drop\n  - source_labels: [ __name__\
      \ ]\n    regex: 'envoy_http_(stats|admin).*'\n    action: drop\n  - source_labels:\
      \ [ __name__ ]\n    regex: 'envoy_cluster_(lb|retry|bind|internal|max|original).*'\n\
      \    action: drop\n\n- job_name: 'istio-policy'\n  kubernetes_sd_configs:\n\
      \  - role: endpoints\n    namespaces:\n      names:\n      - istio-system\n\n\
      \n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: istio-policy;http-monitoring\n\n- job_name: 'istio-telemetry'\n\
      \  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n\
      \      - istio-system\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name,\
      \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-telemetry;http-monitoring\n\
      \n- job_name: 'pilot'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n\
      \      names:\n      - istio-system\n\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n \
      \   action: keep\n    regex: istio-pilot;http-monitoring\n\n- job_name: 'galley'\n\
      \  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n\
      \      - istio-system\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name,\
      \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istio-galley;http-monitoring\n\
      \n- job_name: 'citadel'\n  kubernetes_sd_configs:\n  - role: endpoints\n   \
      \ namespaces:\n      names:\n      - istio-system\n\n  relabel_configs:\n  -\
      \ source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: istio-citadel;http-monitoring\n\n# scrape config\
      \ for API servers\n- job_name: 'kubernetes-apiservers'\n  kubernetes_sd_configs:\n\
      \  - role: endpoints\n    namespaces:\n      names:\n      - default\n  scheme:\
      \ https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
      \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n\
      \    action: keep\n    regex: kubernetes;https\n\n# scrape config for nodes\
      \ (kubelet)\n- job_name: 'kubernetes-nodes'\n  scheme: https\n  tls_config:\n\
      \    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file:\
      \ /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n\
      \  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\
      \  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n\
      \  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label:\
      \ __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics\n\n# Scrape\
      \ config for Kubelet cAdvisor.\n#\n# This is required for Kubernetes 1.7.3 and\
      \ later, where cAdvisor metrics\n# (those whose names begin with 'container_')\
      \ have been removed from the\n# Kubelet metrics endpoint.  This job scrapes\
      \ the cAdvisor endpoint to\n# retrieve those metrics.\n#\n# In Kubernetes 1.7.0-1.7.2,\
      \ these metrics are only exposed on the cAdvisor\n# HTTP endpoint; use \"replacement:\
      \ /api/v1/nodes/${1}:4194/proxy/metrics\"\n# in that case (and ensure cAdvisor's\
      \ HTTP server hasn't been disabled with\n# the --cadvisor-port=0 Kubelet flag).\n\
      #\n# This job is not necessary and should be removed in Kubernetes 1.6 and\n\
      # earlier versions, or it will cause the metrics to be scraped twice.\n- job_name:\
      \ 'kubernetes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
      \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\
      \  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n\
      \    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n\
      \    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n\
      \    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\n\
      \n# scrape config for service endpoints.\n- job_name: 'kubernetes-service-endpoints'\n\
      \  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n    action: keep\n\
      \    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
      \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
      \ source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
      \    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n\
      \  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
      \    action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\\
      d+)?;(\\d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
      \  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n   \
      \ target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
      \    action: replace\n    target_label: kubernetes_name\n\n- job_name: 'kubernetes-pods'\n\
      \  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:  # If first two\
      \ labels are present, pod should be scraped  by the istio-secure job.\n  - source_labels:\
      \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
      \    regex: true\n  # Keep target if there's no sidecar or if prometheus.io/scheme\
      \ is explicitly set to \"http\"\n  - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status,\
      \ __meta_kubernetes_pod_annotation_prometheus_io_scheme]\n    action: keep\n\
      \    regex: ((;.*)|(.*;http))\n  - source_labels: [__meta_kubernetes_pod_annotation_istio_mtls]\n\
      \    action: drop\n    regex: (true)\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n\
      \    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n\
      \  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
      \    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement:\
      \ $1:$2\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n\
      \  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n   \
      \ target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    action: replace\n    target_label: pod_name\n\n- job_name: 'kubernetes-pods-istio-secure'\n\
      \  scheme: https\n  tls_config:\n    ca_file: /etc/istio-certs/root-cert.pem\n\
      \    cert_file: /etc/istio-certs/cert-chain.pem\n    key_file: /etc/istio-certs/key.pem\n\
      \    insecure_skip_verify: true  # prometheus does not support secure naming.\n\
      \  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels:\
      \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
      \    regex: true\n  # sidecar status annotation is added by sidecar injector\
      \ and\n  # istio_workload_mtls_ability can be specifically placed on a pod to\
      \ indicate its ability to receive mtls traffic.\n  - source_labels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status,\
      \ __meta_kubernetes_pod_annotation_istio_mtls]\n    action: keep\n    regex:\
      \ (([^;]+);([^;]*))|(([^;]*);(true))\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n\
      \    action: drop\n    regex: (http)\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n\
      \    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n\
      \  - source_labels: [__address__]  # Only keep address that is host:port\n \
      \   action: keep    # otherwise an extra target with ':443' is added for https\
      \ scheme\n    regex: ([^:]+):(\\d+)\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
      \    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement:\
      \ $1:$2\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n\
      \  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n   \
      \ target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n\
      \    action: replace\n    target_label: pod_name"
  kind: ConfigMap
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: prometheus
    namespace: istio-system
- apiVersion: v1
  data:
    run.sh: "\n@test \"Testing Weave Scope UI is accessible\" {\n  curl --retry 12\
      \ --retry-delay 10 http://weave-scope-app.istio-system.svc:80\n}"
  kind: ConfigMap
  metadata:
    labels:
      app: weave-scope
      chart: weave-scope-1.1.2
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: weave-scope
    name: weave-scope-weave-scope-tests
    namespace: istio-system
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      helm.sh/hook: test-success
    labels:
      app: weave-scope
      chart: weave-scope-1.1.2
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: weave-scope
    name: weave-scope-ui-test-cc3sk
    namespace: istio-system
  spec:
    containers:
    - command:
      - /tools/bats/bats
      - -t
      - /tests/run.sh
      image: dduportal/bats:0.4.0
      name: weave-scope-ui-test
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
    initContainers:
    - command:
      - bash
      - -c
      - 'set -ex

        # copy bats to tools dir

        cp -R /usr/local/libexec/ /tools/bats/

        '
      image: dduportal/bats:0.4.0
      name: test-framework
      volumeMounts:
      - mountPath: /tools
        name: tools
    restartPolicy: Never
    volumes:
    - configMap:
        name: weave-scope-weave-scope-tests
      name: tests
    - emptyDir: {}
      name: tools
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      projectName: embracing-nix-docker-k8s-helm-knative
    labels:
      app: brigade
      chart: brigade-project-1.0.0
      component: project
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade-project
    name: brigade-a2a013f22a364382e7dc23ce94145b1fcb31697724035cc4ff3624
    namespace: brigade
  stringData:
    allowHostMounts: 'false'
    allowPrivilegedJobs: 'true'
    cloneURL: git@bitbucket.org:digitalrigbitbucketteam/embracing-nix-docker-k8s-helm-knative.git
    defaultScript: "const { events, Job, Group } = require(\"brigadier\")\nconst {\
      \ NixJob, extractSecret, saveSecrets, buildNixExpression } = require('brigade-extension')\n\
      \nprocess.env.BRIGADE_COMMIT_REF = \"brigade-resource-generation\"\nconsole.log('@@@',\
      \ process.env)\n// https://github.com/github/hub\n\n// git clone https://bitbucket.org/da20076774/k8s-infra-descriptors\n\
      \n// https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests\n\
      // remote: upstream\n// curl \\ \n// -X POST \\\n// -H \"Content-Type: application/json\"\
      \ \\\n// -u username:password \\\n//  https://bitbucket.org/api/2.0/repositories/account/reponame/pullrequests\
      \ \\\n// -d @pullrequest.json\nconst mkPR = () => ({\n  \"title\": \"Merge some\
      \ branches\",\n  \"description\": \"Test PR\",\n  \"source\": {\n    \"branch\"\
      : {\n      \"name\": \"test-pr\"\n    },\n    \"repository\": {\n      \"full_name\"\
      : \"da20076774/k8s-infra-descriptors\"\n    }\n  },\n  \"destination\": {\n\
      \    \"branch\": {\n      \"name\": \"master\"\n    }\n  },\n  \"close_source_branch\"\
      : false,\n})\n// \"reviewers\": [{ \"uuid\": \"5ca229f597a12b0e40270999\" }],\n\
      // damian_baar\n\n// const _pushCommit = (cloneURL, buildID) => `\n// hub remote\
      \ add origin ${cloneURL}\n// hub push origin update-deployment-${buildID}\n\
      // `;\n\n// git config remote.origin.url https://$user:$pass@bitbucket.org/$user/k8s-infra-descriptors.git\n\
      const _hubCredentials = () => `\nuser=$(${extractSecret('bitbucket.user')})\n\
      pass=$(${extractSecret('bitbucket.pass')})\n\ngit config --global user.email\
      \ \"damian.baar@wipro.com\"\ngit config --global user.name \"CI bot\"\n\ngit\
      \ clone https://$user:$pass@bitbucket.org/damian_baar/k8s-infra-descriptors.git\n\
      \ncd k8s-infra-descriptors\n\ngit checkout -b test-pr\necho \"test\" > test.file\n\
      git add -A\ngit commit -m \"test commit\"\n\ngit request-pull master ./\n\n\
      git push --set-upstream origin test-pr\ngit push\n\ncurl \\\n  -X POST \\\n\
      \  -H \"Content-Type: application/json\" \\\n  -u $user:$pass \\\n  https://bitbucket.org/api/2.0/repositories/damian_baar/k8s-infra-descriptors/pullrequests\
      \ \\\n  -d '${JSON.stringify(mkPR())}'\n`;\n// git remote set-url origin https://$user:$pass@bitbucket.org/da20076774/k8s-infra-descriptors.git\
      \ \n// git request-pull v1.0 https://git.ko.xz/project master\n// git config\
      \ remote.origin.url https://{USERNAME}:{PASSWORD}@github.com/{USERNAME}/{REPONAME}.git\n\
      \n\n// saveSecrets('secrets.json'),\n// `cat secrets.json`,\nconst createJob\
      \ = (name) =>\n  new NixJob(name)\n    .withExtraParams({\n      streamLogs:\
      \ true,\n      privileged: true,\n      shell: 'bash',\n      serviceAccount:\
      \ \"brigade-worker\"\n    })\n    .withTasks([\n      // _hubCredentials(),\n\
      \      `cd /src/pipeline`,\n      buildNixExpression('shell.nix', 'testScript'),\n\
      \      `./result/bin/test-script`,\n      // `kubectl get pods -A`\n    ])\n\
      \nevents.on(\"exec\", (event, project) => {\n  let test =\n    createJob(\"\
      test\")\n      .withSecrets(project.secrets)\n\n  test.run()\n})\n\nevents.on(\"\
      push\", (event, project) => {\n  let test = createJob(\"test\")\n    .withSecrets(project.secrets)\n\
      \n  test.run()\n})\n"
    genericGatewaySecret: mygenericsecret
    initGitSubmodules: 'false'
    kubernetes.buildStorageClass: build-storage
    kubernetes.cacheStorageClass: cache-storage
    repository: embracing-nix-docker-k8s-helm-knative
    secrets: '{"awsAccessKey":"","awsRegion":"","awsSecretKey":"","cacheBucket":"future-is-comming-worker-binary-store","gitToken":"-----BEGIN
      OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAQEA9Gky510zB4Lezg/OwGiGgLL/r2ZT1EbDefW9jbeCplTZnjmOgiS6\naq3GMyfmBmH5/LmnYUwP3iaILA7S+8fGmHnDBr03t5vBxFo800FXdTzXHeKqckmCR8sBhX\niGmzjHo43i6WMjDCt6vDJ3Oa9LHKdHCq4EW1SChksEdk/LmECMzyLMaQ2cQtc6RxpGT0xR\n42geoSY+bOE/T/ZH/hXz7fIz8f+gAVOSZmZBhvGV1YEFvvWbcc0MlNu+N/5AKfqwGFQwlc\np92qjN809I3RQNJ7GDlzzQUOPt4mnX2i2PJA5WFWD7gMpqHZbiG0rieQEdJcl/DvLjIX9/\nXALNK/F8tQAAA+B7BTx9ewU8fQAAAAdzc2gtcnNhAAABAQD0aTLnXTMHgt7OD87AaIaAsv\n+vZlPURsN59b2Nt4KmVNmeOY6CJLpqrcYzJ+YGYfn8uadhTA/eJogsDtL7x8aYecMGvTe3\nm8HEWjzTQVd1PNcd4qpySYJHywGFeIabOMejjeLpYyMMK3q8Mnc5r0scp0cKrgRbVIKGSw\nR2T8uYQIzPIsxpDZxC1zpHGkZPTFHjaB6hJj5s4T9P9kf+FfPt8jPx/6ABU5JmZkGG8ZXV\ngQW+9ZtxzQyU2743/kAp+rAYVDCVyn3aqM3zT0jdFA0nsYOXPNBQ4+3iadfaLY8kDlYVYP\nuAymodluIbSuJ5AR0lyX8O8uMhf39cAs0r8Xy1AAAAAwEAAQAAAQAWPuD4N/5mB55Z6Qxr\nbNgZLLGi+FBW+N3f4uMO3A4TL5PjF+AFrmwdO5XXoCEKoa5MN2WpsG+dS6qHQA4qBoPn6u\nU6XsyMdKvNQF1a6Q6ZyCDYQoI7Br/J4wtPZ6nwxNk+5LIrhe9xsx9ns7wwTukqQXtw2Gfj\nHC0JJhjQ3/Bq+f+NS166LBCse5O15uXmY+kL3frGxLDtXIsl/uD06bk9Zc6pNFopwG3WVO\nuanKSaZmP/6C7bbIbouGagc3y0TJLu904QSBQHzOfaz9oaBQLryyMdn5GHZdtGFt86lI63\ncJr89jwY4ZBi9ClwvwXWZJZz0lzmwBRzDQQzSauh7tP9AAAAgHHxuD1mWEegr6tVOnCc4J\nwgANDbwhC8AuWP/6EuU0vJi1X3b/RFIlM/14BNPmo4R5JGEn+h8cwEhX+1lldM11iPyfeQ\nrUB9iSVKJEqPlNsV4FI7KUfPSW4lzW3Ev6taI+cK45zrpfyY4azpHd7+KoioLLvcCO5nWA\n2GYFKTMueqAAAAgQD9JOEE/7zgjORzz2cR7dg1sCciYJ1LKX76n5GzEOWuJjGows/zj7DU\naplMU03PNrwOSnTX0wGjZfNGbq3uuyHYAOtZrkAO9m+RUZWDg2VaqxEjg7rWFdy7naVhze\n1vyRzvTu/2QN6uISTccCbVqHl7SFIJ+BtY/ztBC0SC2F1WKwAAAIEA9ysY4MuEtl2SSh3O\nQDahaWrfiT7MV9DGdSmA6LWf76QADvBl56o3xIRqd02jCXup3mv0ZIh2E9qFGaH/MsGqOe\ntH1cNxA03CXxsxg1l2hXmppjZ/p0X/kju/pAkVc0IUiDng8g+RYeyK5agH6hOtO/Zoyqkw\nlXVVfDtKVPym6J8AAAAkZGFtaWFuYmFhckBEYW1pYW5zLU1hY0Jvb2stUHJvLmxvY2FsAQ\nIDBAUGBw==\n-----END
      OPENSSH PRIVATE KEY-----\n","gitUser":"damian.baar@wipro.com","sopsSecrets":"{\n\t\"bitbucket\":
      {\n\t\t\"user\": \"ENC[AES256_GCM,data:3nI/zKGnlDywP+g=,iv:+ZVqJvRrSf22cvRgSOVOe8smx1y6FwYRAoNxMPUMwfs=,tag:B/hSNsOGgVNVLlYt2S2DGQ==,type:str]\",\n\t\t\"pass\":
      \"ENC[AES256_GCM,data:zaxX9rJB3hn62bruXcexsi9oZCs=,iv:k2y54rZTGrK2JbcgNWVYhlzTSOKw9Eh1jMInRTScosk=,tag:f6htlS2Ah3GHrLi909F/WA==,type:str]\"\n\t},\n\t\"docker\":
      {\n\t\t\"user\": \"ENC[AES256_GCM,data:Hjuv97Xp,iv:FwHG472//MwaTD0wuRl65tP0ve4WZKpF7HEqyDzmYxA=,tag:mlSfk4zt8LRhTB95i409jg==,type:str]\",\n\t\t\"pass\":
      \"ENC[AES256_GCM,data:29BcVYov,iv:aa+eoZ8ZZyXI5pEjCxzMxAVyap55ZxdpCB/S0Lv6S+o=,tag:CSQhk9W7Y8jbuMP/TGrksw==,type:str]\"\n\t},\n\t\"sops\":
      {\n\t\t\"kms\": [\n\t\t\t{\n\t\t\t\t\"arn\": \"arn:aws:kms:eu-west-2:006393696278:key/e4fb3b77-a681-4f61-a7a7-9df51d1a22c3\",\n\t\t\t\t\"created_at\":
      \"2019-05-30T08:53:28Z\",\n\t\t\t\t\"enc\": \"AQICAHjS6PwEx20O7P4yh35aJPfmzi4aw4Y6O7J374+k6zIsWgFsa5b6GS8qxZzcQr83Bf7sAAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMvwZWKpDsNI/eWmcwAgEQgDtQoEeq7UBHlW8tbt2gx65BAdO6XIw3beyBl0NJNvbW+m9QeyVbgvgFlTWWpy+vhNW4Kh0cAOCLdtI2yg==\",\n\t\t\t\t\"aws_profile\":
      \"\"\n\t\t\t}\n\t\t],\n\t\t\"gcp_kms\": null,\n\t\t\"azure_kv\": null,\n\t\t\"lastmodified\":
      \"2019-07-09T09:30:50Z\",\n\t\t\"mac\": \"ENC[AES256_GCM,data:1cCSU6F0h/Uvfwj8vRFL0ac6eqs+PweR6VGpN+4cRDbO0nVVM4tiGashH40vUZg6OhzZ0odhdCFaCZfkq+DJHcTvp4z+/IrDIw7TZF7g+kAByqEoF/caSzVVhU6CLurQtaoDAwm1saIDrN5iU+8K2dnXCWQarWSTo6+c18BL8s4=,iv:hp59qi1qrFJFU11+C80K5CAkQd0gR75BPy+btKUURf8=,tag:FfEKlGLdD4Cg+aKI98cEQw==,type:str]\",\n\t\t\"pgp\":
      null,\n\t\t\"unencrypted_suffix\": \"_unencrypted\",\n\t\t\"version\": \"3.3.1\"\n\t}\n}","workerDockerImage":"docker.io/gatehub/brigade/remote-worker:0.0.1"}'
    sharedSecret: ''
    sshKey: '-----BEGIN OPENSSH PRIVATE KEY-----$b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn$NhAAAAAwEAAQAAAQEA9Gky510zB4Lezg/OwGiGgLL/r2ZT1EbDefW9jbeCplTZnjmOgiS6$aq3GMyfmBmH5/LmnYUwP3iaILA7S+8fGmHnDBr03t5vBxFo800FXdTzXHeKqckmCR8sBhX$iGmzjHo43i6WMjDCt6vDJ3Oa9LHKdHCq4EW1SChksEdk/LmECMzyLMaQ2cQtc6RxpGT0xR$42geoSY+bOE/T/ZH/hXz7fIz8f+gAVOSZmZBhvGV1YEFvvWbcc0MlNu+N/5AKfqwGFQwlc$p92qjN809I3RQNJ7GDlzzQUOPt4mnX2i2PJA5WFWD7gMpqHZbiG0rieQEdJcl/DvLjIX9/$XALNK/F8tQAAA+B7BTx9ewU8fQAAAAdzc2gtcnNhAAABAQD0aTLnXTMHgt7OD87AaIaAsv$+vZlPURsN59b2Nt4KmVNmeOY6CJLpqrcYzJ+YGYfn8uadhTA/eJogsDtL7x8aYecMGvTe3$m8HEWjzTQVd1PNcd4qpySYJHywGFeIabOMejjeLpYyMMK3q8Mnc5r0scp0cKrgRbVIKGSw$R2T8uYQIzPIsxpDZxC1zpHGkZPTFHjaB6hJj5s4T9P9kf+FfPt8jPx/6ABU5JmZkGG8ZXV$gQW+9ZtxzQyU2743/kAp+rAYVDCVyn3aqM3zT0jdFA0nsYOXPNBQ4+3iadfaLY8kDlYVYP$uAymodluIbSuJ5AR0lyX8O8uMhf39cAs0r8Xy1AAAAAwEAAQAAAQAWPuD4N/5mB55Z6Qxr$bNgZLLGi+FBW+N3f4uMO3A4TL5PjF+AFrmwdO5XXoCEKoa5MN2WpsG+dS6qHQA4qBoPn6u$U6XsyMdKvNQF1a6Q6ZyCDYQoI7Br/J4wtPZ6nwxNk+5LIrhe9xsx9ns7wwTukqQXtw2Gfj$HC0JJhjQ3/Bq+f+NS166LBCse5O15uXmY+kL3frGxLDtXIsl/uD06bk9Zc6pNFopwG3WVO$uanKSaZmP/6C7bbIbouGagc3y0TJLu904QSBQHzOfaz9oaBQLryyMdn5GHZdtGFt86lI63$cJr89jwY4ZBi9ClwvwXWZJZz0lzmwBRzDQQzSauh7tP9AAAAgHHxuD1mWEegr6tVOnCc4J$wgANDbwhC8AuWP/6EuU0vJi1X3b/RFIlM/14BNPmo4R5JGEn+h8cwEhX+1lldM11iPyfeQ$rUB9iSVKJEqPlNsV4FI7KUfPSW4lzW3Ev6taI+cK45zrpfyY4azpHd7+KoioLLvcCO5nWA$2GYFKTMueqAAAAgQD9JOEE/7zgjORzz2cR7dg1sCciYJ1LKX76n5GzEOWuJjGows/zj7DU$aplMU03PNrwOSnTX0wGjZfNGbq3uuyHYAOtZrkAO9m+RUZWDg2VaqxEjg7rWFdy7naVhze$1vyRzvTu/2QN6uISTccCbVqHl7SFIJ+BtY/ztBC0SC2F1WKwAAAIEA9ysY4MuEtl2SSh3O$QDahaWrfiT7MV9DGdSmA6LWf76QADvBl56o3xIRqd02jCXup3mv0ZIh2E9qFGaH/MsGqOe$tH1cNxA03CXxsxg1l2hXmppjZ/p0X/kju/pAkVc0IUiDng8g+RYeyK5agH6hOtO/Zoyqkw$lXVVfDtKVPym6J8AAAAkZGFtaWFuYmFhckBEYW1pYW5zLU1hY0Jvb2stUHJvLmxvY2FsAQ$IDBAUGBw==$-----END
      OPENSSH PRIVATE KEY-----$'
    vcsSidecar: brigadecore/git-sidecar:latest
    worker.name: brigade/brigade-worker
    worker.pullPolicy: IfNotPresent
    worker.registry: docker.io/gatehub
    worker.tag: 0.0.1
    workerCommand: yarn build-start
  type: brigade.sh/project
- apiVersion: v1
  data:
    haSharedSecret: M2k0Z1lGdUthY0ZxajZJMA==
  kind: Secret
  metadata:
    labels:
      app: docker-registry
      chart: docker-registry-1.8.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: docker-registry
    name: docker-registry-secret
    namespace: local-infra
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      chart: brigade-bitbucket-gateway-0.13.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade-bitbucket-gateway
      role: gateway
      type: bitbucket
    name: brigade-bitbucket-gateway-brigade-bitbucket-gateway
    namespace: brigade
  spec:
    ports:
    - name: service
      port: 7748
      protocol: TCP
      targetPort: 7748
    selector:
      app: brigade-bitbucket-gateway-brigade-bitbucket-gateway
      role: gateway
      type: bitbucket
    type: NodePort
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      role: api
    name: brigade-brigade-api
    namespace: brigade
  spec:
    ports:
    - name: brigade-api
      port: 7745
      protocol: TCP
      targetPort: 7745
    selector:
      app.kubernetes.io/name: brigade-brigade-api
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kashti
      chart: kashti-0.1.1
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade
    name: brigade-kashti
    namespace: brigade
  spec:
    ports:
    - name: kashti
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: kashti
      release: brigade
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: docker-registry
      chart: docker-registry-1.8.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: docker-registry
    name: docker-registry
    namespace: local-infra
  spec:
    ports:
    - name: registry
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      app: docker-registry
      release: docker-registry
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      istio: citadel
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel
    namespace: istio-system
  spec:
    ports:
    - name: http-monitoring
      port: 15014
    - name: grpc-citadel
      port: 8060
      protocol: TCP
      targetPort: 8060
    selector:
      istio: citadel
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      istio: galley
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley
    namespace: istio-system
  spec:
    ports:
    - name: http-monitoring
      port: 15014
    - name: https-validation
      port: 443
    - name: grpc-mcp
      port: 9901
    selector:
      istio: galley
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      istio: ingressgateway
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway
    namespace: istio-system
  spec:
    ports:
    - name: status-port
      port: 15020
      targetPort: 15020
    - name: https-kiali
      port: 15029
      targetPort: 15029
    - name: https-prometheus
      port: 15030
      targetPort: 15030
    - name: https-grafana
      port: 15031
      targetPort: 15031
    - name: https-tracing
      port: 15032
      targetPort: 15032
    - name: tls
      port: 15443
      targetPort: 15443
    - name: tcp
      nodePort: 31400
      port: 31400
    - name: https
      nodePort: 31390
      port: 443
    - name: http2
      nodePort: 31380
      port: 80
      targetPort: 80
    selector:
      app: istio-ingressgateway
      istio: ingressgateway
      release: istio
    type: NodePort
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      istio: pilot
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot
    namespace: istio-system
  spec:
    ports:
    - name: grpc-xds
      port: 15010
    - name: https-xds
      port: 15011
    - name: http-monitoring
      port: 15014
    - name: http-legacy-discovery
      port: 8080
    selector:
      istio: pilot
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      networking.istio.io/exportTo: '*'
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      istio: mixer
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-policy
    namespace: istio-system
  spec:
    ports:
    - name: grpc-mixer-mtls
      port: 15004
    - name: http-monitoring
      port: 15014
    - name: grpc-mixer
      port: 9091
    selector:
      istio: mixer
      istio-mixer-type: policy
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
  spec:
    ports:
    - port: 443
    selector:
      istio: sidecar-injector
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      networking.istio.io/exportTo: '*'
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      istio: mixer
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-telemetry
    namespace: istio-system
  spec:
    ports:
    - name: grpc-mixer-mtls
      port: 15004
    - name: http-monitoring
      port: 15014
    - name: prometheus
      port: 42422
    - name: grpc-mixer
      port: 9091
    selector:
      istio: mixer
      istio-mixer-type: telemetry
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: monitoring-gateway
      chart: gateways
      heritage: Tiller
      istio: monitoring-ingressgateway
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: monitoring-gateway
    namespace: istio-system
  spec:
    ports:
    - name: grafana-port
      nodePort: 31300
      port: 15300
      targetPort: 15300
    - name: weavescope-port
      nodePort: 31301
      port: 15301
      targetPort: 15301
    - name: zipkin-port
      nodePort: 31302
      port: 15302
      targetPort: 15302
    selector:
      app: monitoring-gateway
      istio: monitoring-ingressgateway
      release: istio
    type: NodePort
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: 'true'
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: prometheus
    namespace: istio-system
  spec:
    ports:
    - name: http-prometheus
      port: 9090
      protocol: TCP
    selector:
      app: prometheus
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.weave.works/launcher-info: "{\n  \"server-version\": \"master-4fe8efe\"\
        ,\n  \"original-request\": {\n    \"url\": \"/k8s/v1.7/scope.yaml\"\n  },\n\
        \  \"email-address\": \"support@weave.works\",\n  \"source-app\": \"weave-scope\"\
        ,\n  \"weave-cloud-component\": \"scope\"\n}"
    labels:
      app: weave-scope
      chart: weave-scope-frontend-1.1.2
      component: frontend
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: weave-scope
    name: weave-scope-app
    namespace: istio-system
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app: weave-scope
      component: frontend
      release: weave-scope
    type: ClusterIP
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: brigade-bitbucket-gateway-brigade-bitbucket-gateway
      chart: brigade-bitbucket-gateway-0.13.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade-bitbucket-gateway
    name: brigade-bitbucket-gateway-brigade-bitbucket-gateway
    namespace: brigade
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-api
    namespace: brigade
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-ctrl
    namespace: brigade
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-vacuum
    namespace: brigade
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-worker
    namespace: brigade
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      helm.sh/hook: post-delete
      helm.sh/hook-delete-policy: hook-succeeded
      helm.sh/hook-weight: '1'
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-cleanup-secrets-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-mixer-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: istio-multi
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-post-install-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: monitoring-gateway
      chart: gateways
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: monitoring-gateway-service-account
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: prometheus
    namespace: istio-system
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      cloud.weave.works/launcher-info: "{\n  \"server-version\": \"master-4fe8efe\"\
        ,\n  \"original-request\": {\n    \"url\": \"/k8s/v1.7/scope.yaml\"\n  },\n\
        \  \"email-address\": \"support@weave.works\",\n  \"source-app\": \"weave-scope\"\
        ,\n  \"weave-cloud-component\": \"scope\"\n}"
    labels:
      app: weave-scope
      chart: weave-scope-agent-1.1.2
      component: agent
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: weave-scope
    name: weave-scope-agent-weave-scope
    namespace: istio-system
- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    annotations:
      cloud.weave.works/launcher-info: "{\n  \"server-version\": \"master-4fe8efe\"\
        ,\n  \"original-request\": {\n    \"url\": \"/k8s/v1.7/scope.yaml\"\n  },\n\
        \  \"email-address\": \"support@weave.works\",\n  \"source-app\": \"weave-scope\"\
        ,\n  \"weave-cloud-component\": \"scope\"\n}"
    labels:
      app: weave-scope
      chart: weave-scope-agent-1.1.2
      component: agent
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: weave-scope
    name: weave-scope-agent-weave-scope
    namespace: istio-system
  spec:
    selector:
      matchLabels:
        app: weave-scope
        component: agent
        release: weave-scope
    template:
      metadata:
        labels:
          app: weave-scope
          chart: weave-scope-agent-1.1.2
          component: agent
          heritage: Tiller
          release: weave-scope
      spec:
        containers:
        - args:
          - --no-app
          - --probe.docker.bridge=docker0
          - --probe.docker=true
          - --probe.kubernetes=true
          - weave-scope-app.istio-system.svc:80
          image: weaveworks/scope:1.11.2
          imagePullPolicy: IfNotPresent
          name: weave-scope-agent
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /sys/kernel/debug
            name: sys-kernel-debug
          - mountPath: /var/run/docker.sock
            name: docker-socket
          - mountPath: /var/run/scope/plugins
            name: scope-plugins
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        hostPID: true
        serviceAccountName: weave-scope-agent-weave-scope
        tolerations:
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: docker-socket
        - hostPath:
            path: /var/run/scope/plugins
          name: scope-plugins
        - hostPath:
            path: /sys/kernel/debug
          name: sys-kernel-debug
    updateStrategy:
      type: RollingUpdate
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: brigade-bitbucket-gateway-brigade-bitbucket-gateway
      chart: brigade-bitbucket-gateway-0.13.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade-bitbucket-gateway
      role: gateway
      type: bitbucket
    name: brigade-bitbucket-gateway-brigade-bitbucket-gateway
    namespace: brigade
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: brigade-bitbucket-gateway-brigade-bitbucket-gateway
          role: gateway
          type: bitbucket
      spec:
        containers:
        - env:
          - name: BRIGADE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: BRIGADE_bitbucket_GATEWAY_PORT
            value: '7748'
          image: lukepatrick/brigade-bitbucket-gateway:v0.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            tcpSocket:
              port: 7748
          name: brigade-bitbucket-gateway
          ports:
          - containerPort: 7748
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            tcpSocket:
              port: 7748
        serviceAccountName: brigade-bitbucket-gateway-brigade-bitbucket-gateway
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade-api
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      role: api
    name: brigade-brigade-api
    namespace: brigade
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: brigade-brigade-api
          app.kubernetes.io/name: brigade-brigade-api
          role: api
      spec:
        containers:
        - env:
          - name: BRIGADE_API_PORT
            value: '7745'
          - name: BRIGADE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: brigadecore/brigade-api:v1.0.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 7745
          name: brigade
          ports:
          - containerPort: 7745
          readinessProbe:
            httpGet:
              path: /healthz
              port: 7745
        serviceAccountName: brigade-brigade-api
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade-ctrl
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      role: controller
    name: brigade-brigade-ctrl
    namespace: brigade
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: brigade-brigade-ctrl
          app.kubernetes.io/name: brigade-brigade-ctrl
          role: controller
      spec:
        containers:
        - command:
          - /usr/bin/brigade-controller
          env:
          - name: BRIGADE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: BRIGADE_WORKER_IMAGE
            value: brigadecore/brigade-worker:v1.0.0
          - name: BRIGADE_WORKER_PULL_POLICY
            value: IfNotPresent
          - name: BRIGADE_WORKER_SERVICE_ACCOUNT
            value: brigade-worker
          image: brigadecore/brigade-controller:v1.0.0
          imagePullPolicy: IfNotPresent
          name: brigade
        serviceAccountName: brigade-brigade-ctrl
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: kashti
      chart: kashti-0.1.1
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade
    name: brigade-kashti
    namespace: brigade
  spec:
    replicas: 1
    template:
      metadata:
        annotations:
          checksum/config-js: 9cde6c482cde51f90bedd39f3e0ff4c2b2efb8bb4b9371d40d524d43e9177c75
          checksum/config-nginx: bbee88e5bed89e1b1e9a49db9acae7fe7feeeb4dfe59b9690bd7e54287dcd6b9
        labels:
          app: kashti
          release: brigade
      spec:
        containers:
        - image: brigadecore/kashti:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 80
          name: kashti
          ports:
          - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources: {}
          volumeMounts:
          - mountPath: /etc/nginx/conf.d
            name: config-nginx
          - mountPath: /usr/share/nginx/html/assets/js/settings
            name: config-js
        volumes:
        - configMap:
            name: brigade-kashti-js
          name: config-js
        - configMap:
            name: brigade-kashti-nginx
          name: config-nginx
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: docker-registry
      chart: docker-registry-1.8.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: docker-registry
    name: docker-registry
    namespace: local-infra
  spec:
    minReadySeconds: 5
    replicas: 1
    template:
      metadata:
        annotations:
          checksum/config: 9c8d640255ee2efa6f5140dff28944f66733dea06e28429aee7dfee42c436b85
        labels:
          app: docker-registry
          release: docker-registry
      spec:
        containers:
        - command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          env:
          - name: REGISTRY_HTTP_SECRET
            valueFrom:
              secretKeyRef:
                key: haSharedSecret
                name: docker-registry-secret
          - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
            value: /var/lib/registry
          image: registry:2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          name: docker-registry
          ports:
          - containerPort: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources: {}
          volumeMounts:
          - mountPath: /etc/docker/registry
            name: docker-registry-config
          - mountPath: /var/lib/registry/
            name: data
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        volumes:
        - emptyDir: {}
          name: data
        - configMap:
            name: docker-registry-config
          name: docker-registry-config
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      istio: citadel
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel
    namespace: istio-system
  spec:
    replicas: 1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: security
          chart: security
          heritage: Tiller
          istio: citadel
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - --append-dns-names=true
          - --grpc-port=8060
          - --grpc-hostname=citadel
          - --citadel-storage-namespace=istio-system
          - --custom-dns-names=istio-pilot-service-account.istio-system:istio-pilot.istio-system
          - --monitoring-port=15014
          - --self-signed-ca=true
          image: docker.io/istio/citadel:1.1.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /version
              port: 15014
            initialDelaySeconds: 5
            periodSeconds: 5
          name: citadel
          resources:
            requests:
              cpu: 10m
        serviceAccountName: istio-citadel-service-account
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      istio: galley
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley
    namespace: istio-system
  spec:
    replicas: 1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: galley
          chart: galley
          heritage: Tiller
          istio: galley
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - command:
          - /usr/local/bin/galley
          - server
          - --meshConfigFile=/etc/mesh-config/mesh
          - --livenessProbeInterval=1s
          - --livenessProbePath=/healthliveness
          - --readinessProbePath=/healthready
          - --readinessProbeInterval=1s
          - --deployment-namespace=istio-system
          - --insecure=true
          - --validation-webhook-config-file
          - /etc/config/validatingwebhookconfiguration.yaml
          - --monitoringPort=15014
          - --log_output_level=default:info
          image: docker.io/istio/galley:1.1.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/local/bin/galley
              - probe
              - --probe-path=/healthliveness
              - --interval=10s
            initialDelaySeconds: 5
            periodSeconds: 5
          name: galley
          ports:
          - containerPort: 15014
          - containerPort: 443
          - containerPort: 9901
          readinessProbe:
            exec:
              command:
              - /usr/local/bin/galley
              - probe
              - --probe-path=/healthready
              - --interval=10s
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/certs
            name: certs
            readOnly: true
          - mountPath: /etc/config
            name: config
            readOnly: true
          - mountPath: /etc/mesh-config
            name: mesh-config
            readOnly: true
        serviceAccountName: istio-galley-service-account
        volumes:
        - name: certs
          secret:
            secretName: istio.istio-galley-service-account
        - configMap:
            name: istio-galley-configuration
          name: config
        - configMap:
            name: istio
          name: mesh-config
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      istio: ingressgateway
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway
    namespace: istio-system
  spec:
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: istio-ingressgateway
          chart: gateways
          heritage: Tiller
          istio: ingressgateway
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --log_output_level=default:info
          - --drainDuration
          - 45s
          - --parentShutdownDuration
          - 1m0s
          - --connectTimeout
          - 10s
          - --serviceCluster
          - istio-ingressgateway
          - --zipkinAddress
          - zipkin:9411
          - --proxyAdminPort
          - '15000'
          - --statusPort
          - '15020'
          - --controlPlaneAuthPolicy
          - NONE
          - --discoveryAddress
          - istio-pilot:15010
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_ROUTER_MODE
            value: sni-dnat
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/proxyv2:1.1.9
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15020
          - containerPort: 15029
          - containerPort: 15030
          - containerPort: 15031
          - containerPort: 15032
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          - containerPort: 15443
          - containerPort: 31400
          - containerPort: 443
          - containerPort: 80
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-ca-certs
            name: ingressgateway-ca-certs
            readOnly: true
          - mountPath: /etc/istio/ingressgateway-certs
            name: ingressgateway-certs
            readOnly: true
        serviceAccountName: istio-ingressgateway-service-account
        volumes:
        - name: ingressgateway-ca-certs
          secret:
            optional: true
            secretName: istio-ingressgateway-ca-certs
        - name: ingressgateway-certs
          secret:
            optional: true
            secretName: istio-ingressgateway-certs
        - name: istio-certs
          secret:
            optional: true
            secretName: istio.istio-ingressgateway-service-account
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      checksum/config-volume: f8da08b6b8c170dde721efd680270b2901e750d4aa186ebb6c22bef5b78a43f9
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      istio: pilot
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot
    namespace: istio-system
  spec:
    selector:
      matchLabels:
        istio: pilot
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: pilot
          chart: pilot
          heritage: Tiller
          istio: pilot
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - discovery
          - --monitoringAddr=:15014
          - --log_output_level=default:info
          - --domain
          - cluster.local
          - --secureGrpcAddr
          - ''
          - --keepaliveMaxServerConnectionAge
          - 30m
          env:
          - name: GODEBUG
            value: gctrace=1
          - name: PILOT_DISABLE_XDS_MARSHALING_TO_ANY
            value: '1'
          - name: PILOT_PUSH_THROTTLE
            value: '100'
          - name: PILOT_TRACE_SAMPLING
            value: '100'
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/pilot:1.1.9
          imagePullPolicy: IfNotPresent
          name: discovery
          ports:
          - containerPort: 15010
          - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 2048Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /etc/istio/config
            name: config-volume
        - args:
          - proxy
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --serviceCluster
          - istio-pilot
          - --templateFile
          - /etc/istio/proxy/envoy_pilot.yaml.tmpl
          - --controlPlaneAuthPolicy
          - NONE
          env:
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/proxyv2:1.1.9
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15003
          - containerPort: 15005
          - containerPort: 15007
          - containerPort: 15011
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
        serviceAccountName: istio-pilot-service-account
        volumes:
        - configMap:
            name: istio
          name: config-volume
        - name: istio-certs
          secret:
            optional: true
            secretName: istio.istio-pilot-service-account
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: istio-mixer
      chart: mixer
      heritage: Tiller
      istio: mixer
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-policy
    namespace: istio-system
  spec:
    selector:
      matchLabels:
        istio: mixer
        istio-mixer-type: policy
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: policy
          chart: mixer
          heritage: Tiller
          istio: mixer
          istio-mixer-type: policy
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - proxy
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --serviceCluster
          - istio-policy
          - --templateFile
          - /etc/istio/proxy/envoy_policy.yaml.tmpl
          - --controlPlaneAuthPolicy
          - NONE
          env:
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/proxyv2:1.1.9
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15004
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          - containerPort: 9091
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /sock
            name: uds-socket
          - mountPath: /var/run/secrets/istio.io/policy/adapter
            name: policy-adapter-secret
            readOnly: true
        - args:
          - --monitoringPort=15014
          - --address
          - unix:///sock/mixer.socket
          - --log_output_level=default:info
          - --configStoreURL=mcp://istio-galley.istio-system.svc:9901
          - --configDefaultNamespace=istio-system
          - --useAdapterCRDs=false
          - --trace_zipkin_url=http://zipkin:9411/api/v1/spans
          env:
          - name: GODEBUG
            value: gctrace=1
          - name: GOMAXPROCS
            value: '6'
          image: docker.io/istio/mixer:1.1.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /version
              port: 15014
            initialDelaySeconds: 5
            periodSeconds: 5
          name: mixer
          ports:
          - containerPort: 15014
          - containerPort: 42422
          resources:
            requests:
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /sock
            name: uds-socket
        serviceAccountName: istio-mixer-service-account
        volumes:
        - name: istio-certs
          secret:
            optional: true
            secretName: istio.istio-mixer-service-account
        - name: policy-adapter-secret
          secret:
            optional: true
            secretName: policy-adapter-secret
        - emptyDir: {}
          name: uds-socket
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector
    namespace: istio-system
  spec:
    replicas: 1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: sidecarInjectorWebhook
          chart: sidecarInjectorWebhook
          heritage: Tiller
          istio: sidecar-injector
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - --caCertFile=/etc/istio/certs/root-cert.pem
          - --tlsCertFile=/etc/istio/certs/cert-chain.pem
          - --tlsKeyFile=/etc/istio/certs/key.pem
          - --injectConfig=/etc/istio/inject/config
          - --meshConfig=/etc/istio/config/mesh
          - --healthCheckInterval=2s
          - --healthCheckFile=/health
          image: docker.io/istio/sidecar_injector:1.1.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/local/bin/sidecar-injector
              - probe
              - --probe-path=/health
              - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          name: sidecar-injector-webhook
          readinessProbe:
            exec:
              command:
              - /usr/local/bin/sidecar-injector
              - probe
              - --probe-path=/health
              - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          resources:
            requests:
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/istio/certs
            name: certs
            readOnly: true
          - mountPath: /etc/istio/config
            name: config-volume
            readOnly: true
          - mountPath: /etc/istio/inject
            name: inject-config
            readOnly: true
        serviceAccountName: istio-sidecar-injector-service-account
        volumes:
        - name: certs
          secret:
            secretName: istio.istio-sidecar-injector-service-account
        - configMap:
            name: istio
          name: config-volume
        - configMap:
            items:
            - key: config
              path: config
            name: istio-sidecar-injector
          name: inject-config
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: istio-mixer
      chart: mixer
      heritage: Tiller
      istio: mixer
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-telemetry
    namespace: istio-system
  spec:
    selector:
      matchLabels:
        istio: mixer
        istio-mixer-type: telemetry
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: telemetry
          chart: mixer
          heritage: Tiller
          istio: mixer
          istio-mixer-type: telemetry
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - proxy
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --serviceCluster
          - istio-telemetry
          - --templateFile
          - /etc/istio/proxy/envoy_telemetry.yaml.tmpl
          - --controlPlaneAuthPolicy
          - NONE
          env:
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/proxyv2:1.1.9
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15004
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          - containerPort: 9091
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /sock
            name: uds-socket
        - args:
          - --monitoringPort=15014
          - --address
          - unix:///sock/mixer.socket
          - --log_output_level=default:info
          - --configStoreURL=mcp://istio-galley.istio-system.svc:9901
          - --configDefaultNamespace=istio-system
          - --useAdapterCRDs=false
          - --trace_zipkin_url=http://zipkin:9411/api/v1/spans
          - --averageLatencyThreshold
          - 100ms
          - --loadsheddingMode
          - enforce
          env:
          - name: GODEBUG
            value: gctrace=1
          - name: GOMAXPROCS
            value: '6'
          image: docker.io/istio/mixer:1.1.9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /version
              port: 15014
            initialDelaySeconds: 5
            periodSeconds: 5
          name: mixer
          ports:
          - containerPort: 15014
          - containerPort: 42422
          resources:
            limits:
              cpu: 4800m
              memory: 4G
            requests:
              cpu: 1000m
              memory: 1G
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
          - mountPath: /sock
            name: uds-socket
          - mountPath: /var/run/secrets/istio.io/telemetry/adapter
            name: telemetry-adapter-secret
            readOnly: true
        serviceAccountName: istio-mixer-service-account
        volumes:
        - name: istio-certs
          secret:
            optional: true
            secretName: istio.istio-mixer-service-account
        - name: telemetry-adapter-secret
          secret:
            optional: true
            secretName: telemetry-adapter-secret
        - emptyDir: {}
          name: uds-socket
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: monitoring-gateway
      chart: gateways
      heritage: Tiller
      istio: monitoring-ingressgateway
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: monitoring-gateway
    namespace: istio-system
  spec:
    replicas: 1
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: monitoring-gateway
          chart: gateways
          heritage: Tiller
          istio: monitoring-ingressgateway
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - proxy
          - router
          - --domain
          - $(POD_NAMESPACE).svc.cluster.local
          - --log_output_level=default:info
          - --drainDuration
          - 45s
          - --parentShutdownDuration
          - 1m0s
          - --connectTimeout
          - 10s
          - --serviceCluster
          - monitoring-gateway
          - --zipkinAddress
          - zipkin:9411
          - --proxyAdminPort
          - '15000'
          - --statusPort
          - '15020'
          - --controlPlaneAuthPolicy
          - NONE
          - --discoveryAddress
          - istio-pilot:15010
          env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/istio/proxyv2:1.1.9
          imagePullPolicy: IfNotPresent
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          - containerPort: 15300
          - containerPort: 15301
          - containerPort: 15302
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15020
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/certs
            name: istio-certs
            readOnly: true
        serviceAccountName: monitoring-gateway-service-account
        volumes:
        - name: istio-certs
          secret:
            optional: true
            secretName: istio.monitoring-gateway-service-account
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: prometheus
    namespace: istio-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: prometheus
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: 'false'
        labels:
          app: prometheus
          chart: prometheus
          heritage: Tiller
          release: istio
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - ppc64le
              weight: 2
            - preference:
                matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - s390x
              weight: 2
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - ppc64le
                  - s390x
        containers:
        - args:
          - --storage.tsdb.retention=6h
          - --config.file=/etc/prometheus/prometheus.yml
          image: docker.io/prom/prometheus:v2.3.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
          name: prometheus
          ports:
          - containerPort: 9090
            name: http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
          resources:
            requests:
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/istio-certs
            name: istio-certs
          - mountPath: /etc/prometheus
            name: config-volume
        serviceAccountName: prometheus
        volumes:
        - configMap:
            name: prometheus
          name: config-volume
        - name: istio-certs
          secret:
            defaultMode: 420
            secretName: istio.default
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      istio: galley
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: galley
        istio: galley
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: istio-ingressgateway
      chart: gateways
      heritage: Tiller
      istio: ingressgateway
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: istio-ingressgateway
        istio: ingressgateway
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      istio: pilot
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: pilot
        istio: pilot
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: policy
      chart: mixer
      heritage: Tiller
      istio: mixer
      istio-mixer-type: policy
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
      version: 1.1.9
    name: istio-policy
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: policy
        istio: mixer
        istio-mixer-type: policy
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: telemetry
      chart: mixer
      heritage: Tiller
      istio: mixer
      istio-mixer-type: telemetry
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
      version: 1.1.9
    name: istio-telemetry
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: telemetry
        istio: mixer
        istio-mixer-type: telemetry
        release: istio
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    labels:
      app: monitoring-gateway
      chart: gateways
      heritage: Tiller
      istio: monitoring-ingressgateway
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: monitoring-gateway
    namespace: istio-system
  spec:
    minAvailable: 1
    selector:
      matchLabels:
        app: monitoring-gateway
        istio: monitoring-ingressgateway
        release: istio
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - create
    - get
    - update
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - create
    - get
    - watch
    - list
    - update
    - delete
  - apiGroups:
    - ''
    resources:
    - serviceaccounts
    - services
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      helm.sh/hook: post-delete
      helm.sh/hook-delete-policy: hook-succeeded
      helm.sh/hook-weight: '1'
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-cleanup-secrets-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - list
    - delete
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    verbs:
    - '*'
  - apiGroups:
    - config.istio.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.istio.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authentication.istio.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - rbac.istio.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - apps
    resourceNames:
    - istio-galley
    resources:
    - deployments
    verbs:
    - get
  - apiGroups:
    - ''
    resources:
    - pods
    - nodes
    - services
    - endpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resourceNames:
    - istio-galley
    resources:
    - deployments/finalizers
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: ingressgateway
      chart: gateways
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - networking.istio.io
    resources:
    - virtualservices
    - destinationrules
    - gateways
    verbs:
    - get
    - watch
    - list
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-mixer-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - config.istio.io
    resources:
    - '*'
    verbs:
    - create
    - get
    - list
    - watch
    - patch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    - endpoints
    - pods
    - services
    - namespaces
    - secrets
    - replicationcontrollers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - apps
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - config.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - rbac.istio.io
    resources:
    - '*'
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - networking.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - authentication.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - '*'
  - apiGroups:
    - extensions
    resources:
    - ingresses
    - ingresses/status
    verbs:
    - '*'
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - create
    - get
    - list
    - watch
    - update
  - apiGroups:
    - ''
    resources:
    - endpoints
    - pods
    - services
    - namespaces
    - nodes
    - secrets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: istio-reader
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - nodes
    - pods
    - services
    - endpoints
    - replicationcontrollers
    verbs:
    - get
    - watch
    - list
  - apiGroups:
    - extensions
    - apps
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    verbs:
    - get
    - list
    - watch
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: monitoring-ingressgateway
      chart: gateways
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: monitoring-gateway-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - networking.istio.io
    resources:
    - virtualservices
    - destinationrules
    - gateways
    verbs:
    - get
    - watch
    - list
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: prometheus-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - nodes
    - services
    - endpoints
    - pods
    - nodes/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
  - nonResourceURLs:
    - /metrics
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-citadel-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-citadel-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-citadel-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      helm.sh/hook: post-delete
      helm.sh/hook-delete-policy: hook-succeeded
      helm.sh/hook-weight: '2'
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-cleanup-secrets-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-cleanup-secrets-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-cleanup-secrets-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: galley
      chart: galley
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-galley-admin-role-binding-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-galley-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-galley-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: ingressgateway
      chart: gateways
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-ingressgateway-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-ingressgateway-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-ingressgateway-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: mixer
      chart: mixer
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-mixer-admin-role-binding-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-mixer-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-mixer-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      chart: istio-1.1.9
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: istio-multi
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-reader
  subjects:
  - kind: ServiceAccount
    name: istio-multi
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: pilot
      chart: pilot
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-pilot-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-pilot-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-pilot-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: sidecarInjectorWebhook
      chart: sidecarInjectorWebhook
      heritage: Tiller
      istio: sidecar-injector
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-sidecar-injector-admin-role-binding-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-sidecar-injector-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-sidecar-injector-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: monitoring-ingressgateway
      chart: gateways
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: monitoring-gateway-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: monitoring-gateway-istio-system
  subjects:
  - kind: ServiceAccount
    name: monitoring-gateway-service-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: prometheus
      chart: prometheus
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: prometheus-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: prometheus-istio-system
  subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: istio-ingressgateway-sds
    namespace: istio-system
  rules:
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: istio-ingressgateway-sds
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: istio-ingressgateway-sds
  subjects:
  - kind: ServiceAccount
    name: istio-ingressgateway-service-account
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-post-install-istio-system
    namespace: istio-system
  rules:
  - apiGroups:
    - authentication.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - networking.istio.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    verbs:
    - get
  - apiGroups:
    - extensions
    - apps
    resources:
    - deployments
    - replicasets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRole
  metadata:
    annotations:
      cloud.weave.works/launcher-info: "{\n  \"server-version\": \"master-4fe8efe\"\
        ,\n  \"original-request\": {\n    \"url\": \"/k8s/v1.7/scope.yaml\"\n  },\n\
        \  \"email-address\": \"support@weave.works\",\n  \"source-app\": \"weave-scope\"\
        ,\n  \"weave-cloud-component\": \"scope\"\n}"
    labels:
      app: weave-scope
      chart: weave-scope-agent-1.1.2
      component: agent
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: weave-scope
    name: weave-scope-agent-weave-scope
    namespace: istio-system
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    labels:
      app: security
      chart: security
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: istio
    name: istio-security-post-install-role-binding-istio-system
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: istio-security-post-install-istio-system
  subjects:
  - kind: ServiceAccount
    name: istio-security-post-install-account
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      cloud.weave.works/launcher-info: "{\n  \"server-version\": \"master-4fe8efe\"\
        ,\n  \"original-request\": {\n    \"url\": \"/k8s/v1.7/scope.yaml\"\n  },\n\
        \  \"email-address\": \"support@weave.works\",\n  \"source-app\": \"weave-scope\"\
        ,\n  \"weave-cloud-component\": \"scope\"\n}"
    labels:
      app: weave-scope
      chart: weave-scope-agent-1.1.2
      component: agent
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: weave-scope
    name: weave-scope-weave-scope
    namespace: istio-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: weave-scope-agent-weave-scope
  subjects:
  - kind: ServiceAccount
    name: weave-scope-agent-weave-scope
    namespace: istio-system
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    labels:
      app: brigade-bitbucket-gateway-brigade-bitbucket-gateway
      chart: brigade-bitbucket-gateway-0.13.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade-bitbucket-gateway
    name: brigade-bitbucket-gateway-brigade-bitbucket-gateway
    namespace: brigade
  rules:
  - apiGroups:
    - ''
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ''
    resources:
    - pods
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-api
    namespace: brigade
  rules:
  - apiGroups:
    - ''
    resources:
    - pods
    - secrets
    - pods/log
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-ctrl
    namespace: brigade
  rules:
  - apiGroups:
    - ''
    resources:
    - pods
    - secrets
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-vacuum
    namespace: brigade
  rules:
  - apiGroups:
    - ''
    resources:
    - pods
    - secrets
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
    - delete
  - apiGroups:
    - ''
    resources:
    - pods/log
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: Role
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-wrk
    namespace: brigade
  rules:
  - apiGroups:
    - ''
    resources:
    - pods
    - secrets
    - persistentvolumeclaims
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ''
    resources:
    - pods/log
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    labels:
      app: brigade-bitbucket-gateway-brigade-bitbucket-gateway
      chart: brigade-bitbucket-gateway-0.13.0
      heritage: Tiller
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
      release: brigade-bitbucket-gateway
    name: brigade-bitbucket-gateway-brigade-bitbucket-gateway
    namespace: brigade
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: brigade-bitbucket-gateway-brigade-bitbucket-gateway
  subjects:
  - kind: ServiceAccount
    name: brigade-bitbucket-gateway-brigade-bitbucket-gateway
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-api
    namespace: brigade
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: brigade-brigade-api
  subjects:
  - kind: ServiceAccount
    name: brigade-brigade-api
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-ctrl
    namespace: brigade
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: brigade-brigade-ctrl
  subjects:
  - kind: ServiceAccount
    name: brigade-brigade-ctrl
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-vacuum
    namespace: brigade
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: brigade-brigade-vacuum
  subjects:
  - kind: ServiceAccount
    name: brigade-vacuum
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    labels:
      app.kubernetes.io/instance: brigade
      app.kubernetes.io/managed-by: Tiller
      app.kubernetes.io/name: brigade-brigade
      helm.sh/chart: brigade-1.0.0
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-brigade-wrk
    namespace: brigade
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: brigade-brigade-wrk
  subjects:
  - kind: ServiceAccount
    name: brigade-worker
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    labels:
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: brigade-admin-privileges
    namespace: default
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - kind: ServiceAccount
    name: brigade-worker
    namespace: brigade
- apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      storageclass.beta.kubernetes.io/is-default-class: 'false'
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: build-storage
    namespace: brigade
  provisioner: kubernetes.io/host-path
  reclaimPolicy: Retain
- apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    annotations:
      storageclass.beta.kubernetes.io/is-default-class: 'false'
    labels:
      addonmanager.kubernetes.io/mode: EnsureExists
      kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
      kubenix/project-name: kubenix
    name: cache-storage
    namespace: brigade
  provisioner: kubernetes.io/host-path
  reclaimPolicy: Retain
kind: List
labels:
  kubenix/hash: 62e900dedc7aa42f3034db3dab01958167295553
